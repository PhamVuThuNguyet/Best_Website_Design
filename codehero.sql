-- phpMyAdmin SQL Dump
-- version 5.0.2
-- https://www.phpmyadmin.net/
--
-- Host: 127.0.0.1
-- Generation Time: Oct 11, 2020 at 05:20 PM
-- Server version: 10.4.13-MariaDB
-- PHP Version: 7.4.8

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Database: `codehero`
--

-- --------------------------------------------------------

--
-- Table structure for table `accounts`
--

CREATE TABLE `accounts` (
  `id` int(10) UNSIGNED NOT NULL,
  `displayname` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `user` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `password` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `status` int(11) NOT NULL,
  `accessright` int(11) NOT NULL,
  `coin` int(11) NOT NULL,
  `phone` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `email` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL,
  `avatar` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `sign` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `descript` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `cover_img` text COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `provider` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `provider_id` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `accounts`
--

INSERT INTO `accounts` (`id`, `displayname`, `user`, `password`, `status`, `accessright`, `coin`, `phone`, `email`, `created_at`, `updated_at`, `avatar`, `sign`, `descript`, `cover_img`, `provider`, `provider_id`) VALUES
(0, '[Hệ thống]', 'system', 'system', 0, 2, 0, '0', '0', '2020-07-28 17:00:00', '2020-07-30 17:00:00', NULL, NULL, NULL, NULL, NULL, NULL),
(8, 'Thu Nguyệt', 'thunguyet', '62df0ed54de2fc8054e1be1f2afb9f0d', 0, 2, 0, '0', 'pvtnguyet.19it1@sict.udn.vn', '2020-06-30 01:21:00', '2020-09-13 05:11:19', '/public/images/anh-avatar-dep.jpg', NULL, NULL, '/public/images/wallpaper.jpg', NULL, NULL),
(9, 'Nhẫn', 'ngocnhan', '25d55ad283aa400af464c76d713c07ad', 0, 1, 0, '0', 'nnnhan@gmail.com', '2020-06-30 23:24:47', '2020-06-30 23:24:47', '/public/images/course-head.png', NULL, NULL, '/public/images/wallpaper.jpg', NULL, NULL),
(10, 'Tuấn Long', 'tuanlong', '25d55ad283aa400af464c76d713c07ad', 0, 2, 0, '0', 'tuanlong@gmail.com', '2020-07-01 08:33:06', '2020-07-01 08:33:06', '/public/images/avt_def.png', NULL, NULL, '/public/images/wallpaper.jpg', NULL, NULL),
(11, 'Boman', 'boman', '25d55ad283aa400af464c76d713c07ad', 0, 2, 0, '0', 'boman@gmail.com', '2020-07-01 17:36:14', '2020-07-02 18:15:46', '/public/images/cZ1E-anh-avatar-dep-2.jpg', NULL, NULL, '/public/images/wallpaper.jpg', NULL, NULL),
(12, 'Luffy', 'luffy', '25d55ad283aa400af464c76d713c07ad', 0, 2, 0, '0', 'luffy@gmail.com', '2020-07-01 17:39:05', '2020-07-02 18:26:14', '/public/images/unnamed.jpg', NULL, NULL, '/public/images/wallpaper.jpg', NULL, NULL),
(13, 'Zoro', 'zoro', '25d55ad283aa400af464c76d713c07ad', 0, 1, 0, '0', 'zoro@gmail.com', '2020-07-02 18:41:58', '2020-07-02 19:36:34', '/public/images/avatar-dep-nhat-111_112148.jpg', NULL, NULL, '/public/images/Yosemite-National-Park_wallpaper_029-660x330', NULL, NULL),
(14, 'Ngọc Nhẫn', 'admin', '21232f297a57a5a743894a0e4a801fc3', 0, 0, 45799, '0', 'admin', '2020-07-02 22:50:50', '2020-09-04 15:17:29', '/public/images/hinh-avatar-dep-1.jpg', NULL, NULL, '/public/images/Yosemite-National-Park_wallpaper_029-660x330.jpg', NULL, NULL),
(15, 'Yukino', 'yukino', '144b847db2f01b12a617ace596b9b520', 0, 1, 6000, '0', 'yukino', '2020-07-08 07:47:00', '2020-07-18 13:15:23', '/public/images/avacute.jpg', NULL, NULL, '/public/images/wallpaper.jpg', NULL, NULL),
(16, 'Văn Rin', 'zero', 'd02c4c4cde7ae76252540d116a40f23a', 0, 1, 0, '0', 'abc@gmail.com', '2020-07-08 08:06:13', '2020-07-08 08:06:13', '/public/images/ava3.jpg', NULL, NULL, '/public/images/wallpaper.jpg', NULL, NULL),
(17, 'Asuna', 'suna', '22e09a880b61ced6828507a0a2e0d87e', 0, 2, 0, '0', 'suna@GMAIL.COM', '2020-07-08 08:07:03', '2020-07-08 08:07:03', '/public/images/ava4.jpg', NULL, NULL, '/public/images/wallpaper.jpg', NULL, NULL),
(18, 'Rem', 'rem', '5cadb523cb6909f92350f70f124adfb8', 0, 2, 0, '0', 'rem', '2020-07-08 08:07:25', '2020-07-08 08:07:25', '/public/images/ava5.jpg', NULL, NULL, '/public/images/wallpaper.jpg', NULL, NULL),
(19, 'Ichika', 'ichika', 'f6d7bd79e3be8fe9699cb4c9f3032935', 0, 1, 0, '0', 'ichika', '2020-07-08 08:08:48', '2020-07-08 08:08:48', '/public/images/ava6.jpg', NULL, NULL, '/public/images/wallpaper.jpg', NULL, NULL),
(20, 'Natsuki', 'natsuki', 'b3f137694431f789c2b04887f2cae81b', 0, 2, 41444, '0', 'natsuki', '2020-07-08 08:09:12', '2020-07-10 08:23:11', '/public/images/ava7.jpg', NULL, NULL, '/public/images/wallpaper.jpg', NULL, NULL),
(21, 'Bá chủ', 'boss', 'ceb8447cc4ab78d2ec34cd9f11e4bed2', 0, 2, 0, '0', 'boss', '2020-07-08 08:20:07', '2020-07-08 08:20:07', '/public/images/ava8.jpg', NULL, NULL, '/public/images/wallpaper.jpg', NULL, NULL),
(22, 'BOT', 'bot', 'fabcaa97871555b68aa095335975e613', 0, 3, 0, '0', 'bot', '2020-07-08 12:25:30', '2020-07-08 12:25:30', '/public/images/ava9.jpg', NULL, NULL, '/public/images/wallpaper.jpg', NULL, NULL),
(23, 'Random', 'random', '7ddf32e17a6ac5ce04a8ecbf782ca509', 0, 3, 11999, '0', 'random', '2020-07-09 05:16:23', '2020-07-10 11:47:26', '/public/images/ava10.jpg', NULL, NULL, NULL, NULL, NULL);

-- --------------------------------------------------------

--
-- Table structure for table `account_course`
--

CREATE TABLE `account_course` (
  `ID` int(10) UNSIGNED NOT NULL,
  `id_user` int(11) NOT NULL,
  `id_course` int(11) NOT NULL,
  `coin` int(11) NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `account_course`
--

INSERT INTO `account_course` (`ID`, `id_user`, `id_course`, `coin`, `created_at`, `updated_at`) VALUES
(113, 14, 23, 4000, '2020-07-30 15:34:58', '2020-07-30 15:34:58'),
(114, 14, 24, 4000, '2020-07-31 08:18:21', '2020-07-31 08:18:21'),
(115, 14, 14, 3000, '2020-09-04 15:17:29', '2020-09-04 15:17:29'),
(116, 8, 14, 3000, '2020-09-13 05:11:19', '2020-09-13 05:11:19');

-- --------------------------------------------------------

--
-- Table structure for table `blog`
--

CREATE TABLE `blog` (
  `id_blog` int(10) UNSIGNED NOT NULL,
  `title_blog` text COLLATE utf8mb4_unicode_ci NOT NULL,
  `content_blog` text COLLATE utf8mb4_unicode_ci NOT NULL,
  `img_blog` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `cate_parent` int(11) NOT NULL,
  `rate_blog` double NOT NULL,
  `view_blog` int(11) NOT NULL,
  `auth` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL,
  `tag_blog` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `stt_blog` int(11) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `blog`
--

INSERT INTO `blog` (`id_blog`, `title_blog`, `content_blog`, `img_blog`, `cate_parent`, `rate_blog`, `view_blog`, `auth`, `created_at`, `updated_at`, `tag_blog`, `stt_blog`) VALUES
(12, '10 Chứng Chỉ IT Được Trả Lương Cao Nhất Năm 2020', '<p><strong>Nếu bạn là một sinh viên IT đang muốn làm đầy bộ kỹ năng của mình, bổ sung vào hồ sơ xin việc hay một lập trình viên muốn tìm kiếm những mức lương hậu hĩnh hơn, bạn nên nghĩ đến việc nâng cấp bộ kỹ năng của mình để có thể tiếp cận những cơ hội mới. Với những lợi thế tuyệt vời từ việc học online, đây chính là lúc để bạn tìm kiếm những chứng chỉ IT giá trị.</strong></p>\r\n\r\n<p>Nếu bạn không biết phải học như thế nào, hãy nhớ rằng giờ đây bạn hoàn toàn có thể học và đạt được các chứng chỉ này từ xa vì hầu hết các dịch vụ học CNTT đều đặt cả chương trình giảng dạy và kỳ thi chứng chỉ trực tuyến và theo yêu cầu. Điều này làm cho việc đạt được chứng nhận mới hoàn toàn khả thi đối với những người gặp cách biệt về mặt địa lý, thời gian và cả chi phí.</p>\r\n\r\n<p>80% chuyên gia CNTT nói rằng các chứng chỉ rất hữu ích trong việc phát triển sự nghiệp. Người ta đã đã xem xét dữ liệu để xác định các chứng chỉ CNTT được trả lương cao nhất trên thế giới hiện nay và chia nhỏ các lựa chọn hàng đầu dựa trên mô tả về chuyên môn cũng như phạm vi trả lương tương ứng.</p>\r\n\r\n<p>Trước khi tham khảo danh sách 10 chứng chỉ này, bạn nên nhớ rằng xu hướng toàn cầu thì luôn thay đổi, và danh sách này cũng thế. Tất cả thông tin chỉ mang tính chất tham khảo trong ngắn hạn mà thôi.</p>\r\n\r\n<p>Còn bây giờ, chúc các bạn tìm được những kiến thức phù hợp cho bản thân mình!</p>\r\n\r\n<h3><a href=\"https://www.globalknowledge.com/us-en/training/certification-prep/brands/itil/section/itil-foundation/itil-foundation/\">10. Thư viện cơ sở hạ tầng công nghệ thông tin - Information Technology Infrastructure Library (ITIL)</a></h3>\r\n\r\n<p>Rơi từ vị trí thứ 7 năm ngoái xuống vị trí thứ 10 vào năm nay, ITIL là framework được chấp nhận rộng rãi nhất cho vị trí quản lý CNTT trên thế giới. Khóa học này đã được tổ chức trong suốt 30 năm qua. Bao gồm một tập hợp các kiến thức thực tiễn tốt nhất để cung cấp dịch vụ CNTT cho nhu cầu của các tổ chức, ITIL bao gồm một danh sách các chuyên ngành quan trọng như hoạt động CNTT, quản lý sự cố, quản lý năng lực và tính khả dụng. Phần thực hành nhằm kiểm soát hoặc giảm chi phí CNTT, cải thiện dịch vụ CNTT và cân bằng tài nguyên CNTT.</p>\r\n\r\n<p>ITIL Foundation là điểm khởi đầu cho chứng nhận và cung cấp hiểu biết chung về vòng đời dịch vụ CNTT. Các nhà quản lý được ITIL Foundation chứng nhận kiếm được trung bình&nbsp;<strong>129,402</strong>&nbsp;đô mỗi năm.</p>\r\n\r\n<p><img alt=\"\" src=\"https://codelearn.io/Media/Default/Users/PhanhTrinh2706/10khoahoc/10-chung-chi-IT-dat-gia-nhat-2020-1-1.jpg\" width=\"612\" /></p>\r\n\r\n<h3><a href=\"https://www.vmware.com/education-services/certification/vcp-dcv.html#:~:text=The%20VCP%2DDCV%202020%20certification,the%20transformation%20to%20cloud%20computing.\">9. VCP-DCV: VMware Certified Professional 6 - Ảo hóa trung tâm dữ liệu</a></h3>\r\n\r\n<p>Khóa học này khá mới mẻ trong năm 2020. VCP-DCV: VMware Certified Professional 6 -&nbsp;<strong>Ảo hóa trung tâm dữ liệu</strong>&nbsp;cung cấp các kỹ năng cần thiết để xây dựng cơ sở hạ tầng ảo có thể mở rộng bằng cách sử dụng VMware vSphere 6. Các ứng viên sẽ tìm hiểu cách triển khai, hợp nhất và quản trị các công nghệ ảo hóa, như vSphere High Avencies và Distributed Resource Scheduler clusters.</p>\r\n\r\n<p>Các chuyên gia CNTT có chứng chỉ này đã kiếm được trung bình 7,4 chứng chỉ nghề nghiệp, số tiền cao nhất trong danh sách của Global Knowledge. Chuyên gia CNTT đã đạt được chứng nhận này thường kiếm được mức lương trung bình là&nbsp;<strong>130,226 đô</strong>&nbsp;mỗi năm.</p>\r\n\r\n<p><img alt=\"\" src=\"https://codelearn.io/Media/Default/Users/PhanhTrinh2706/10khoahoc/10-chung-chi-IT-dat-gia-nhat-2020-3-1.jpg\" width=\"352\" /></p>\r\n\r\n<h3><a href=\"https://www.googleadservices.com/pagead/aclk?sa=L&amp;ai=DChcSEwjY1ISiy5fqAhUXdmAKHesVCDQYABAAGgJ0bQ&amp;ohost=www.google.com&amp;cid=CAASEuRo0jqn2QV09z_pIFIl5ez0sQ&amp;sig=AOD64_3X9L8k4oXu7BroF-wacNjIcH9iOw&amp;q=&amp;ved=2ahUKEwiFh_6hy5fqAhWUBIgKHW74APkQ0Qx6BAgPEAE&amp;adurl=\">8. AWS Certified Cloud Practitioner</a></h3>\r\n\r\n<p>Mới lọt vào danh sách top 10 năm nay, AWS Certified Cloud Practitioner là điểm khởi đầu cho nhiều chứng chỉ đám mây phổ biến, bao gồm Kiến trúc sư giải pháp AWS, Nhà phát triển, Kỹ sư DevOps và Quản trị viên SysOps.</p>\r\n\r\n<p>Chứng nhận này được thiết kế cho các chuyên gia tìm kiếm kiến thức chung về các dịch vụ đám mây AWS. Là một chứng chỉ cấp cơ bản, nó thường được các LTV học khá sớm để trở thành là bàn đạp cho các chứng chỉ AWS chuyên biệt hơn trong tương lai. Với sự gia tăng trong nhu cầu quản lý đám mây và AWS trong năm nay, các chương trình AWS Certified Cloud Practitioner sẽ tiếp tục tăng. Các bạn có thể tham khảo lộ trình chinh phục các chứng chỉ AWS&nbsp;<a href=\"https://codelearn.io/sharing/cloud-computing-2-thang-de-dan-lap-trinh-chuyen-minh-giua-dai-dich\">tại đây</a></p>\r\n\r\n<p>AWS Certified Cloud Practitioner đào tạo khả năng xác định các nguyên tắc kiến ​​trúc và cơ sở hạ tầng đám mây cơ bản, cũng như các dịch vụ chính trên nền tảng AWS. Một chuyên gia được chứng nhận cũng có thể mô tả các khía cạnh bảo mật và tuân thủ cơ bản của nền tảng. Hơn&nbsp;<strong>12%</strong>&nbsp;các chuyên gia CNTT của Hoa Kỳ có kế hoạch theo đuổi chứng nhận này vào năm 2020 theo Global Knowlegde và mong đợi kiếm được trung bình $ 131.465 mỗi năm.</p>\r\n\r\n<p>&nbsp;<img alt=\"\" src=\"https://codelearn.io/Media/Default/Users/PhanhTrinh2706/10khoahoc/10-chung-chi-IT-dat-gia-nhat-2020-4.jpg\" width=\"625\" /></p>\r\n\r\n<h3><a href=\"https://www.isaca.org/credentialing/cisa\">7. Kiểm toán viên hệ thống thông tin - Certified Information Systems Auditor (CISA)</a></h3>\r\n\r\n<p>Một trong những chứng chỉ lâu đời nhất và được coi trọng nhất chính là Certified Information Systems Auditor (CISA). Mới được liệt kê trong năm nay, chứng nhận CISA xác nhận các kỹ năng kiểm toán, rủi ro và an ninh mạng. Các chuyên gia CNTT được CISA chứng nhận được thuê để đảm bảo rằng các tài sản quan trọng của doanh nghiệp được bảo mật và duy trì tốt.</p>\r\n\r\n<p>Để đạt được chứng nhận này, bạn phải vượt qua kỳ thi Kiểm toán hệ thống thông tin được chứng nhận (CISA), bao gồm năm lĩnh vực, đó là Hệ thống thông tin kiểm toán, Quản trị và quản lý CNTT, Thu thập, phát triển và triển khai hệ thống thông tin, Vận hành, bảo trì hệ thống thông tin, và Quản lý Dịch vụ và Bảo vệ Tài sản Thông tin. Các vai trò công việc có khả năng nhất cho chứng nhận này là kiểm toán viên CNTT và mức lương trung bình cho những người có chứng chỉ CISA là $ 132,278 mỗi năm.</p>\r\n\r\n<p><img alt=\"\" src=\"https://codelearn.io/Media/Default/Users/PhanhTrinh2706/10khoahoc/10-chung-chi-IT-dat-gia-nhat-2020-5.jpg\" width=\"537\" /></p>\r\n\r\n<h3><a href=\"https://www.globalknowledge.com/us-en/course/171661/cissp-certification-prep-course/\">6. Chứng nhận hệ thống thông tin bảo mật chuyên nghiệp - Certified Information Systems Security Professional (CISSP)</a></h3>\r\n\r\n<p>Nếu bạn làm việc trong lĩnh vực phân tích, kiểm toán, kỹ thuật hệ thống hoặc bất cứ lĩnh vực nào đó tương tự, thì Chuyên gia bảo mật hệ thống thông tin được chứng nhận (CISSP) có thể là chứng nhận hoàn hảo cho bạn. CISSP là những chuyên gia đảm bảo thông tin, chủ yếu chịu trách nhiệm xác định kiến trúc, quản lý, thiết kế và kiểm soát nhằm đảm bảo an ninh cho công ty.</p>\r\n\r\n<p>Nếu bạn vượt qua bài kiểm tra, đòi hỏi bạn phải có tối thiểu năm năm kinh nghiệm liên quan, bạn có thể mong đợi mức lương trung bình là 141,452 đô la mỗi năm. Điều đáng lưu ý là, ngay cả sau khi nhận được chứng nhận, bạn vẫn sẽ cần nhận tín dụng Giáo dục thường xuyên mỗi năm để duy trì thông tin đăng nhập của mình.</p>\r\n\r\n<p><img alt=\"\" src=\"https://codelearn.io/Media/Default/Users/PhanhTrinh2706/10khoahoc/10-chung-chi-IT-dat-gia-nhat-2020-2-1.jpg\" width=\"604\" /></p>\r\n\r\n<h3><a href=\"https://www.globalknowledge.com/us-en/course/87588/project-management-professional-pmp-exam-prep-boot-camp/\">5. Chuyên viên quản lý dự án - Project Management Professional (PMP)</a></h3>\r\n\r\n<p>Chứng chỉ Quản lý dự án (PMP) được tạo và quản lý bởi Viện quản lý dự án (PMI) và là một trong những chứng chỉ quản lý dự án được công nhận nhất hiện nay. Chứng nhận này chứng tỏ rằng bạn có năng lực khi quản lý các dự án và nhóm dự án. Bạn sẽ được kiểm tra trong năm lĩnh vực cụ thể: khởi xướng, lập kế hoạch, thực hiện, giám sát và kiểm soát và kết thúc.</p>\r\n\r\n<p>Tuy nhiên, trước khi bạn được chứng nhận, bạn sẽ phải hoàn thành ít nhất 35 giờ đào tạo liên quan trước khi bạn có thể thực hiện bài kiểm tra. Nếu bạn có bằng Cử nhân, thì bạn cũng cần 4.500 giờ kinh nghiệm quản lý dự án (những người không có bằng cấp sẽ cần 7.500 giờ). Nhận được chứng chỉ PMP phải mất nhiều năm nhưng nó có giá trị. PMP hiện kiếm được trung bình $ 143,493 mỗi năm.</p>\r\n\r\n<p><img alt=\"\" src=\"https://codelearn.io/Media/Default/Users/PhanhTrinh2706/10khoahoc/10-chung-chi-IT-dat-gia-nhat-2020-6.jpg\" width=\"515\" /></p>\r\n\r\n<h3><a href=\"https://www.globalknowledge.com/us-en/training/certification-prep/topics/cybersecurity/section/isaca/crisc-certified-in-risk-and-information-systems-control/\">4. Chứng nhận kiểm soát rủi ro và hệ thống thông tin - Certified in Risk and Information Systems Control (CRISC)</a></h3>\r\n\r\n<p>Thực hiện bài kiểm tra được chứng nhận về kiểm soát rủi ro và hệ thống thông tin (CRISC) trong bốn lĩnh vực chính: Nhận dạng, đánh giá, phản hồi và giảm thiểu, cũng như theo dõi và báo cáo kiểm soát. Trước đây chỉ là chứng chỉ CNTT có nhu cầu cao thứ chín, nhưng nay CRISC đã nổi lên gần đỉnh như một sự phản ánh của ngành công nghiệp đổi mới tập trung vào việc đánh giá rủi ro CNTT trong kinh doanh. Nếu bạn có điều kiện tiên quyết ba năm kinh nghiệm liên quan và việc xác định và quản lý rủi ro nghe có vẻ thú vị đối với bạn, thì chứng chỉ CRISC có thể đáng để kiểm tra.</p>\r\n\r\n<p>Nếu bạn vượt qua bài kiểm tra và tìm thấy vai trò, ưu điểm với chứng nhận CRISC kiếm được trung bình 146.480 đô la mỗi năm. Bài kiểm tra có 150 câu hỏi và kéo dài khoảng bốn giờ.</p>\r\n\r\n<p><img alt=\"\" src=\"https://codelearn.io/Media/Default/Users/PhanhTrinh2706/10khoahoc/10-chung-chi-IT-dat-gia-nhat-2020-7.jpg\" width=\"539\" /></p>\r\n\r\n<h3><a href=\"https://www.globalknowledge.com/us-en/course/84096/cism-prep-course/\">3. Chứng chỉ quản lý bảo mật thông tin - Certified Information Security Manager (CISM)</a></h3>\r\n\r\n<p>Chứng chỉ Quản lý an toàn thông tin (CISM) có bước nhảy vọt từ vị trí thứ 8 vào năm ngoái đến vị trí thứ 3 vào năm 2020, trở thành ngành học được trả lương cao nhất với trọng tâm chính là quản lý an ninh thông tin. Công việc của bạn sẽ là thiết kế các giao thức bảo mật cũng như quản lý bảo mật của công ty. Là một CISM, bạn sẽ có quyền truy cập vào các ngành kinh doanh ngoài CNTT, giúp bạn đối mặt với các bên liên quan của công ty. Đăng ký thông qua trang web ISACA cũng như công cụ định vị kỳ thi này.</p>\r\n\r\n<p>CISM cũng được trả lương cao. Trung bình, bạn có thể kiếm được khoảng 148.622 đô la mỗi năm. Tuy nhiên, nếu bạn chọn đi theo con đường này, thì bạn sẽ phải làm một bài kiểm tra 200 câu hỏi về các chủ đề như quản trị an ninh thông tin, quản lý rủi ro thông tin và quản lý sự cố.</p>\r\n\r\n<p><img alt=\"\" src=\"https://codelearn.io/Media/Default/Users/PhanhTrinh2706/10khoahoc/10-chung-chi-IT-dat-gia-nhat-2020-9.jpg\" width=\"608\" /></p>\r\n\r\n<h3><a href=\"https://www.globalknowledge.com/us-en/course/90734/architecting-on-aws-1/\">2. Kiến trúc sư giải pháp AWS - AWS Certified Solutions Architect-Associate</a></h3>\r\n\r\n<p>Chứng chỉ Kiến trúc sư Giải pháp AWS đã quay trở lại danh sách những chứng chỉ đắt giá nhất năm ngoái và đã tự mình đạt được chứng chỉ CNTT có nhu cầu cao thứ hai vào năm 2020. Kỳ thi Kiến trúc sư Giải pháp AWS kiểm tra chuyên môn của bạn về thiết kế hệ thống trên AWS. Nếu bạn có kinh nghiệm thực hành với các dịch vụ AWS và được sử dụng để kiến trúc các hệ thống phân tán quy mô lớn, thì chứng nhận này có thể chính xác là những gì bạn đang tìm kiếm.</p>\r\n\r\n<p>Để đạt được chứng nhận này, các ứng viên phải vượt qua kỳ thi Kiến trúc sư giải pháp được chứng nhận AWS - Associate (SAA-C01). Chứng nhận AWS Certified Cloud Practice là điều kiện tiên quyết. AWS cũng đề xuất một năm kinh nghiệm thiết kế hệ thống thực hành trên AWS trước khi thực hiện bài kiểm tra này. Bài kiểm tra mất 80 phút và được quản lý tại các trung tâm PSI trên khắp Hoa Kỳ. Kiến trúc sư giải pháp được chứng nhận AWS thành công có thể kiếm được trung bình $ 149,446 mỗi năm.</p>\r\n\r\n<p><img alt=\"\" src=\"https://codelearn.io/Media/Default/Users/PhanhTrinh2706/10khoahoc/10-chung-chi-IT-dat-gia-nhat-2020-8.jpg\" width=\"416\" /></p>\r\n\r\n<h3><a href=\"https://www.globalknowledge.com/us-en/training/certification-prep/brands/google-cloud/section/cloud-architect/google-certified-professional-cloud-architect/\">1. Kiến trúc sư đám mây chuyên nghiệp được chứng nhận của Google - Google Certified Professional Cloud Architect</a></h3>\r\n\r\n<p>Ra mắt vào năm 2017 và đứng đầu danh sách trong hai năm liên tiếp là Kiến trúc sư đám mây chuyên nghiệp được chứng nhận của Google, ngành học cho phép các chuyên gia CNTT chứng nhận là kiến trúc sư đám mây trên Google Cloud Platform (GCP). Hoàn thành chứng nhận này đảm bảo bạn sẽ có khả năng thiết kế, phát triển và quản lý kiến trúc đám mây của Google bằng cách sử dụng các công nghệ GCP.</p>\r\n\r\n<p>Kiếm được chứng nhận này đòi hỏi một kiến thức sâu sắc về những giải pháp để áp dụng trong các tình huống khác nhau. Các kỹ năng đám mây tiếp tục có nhu cầu cao và thành thạo các công cụ Google trên các giải pháp an toàn, có thể mở rộng và đáng tin cậy sẽ rất quan trọng đối với hầu hết các tổ chức trong tương lai gần. Kiến trúc sư đám mây chuyên nghiệp được chứng nhận của Google có thể mong đợi kiếm được trung bình 175.761 đô la mỗi năm.</p>\r\n\r\n<p><img alt=\"\" src=\"https://codelearn.io/Media/Default/Users/PhanhTrinh2706/10khoahoc/10-chung-chi-IT-dat-gia-nhat-2020-10.jpg\" width=\"402\" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3><strong>Tạm kết</strong></h3>\r\n\r\n<p>Trên đây là 10 chứng chỉ đắt giá nhất năm 2020 và đem lại cho các bạn những cơ hội nghề nghiệp cùng với mức thu nhập cực tốt. Chúc các bạn có sự lựa chọn thông thái cho con đường sự nghiệp của mình</p>', '/images/948771593590819.jpg', 4, 5, 10, '8', '2020-07-01 01:06:59', '2020-10-09 08:24:36', 'laptrinh;huongnghiep;nangcao', 0),
(13, 'Hướng Dẫn Tạo VPN Server Với Raspberry Pi', '<h1>&nbsp;</h1>\r\n\r\n<p><strong>Chào các bạn, chắc hẳn các bạn đã nghe qua về VPN rồi, qua bài viết này mình sẽ tản mạn một chút về VPN và hướng dẫn mọi người tạo một VPN server tại nhà rất đơn giản với một con Raspberry Pi nhỏ gọn. Cùng bắt đầu nhé!</strong></p>\r\n\r\n<h3>1. VPN là gì?</h3>\r\n\r\n<p>VPN viết tắt của Virtual Private Network &ndash; mạng riêng ảo. Để hiểu rõ hơn khái niệm này, chúng ta sẽ chia sẽ chia thành hai phần Virtual (ảo) và Private network (mạng riêng).</p>\r\n\r\n<ul>\r\n	<li>Virtual có nghĩa là nó không thực sự tồn tại dưới dạng vật lý mà là dạng phần mềm.</li>\r\n	<li>Private network là đối ngược lại với public network. Nói một cách cụ thể, mạng riêng là mạng không thể định tuyến, chủ yếu sử dụng địa chỉ IP riêng (không cần phải là địa chỉ IP riêng, nhưng đây là trường hợp phổ biến nhất do khan hiếm IPv4) và do đó không thể truy cập được trên internet. Nó thường an toàn hơn nhiều so với mạng công cộng vì mạng riêng thường hạn chế kết nối với một số nhóm người nhất định như nhân viên công ty và dữ liệu được truyền trên mạng riêng có thể dễ dàng bị tin tặc ngồi trên mạng công cộng.</li>\r\n</ul>\r\n\r\n<p>Vì vậy, mạng riêng ảo cùng nhau là một công nghệ cho phép các thiết bị trên mạng công cộng kết nối an toàn với các thiết bị trên mạng riêng. Dữ liệu thực sự vẫn được truyền trên mạng công cộng, nhưng công nghệ giúp kết nối an toàn như thể dữ liệu được truyền trên mạng riêng.</p>\r\n\r\n<h3>2. VPN có thể làm gì?</h3>\r\n\r\n<p>VPN mã hóa tất cả dữ liệu bạn gửi qua internet</p>\r\n\r\n<p>Khi bạn được kết nối với máy chủ VPN, tất cả lưu lượng truy cập internet của bạn được mã hóa. Điều này có nghĩa là không ai có thể thấy những gì bạn đang làm trực tuyến, ngay cả nhà cung cấp dịch vụ internet (ISP) của bạn. Và điều đó có nghĩa là ISP của bạn cũng không thể điều tiết tốc độ của bạn, điều này thường xảy ra nếu bạn đang làm một việc gì đó đòi hỏi tốc độ cao như phát trực tuyến hoặc chơi game.</p>\r\n\r\n<p><img alt=\"\" src=\"https://codelearn.io/Media/Default/Users/leduynhat98/pivpn/Nh%C3%B3m-15_VPN-Respberry-Pi_B%C3%A1o-c%C3%A1o-gi%E1%BB%AFa-k%E1%BB%B317594.png\" width=\"516\" /></p>\r\n\r\n<p>Mã hóa ngăn chặn tin tặc nhìn thấy thông tin nhạy cảm mà bạn nhập vào các trang web, như mật khẩu của bạn. Điều này đặc biệt quan trọng nếu bạn đang sử dụng WiFi công cộng vì tội phạm mạng dễ dàng theo dõi kết nối của bạn trên các mạng công cộng. Nhưng VPN đảm bảo rằng ngay cả khi ai đó đánh cắp dữ liệu của bạn, họ sẽ không thể giải mã được hoặc thậm chí hiểu nó.</p>\r\n\r\n<p>VPN của bạn cũng che giấu địa chỉ IP của bạn&nbsp;</p>\r\n\r\n<p>Các trang web và dịch vụ, như Netflix, sử dụng IP của bạn để xác định vị trí của bạn. Khi bạn kết nối với máy chủ VPN, các trang web bạn truy cập chỉ thấy địa chỉ IP của VPN. Hoặc đơn cử như là việc bạn muốn lên Pỏn Hup để tìm code nhưng lại bị các nhà mạng chặn (có thể là chặn IP hoặc sử dụng DPI) thì bạn có thể hoàn toàn truy cập đến một VPN server nằm ở ngoài phạm vi quản lý của ISP đó.&nbsp;</p>\r\n\r\n<p>Vì họ không còn thấy IP thực của bạn nữa nên họ không thể thấy bạn đang ở đâu. Điều này rất cần thiết nếu bạn muốn torrent, hoặc bỏ qua geoblocks và kiểm duyệt. Điều đó có nghĩa là bạn có thể truy cập bất kỳ chương trình, bộ phim hoặc trò chơi nào trên thế giới và duyệt hoàn toàn tự do ở mọi quốc gia bạn đến.</p>\r\n\r\n<p>Ta xét hai ví dụ sau khi người dùng sử dụng browser truy cập đến trang web whatismyipaddress.com và gừi yêu cầu đến server đó. Ví dụ này tham khảo tử&nbsp;<a href=\"https://medium.com/@zicodeng/how-vpn-works-b7549dcc6ce4\">bài viết&nbsp;</a></p>\r\n\r\n<p>Đây là hành trình của gói tin khi không có VPN.</p>\r\n\r\n<p><img alt=\"\" src=\"https://codelearn.io/Media/Default/Users/leduynhat98/pivpn/Nh%C3%B3m-15_VPN-Respberry-Pi_B%C3%A1o-c%C3%A1o-gi%E1%BB%AFa-k%E1%BB%B324065.png\" width=\"605\" /></p>\r\n\r\n<p><strong>Bước 1</strong>: người dùng mở trang web whatismyipaddress.com và gửi yêu cầu đến máy chủ whatismyipaddress.com. Gói được khởi tạo từ PC của người dùng để gói có địa chỉ IP nguồn 10.19.190.132, là địa chỉ IP riêng của PC của người dùng (giả sử bộ định tuyến đang sử dụng DHCP để gán địa chỉ IP riêng 10.19.190.132 cho PC của người dùng). Bởi vì yêu cầu này được gửi đến máy chủ whatismyipaddress.com. Vì vậy, gói có địa chỉ đích 128.95.120.1 (giả sử bản ghi DNS whatismyipaddress.com được lưu trữ cục bộ trong PC của người dùng).</p>\r\n\r\n<p><strong>Bước 2</strong>: khi gói từ PC của người dùng đến bộ định tuyến, bộ định tuyến sẽ sửa đổi địa chỉ IP nguồn của gói và thay thế bằng địa chỉ công khai riêng 205.175.106.121 trước khi gửi gói tin (đôi khi cổng nguồn cũng được sửa đổi trong trường hợp mối quan hệ một-nhiều). Làm thế nào để bộ định tuyến biết gói thiết bị được kết nối này thuộc về nếu địa chỉ IP nguồn và cổng của nó bị thay đổi? Câu trả lời là giao thức NAT (Dịch địa chỉ mạng). Bộ định tuyến sẽ giữ một bảng chuyển tiếp NAT ánh xạ các địa chỉ IP trên mạng bên trong thành địa chỉ IP sang mạng bên ngoài.</p>\r\n\r\n<p>Khi một gói có địa chỉ IP đích 205.175.106.121 và cổng 1234 đến bộ định tuyến từ bộ định tuyến khác, bộ định tuyến sẽ tra cứu bảng chuyển tiếp NAT và chuyển tiếp gói đó đến thiết bị được kết nối có địa chỉ IP riêng 10.19.190.132, đó là PC của người dùng. Điều quan trọng cần biết là ở bước này, gói thực sự được chuyển trực tiếp đến ISP mà không cần thông qua bất kỳ bộ định tuyến nào khác (điều này có thể được xác minh bằng cách sử dụng lệnh traceroute). Kết nối của Chúng ta với internet nói đúng bắt đầu tại ISP của Chúng ta. Nói cách khác, Chúng ta tiếp cận internet thế giới thông qua ISP.</p>\r\n\r\n<p><strong>Bước 3</strong>: sơ đồ đơn giản hóa hành trình của gói từ ISP đến máy chủ whatismyipaddress.com. Trong thực tế, gói thường cần phải đi qua nhiều bộ định tuyến để đến máy chủ. Chuyến đi từ bộ định tuyến này đến bộ định tuyến khác được gọi là một bước nhảy. Vì vậy, gói cần phải thực hiện nhiều bước nhảy. Có thể có hàng triệu bộ định tuyến giữa ISP và máy chủ whatismyipaddress.com, có nghĩa là có thể có hàng triệu đường dẫn cho gói tin đi. Làm thế nào để một bộ định tuyến biết đường dẫn nào là nhanh nhất? Câu trả lời là một bảng định tuyến. Nó thường được lưu trữ trong một bộ định tuyến và chứa các quy tắc để xác định tuyến đường tốt nhất.</p>\r\n\r\n<p><strong>Bước 4</strong>: bước này rất giống với bước 3 nhưng theo hướng ngược lại. Các địa chỉ IP nguồn và đích được chuyển đổi và gói chứa tải trọng được gửi từ máy chủ whatismyipaddress.com.</p>\r\n\r\n<p><strong>Bước 5</strong>: ISP gửi gói trực tiếp bộ định tuyến nhà của Chúng ta.</p>\r\n\r\n<p><strong>Bước 6</strong>: khi gói tin từ ISP đến đích, bộ định tuyến gia đình của người dùng, bộ định tuyến sẽ tra cứu bảng NAT để chuyển tiếp gói này đến một thiết bị được kết nối chính xác (PC của người dùng). Các gói được sửa đổi một lần nữa. Nhưng lần này, địa chỉ IP đích được thay thế bằng địa chỉ IP riêng của PC 10.19.190.132 của người dùng dựa trên bản ghi được tìm thấy trong bảng NAT. gói được chuyển tiếp chính xác đến PC của người dùng dựa trên địa chỉ đích được sửa đổi trong bước 5.</p>\r\n\r\n<p><img alt=\"\" src=\"https://codelearn.io/Media/Default/Users/leduynhat98/pivpn/Nh%C3%B3m-15_VPN-Respberry-Pi_B%C3%A1o-c%C3%A1o-gi%E1%BB%AFa-k%E1%BB%B327193.png\" width=\"557\" /></p>\r\n\r\n<p><strong>Bước 1:</strong>&nbsp;nếu máy tính của người dùng đã cài đặt phần mềm VPN phía máy khách, gói sẽ được đóng gói trước. Encapsulation thực sự chỉ là một quá trình gói gói ban đầu bên trong một gói khác được tạo bởi phần mềm VPN phía máy khách. Mọi thứ trong gói ban đầu được mã hóa bởi máy khách VPN và chỉ có thể được đọc bởi máy chủ VPN. Đối với công chúng, đây vẫn là một gói hợp lệ và sẽ được định tuyến như bình thường. Lưu ý rằng địa chỉ đích trở thành địa chỉ IP của máy chủ VPN 206.189.234.44.</p>\r\n\r\n<p><strong>Bước 2:</strong>&nbsp;bước này rất giống với bước 2 trong trường hợp không có VPN. Địa chỉ IP nguồn được thay thế bằng địa chỉ IP công cộng của bộ định tuyến và bản ghi NAT được tạo để theo dõi các liên kết.</p>\r\n\r\n<p><strong>Bước 3:</strong>&nbsp;ISP chịu trách nhiệm gửi gói tin này đến đích được chỉ định: máy chủ VPN. Các tuyến tốt nhất sẽ được chọn động dựa trên các giao thức định tuyến và bảng định tuyến.</p>\r\n\r\n<p><strong>Bước 4:</strong>&nbsp;một khi máy chủ VPN nhận được gói, nó sẽ mở gói bên ngoài và sau đó sử dụng khóa đối xứng của nó để giải mã nội dung của gói bên trong (gói ban đầu). Tiếp theo, máy chủ VPN sẽ gửi gói đến nơi định mệnh: máy chủ whatismyipaddress.com.</p>\r\n\r\n<p><strong>Bước 5:</strong>&nbsp;bước này giống như bước 4 trong trường hợp không có VPN.</p>\r\n\r\n<p><strong>Bước 6:</strong>&nbsp;Máy chủ VPN mã hóa tải trọng gói và đóng gói gói trước khi gửi đi.</p>\r\n\r\n<p><strong>Bước 7:</strong>&nbsp;bước này giống như bước 5 trong trường hợp không có VPN.</p>\r\n\r\n<p><strong>Bước 8:</strong>&nbsp;bước này rất giống với bước 6 trong trường hợp không có VPN. Khi máy tính của người dùng nhận được gói này, phần mềm VPN phía máy khách sẽ mở gói trước và sau đó giải mã gói bên trong bằng khóa đối xứng của nó.</p>\r\n\r\n<p>Như chúng ta có thể biết từ sơ đồ, VPN bổ sung hai yếu tố bảo mật quan trọng: đóng gói gói và mã hóa.</p>\r\n\r\n<p>VPN chặn các trang web, quảng cáo và trình theo dõi độc hại</p>\r\n\r\n<p>Các trang web độc hại có thể tải xuống phần mềm độc hại và trình theo dõi trên thiết bị của bạn mà bạn không biết. VPN có bảo vệ tích hợp giúp ngăn ngừa nhiễm trùng bằng cách chặn các trang web này trước khi chúng có thể gây thiệt hại.</p>\r\n\r\n<p>Một số cũng chặn quảng cáo và cửa sổ bật lên. Điều này ngăn quảng cáo độc hại lây nhiễm thiết bị của bạn bằng phần mềm độc hại và điều đó có nghĩa là bạn có thể tận hưởng các nền tảng phát trực tuyến, như YouTube, không có quảng cáo.</p>\r\n\r\n<h3>3. Các loại VPN&nbsp;</h3>\r\n\r\n<p>VPN truy cập từ xa (remote-access VPN)</p>\r\n\r\n<p>VPN truy cập từ xa được thiết lập khi một thiết bị duy nhất kết nối với mạng từ xa. Đây có lẽ là trường hợp cho hầu hết người dùng VPN gia đình. Chúng ta tải xuống phần mềm VPN trên điện thoại thông minh hoặc máy tính Hi của mình, đăng nhập bằng thông tin đăng nhập và chọn máy chủ VPN để kết nối. VPN truy cập từ xa cũng có thể mang lại lợi ích cho nhân viên công ty, những người cần truy cập vào tài nguyên của công ty khi làm việc tại nhà. Các bạn sẽ thấy rõ nhất điều này sau khi chúng ta thực hiện cài đặt và cấu hình VPN server trên Pi xong.</p>\r\n\r\n<p><img alt=\"\" src=\"https://codelearn.io/Media/Default/Users/leduynhat98/pivpn/Nh%C3%B3m-15_VPN-Respberry-Pi_B%C3%A1o-c%C3%A1o-gi%E1%BB%AFa-k%E1%BB%B319783.png\" width=\"605\" /></p>\r\n\r\n<p>VPN Site-To-Site</p>\r\n\r\n<p>VPN site-to-site là phổ biến cho các công ty có văn phòng ở các vị trí địa lý khác nhau. Nó kết nối một mạng của một văn phòng với một mạng của một văn phòng khác, cho phép hai văn phòng khác nhau chia sẻ tài nguyên riêng tư một cách an toàn qua internet. VPN site-to-site khác biệt nhiều so với VPN truy cập từ xa ở chỗ nó tạo ra một liên kết riêng giữa hai mạng khác nhau thay vì một thiết bị và một mạng.</p>\r\n\r\n<p><img alt=\"\" src=\"https://codelearn.io/Media/Default/Users/leduynhat98/pivpn/Nh%C3%B3m-15_VPN-Respberry-Pi_B%C3%A1o-c%C3%A1o-gi%E1%BB%AFa-k%E1%BB%B320286.png\" width=\"605\" /></p>\r\n\r\n<p>Giao thức mã hóa</p>\r\n\r\n<p>Lịch sử của các giao thức VPN có thể được bắt nguồn từ năm 1996 khi một kỹ sư phần mềm của Microsoft có tên Gurdeep Singh-Pallđã phát minh ra PPTP (Giao thức đường hầm điểm-điểm). Khi mọi người ngày càng quan tâm đến quyền riêng tư và bảo mật trực tuyến của họ, một số giao thức VPN gần đây đã được nghĩ ra.&nbsp;</p>\r\n\r\n<p>Những giao thức được ứng dụng rộng rãi ngày nay bao gồm: IPsec, TKE, L2TP, SSL/TLS.</p>\r\n\r\n<h3>4. Chuẩn bị</h3>\r\n\r\n<p>Để cài đặt đươcj VPN server lên Raspberry Pi, các bạn cần chuẩn bị những thứ sau:</p>\r\n\r\n<ul>\r\n	<li>Raspberry Pi, mình sử dụng phiên bản c 2011.12.</li>\r\n	<li>Cài đặt hệ điều hành nhân linux lên Pi, mình sử dụng Raspberry Pi OS (Raspbian)&nbsp;</li>\r\n	<li>Máy tính PC hoặc laptop có cài hệ điều hành Windows, Ubuntu hay OS X.</li>\r\n</ul>\r\n\r\n<p>Cấp nguồn điện cho Pi, kết nối Pi với mạng LAN (Wi-Fi hay Ethernet), Kết nối máy tính của bạn với LAN đó. Các bạn có thể điều khiển trực tiếp Pi qua chuột, bàn phím và màn hình hoặc điều khiển Pi qua SSH như mình. SSH có thể dùng trên mọi hệ điều hành, các bạn có thể tra google để tìm hiểu thêm nhé.</p>\r\n\r\n<pre>\r\n<code>ssh {user}@{host}</code></pre>\r\n\r\n<p>Trong bài viết này, mình sẽ hướng dẫn các bạn cài đặt<strong>&nbsp;OpenVPN server thông qua PiVPN.</strong></p>\r\n\r\n<h3>5. Cấu hình VPN server cho Raspberry Pi</h3>\r\n\r\n<p>Cấu hình IP tĩnh cho Raspberry Pi</p>\r\n\r\n<p>IP là server trong mạng LAN nên cần có một IP tĩnh để tiện cho việc điều khiển sau này. Các bạn có thế tra google thêm cách cấu hình Ip tĩnh nhé, ở đây mình sẽ hướng dẫn một cách thôi. Mở cửa sổ terminal lên và thực hiện lện sau để kiểm tra cấu hình mạng, cần chú ý đến giao thức (card) mạng đang kết nối với LAN.</p>\r\n\r\n<pre>\r\n<code>ifconfig</code></pre>\r\n\r\n<p>sau đó sử dùng lệnh sau để sửa file config.</p>\r\n\r\n<pre>\r\n<code>sudo nano /etc/dhcpcd.conf</code></pre>\r\n\r\n<p>Thêm đoạn code sau:</p>\r\n\r\n<pre>\r\n<code>interface eth0\r\nstatic ip_address=192.168.100.12/24\r\nstatic routers=192.168.100.1\r\nstatic domain_name_servers=192.168.100.1</code></pre>\r\n\r\n<p>Trong đó interface là card mạng đang kết nối, mình cấu hình IP tĩnh là 192.168.100.12.</p>\r\n\r\n<p>Tạo tên miền động (DDNS)</p>\r\n\r\n<p>Do việc public IP của mạng sẽ thay đổi khi reset router hay theo thời gian cài đặt của nhà mạng ISPs, ta cần một tên miền trỏ tới public IP của nhà mình. Tên miền này sẽ thay cho IP khi một client muốn truy cập đến VPN server trong mạng LAN nhà bạn. Điều này giúp ta không phải sửa lại file cấu hình của client mỗi lần IP thay đổi.</p>\r\n\r\n<p>Truy cập trang web&nbsp;<a href=\"https://www.noip.com/\">https://www.noip.com/</a>, đăng ký một tài khoản và tạo một tên miền theo ý bạn nhé. Đồng thời điền public IP hiện tại của mạng nhà bạn vào đó. Nếu bạn không biết IP của mình là gì thì vào trang này&nbsp;<a href=\"https://canyouseeme.org/\">https://canyouseeme.org/</a>&nbsp;</p>\r\n\r\n<p><img alt=\"\" src=\"https://codelearn.io/Media/Default/Users/leduynhat98/pivpn/Nh%C3%B3m-15_VPN-Respberry-Pi_B%C3%A1o-c%C3%A1o-gi%E1%BB%AFa-k%E1%BB%B332285.png\" width=\"605\" /></p>\r\n\r\n<p><img alt=\"\" src=\"https://codelearn.io/Media/Default/Users/leduynhat98/pivpn/Nh%C3%B3m-15_VPN-Respberry-Pi_B%C3%A1o-c%C3%A1o-gi%E1%BB%AFa-k%E1%BB%B332356.png\" width=\"605\" /></p>\r\n\r\n<p>DDNS giúp chúng ta cập nhật public IP tự động khi mà địa chỉ IP bị thay đổi. Noip.com cung cấp cho chúng ta một ứng dụng có thể làm việc đó tự động thay chúng ta. Các bạn hãy cài đặt ứng dụng Dynamic update client (DUC) trên Raspberry Pi theo hướng dẫn của&nbsp;<a href=\"https://www.youtube.com/watch?time_continue=1&amp;v=8xp4kkbsZi0&amp;feature=emb_logo\">trang</a>.</p>\r\n\r\n<p><img alt=\"\" src=\"https://codelearn.io/Media/Default/Users/leduynhat98/pivpn/Nh%C3%B3m-15_VPN-Respberry-Pi_B%C3%A1o-c%C3%A1o-gi%E1%BB%AFa-k%E1%BB%B332589.png\" width=\"605\" /></p>\r\n\r\n<h3>Cài đặt và cấu hình VPN server</h3>\r\n\r\n<p>Trên màn hình terminal của Pi thực hiện đoạn lệnh sau:</p>\r\n\r\n<pre>\r\n<code>curl -L https://install.pivpn.io | bash\r\n</code></pre>\r\n\r\n<p>Màn hình terminal load dữ liệu và hiện lên thông báo rằng sẽ cài OpenVPN hoặc WireGuard server cho thiết bị, các bạn cứ nhân OK (Enter) nhé.</p>\r\n\r\n<p><img alt=\"\" src=\"https://codelearn.io/Media/Default/Users/leduynhat98/pivpn/pivpn_complete0.png\" width=\"554\" /></p>\r\n\r\n<p>Sau đó nó hỏi là sử dụng DHCP hay cài IP tĩnh, ta chọn IP tĩnh nên chọn NO</p>\r\n\r\n<p><img alt=\"\" src=\"https://codelearn.io/Media/Default/Users/leduynhat98/pivpn/pivpn_complete2.png\" width=\"554\" /></p>\r\n\r\n<p>Chọn user để lưu file cấu hình cho client</p>\r\n\r\n<p><img alt=\"\" src=\"https://codelearn.io/Media/Default/Users/leduynhat98/pivpn/pivpn_complete4.png\" width=\"554\" /></p>\r\n\r\n<p>Chọn OpenVPN bằng cách di chuyển nút mũi tên và space để chọn sau đó ấn Enter</p>\r\n\r\n<p><img alt=\"\" src=\"https://codelearn.io/Media/Default/Users/leduynhat98/pivpn/pivpn_complete6.png\" width=\"554\" /></p>\r\n\r\n<p>Đây là cấu hình đề nghị của PiVPN, tuy nhiên chúng ta sử dụng domain name riêng nên các ban hãy chọn YES để cấu hình lại nhé</p>\r\n\r\n<p><img alt=\"\" src=\"https://codelearn.io/Media/Default/Users/leduynhat98/pivpn/pivpn_complete8.png\" width=\"553\" /></p>\r\n\r\n<p>Chọn giao thức lớp Transport, mình hay chọn UTP vì tốc độ nhanh hơn, các bạn có thể chon TCP vì độ tin cậy đường truyền&nbsp;</p>\r\n\r\n<p><img alt=\"\" src=\"https://codelearn.io/Media/Default/Users/leduynhat98/pivpn/pivpn_complete10.png\" width=\"554\" /></p>\r\n\r\n<p>Chọn port cho ứng dụng, mình để port mạch đinhcj của OpenVPN là 1194</p>\r\n\r\n<p><img alt=\"\" src=\"https://codelearn.io/Media/Default/Users/leduynhat98/pivpn/pivpn_complete12.png\" width=\"554\" /></p>\r\n\r\n<p>Lựa chọn DNS provider, mình chọn OpenDNS</p>\r\n\r\n<p><img alt=\"\" src=\"https://codelearn.io/Media/Default/Users/leduynhat98/pivpn/pivpn_complete14.png\" width=\"554\" /></p>\r\n\r\n<p>Sử dụng domain name mà các bạn đã tạo đựợc ở bước phía trên điền vào đây nhé.</p>\r\n\r\n<p>&nbsp;<img alt=\"\" src=\"https://codelearn.io/Media/Default/Users/leduynhat98/pivpn/pivpn_complete16.png\" width=\"554\" /></p>\r\n\r\n<p><img alt=\"\" src=\"https://codelearn.io/Media/Default/Users/leduynhat98/pivpn/pivpn_complete18.png\" width=\"554\" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Đoạn cấu hình dưới đây thì cứ để theo recommend của PiVPN.&nbsp;</p>\r\n\r\n<p><img alt=\"\" src=\"https://codelearn.io/Media/Default/Users/leduynhat98/pivpn/pivpn_complete20.png\" width=\"554\" /></p>\r\n\r\n<p><img alt=\"\" src=\"https://codelearn.io/Media/Default/Users/leduynhat98/pivpn/pivpn_complete22.png\" width=\"554\" /></p>\r\n\r\n<p><img alt=\"\" src=\"https://codelearn.io/Media/Default/Users/leduynhat98/pivpn/pivpn_complete24.png\" width=\"554\" /></p>\r\n\r\n<p><img alt=\"\" src=\"https://codelearn.io/Media/Default/Users/leduynhat98/pivpn/pivpn_complete26.png\" width=\"554\" /></p>\r\n\r\n<p>Vậy là cài đặt và cấu hình đã xong, các bạn nên reboot Pi để đảm bảo thiết bị hoạt động tốt sau cài đặt.</p>\r\n\r\n<p>Mở port forwarding</p>\r\n\r\n<p>Trong khi chờ đợ Pi khởi động lại, hãy quay về chiếc máy tính của mình và mở port fowarding cho router chính. Do có nhiều loại router trên thị trường nên mình không thể liệt kê cách thực hiện ở đây được. Các bạn hãy google nhé. Nội dung của việc làm này là mở port forwarding đển địa chỉ tĩnh của Pi ở port 1194 (hoặc cổng các bạn cấu hình bên trên). Mục đích là để các client bên ngoài mạng LAN có thể truy cập vào VPN server của chúng ta ở trong mạng.</p>\r\n\r\n<p>Tạo thêm client</p>\r\n\r\n<p>Bây giờ, quay lại với cửa sổ terminal của Pi. Hãy gõ lệnh&nbsp;</p>\r\n\r\n<pre>\r\n<code>pivpn add</code></pre>\r\n\r\n<p>Điền tên client muốn thêm, thời gian tồn tại của certificate và mật khẩu</p>\r\n\r\n<p>file cấu hình có đuôi .ovpn được lưu trong thư lục /home/pi/ovpns/ (pi là tên user mình chọn trong bước cấu hình bên trên). Để chuyển file này qua máy tính của bạn mình hay sử dụng lệnh scp. Đầu tiên hãy mở terminal trên máy của bạn lên (cmd trên Windows) gõ lệnh sau</p>\r\n\r\n<pre>\r\n<code>scp pi@192.168.100.12:/home/pi/ovpns/client_1.ovpn .</code></pre>\r\n\r\n<p>Lệnh này thực hiện copy file&nbsp;/home/pi/ovpns/client_1.ovpn với quyền user của pi tại host 192.168.100.12 vào thư mục mà terminal đang trỏ tới hiện tại.</p>\r\n\r\n<h3>Kết nối VPN client với VPN server</h3>\r\n\r\n<p>Cài đặt OpenVPN client</p>\r\n\r\n<p>OpenVPN client hỗ trợ nhiều nền tảng các bạn có thể sử dụng nó trên&nbsp;<a href=\"https://openvpn.net/client-connect-vpn-for-windows/\">Windows</a>&nbsp;cũng như&nbsp;<a href=\"https://community.openvpn.net/openvpn/wiki/OpenVPN3Linux\">Ubuntu</a>&nbsp;hay&nbsp;<a href=\"https://openvpn.net/vpn-server-resources/connecting-to-access-server-with-macos/\">MacOS</a>. Mình sẽ sử dụng nó trên Ubuntu phiên bản OpenVPN3.</p>\r\n\r\n<p>Thêm file cấu hình và connect</p>\r\n\r\n<p>Nhớ rằng trước khi sử dụng VPN thì mình cần phải nằm trong một mạng khác thì mới kết nối được đến VPN server trong mạng LAN nhà mình. Hãy chuyển WiFi sang dùng của nhà hàng xóm chẳng hạn. Sử dụng lệnh sau để kết nối với VPN server nhà mình.</p>\r\n\r\n<pre>\r\n<code>openvpn3 session-start --config ${MY_CONFIGURATION_FILE}</code></pre>\r\n\r\n<p>Với ${MY_CONFIGURATION_FILE} là tên file config ban đã lấy được tử Pi ở bước Tạo thêm client.</p>\r\n\r\n<p><img alt=\"\" src=\"https://codelearn.io/Media/Default/Users/leduynhat98/pivpn/pivpn_complete34.png\" width=\"554\" /></p>\r\n\r\n<p>Thông báo Connected thành công. Để kiểm tra xem mình đã vào mạng LAN nhà mình hay chưa bằng lệnh sau:</p>\r\n\r\n<pre>\r\n<code>nmap -sc 192.168.100.0/24</code></pre>\r\n\r\n<p>Kết quả trả về như sau</p>\r\n\r\n<p><img alt=\"\" src=\"https://codelearn.io/Media/Default/Users/leduynhat98/pivpn/pivpn_complete38.png\" width=\"554\" /></p>\r\n\r\n<p>Như vậy là ta đã thấy những thiết bị đang kết nối trong mạng nhà mình, trong đó có con Pi. Các bạn hãy thử đăng nhập vào router nhà mình xem kết quả như nào nhé.</p>\r\n\r\n<h3>Tổng kết</h3>\r\n\r\n<p>Như vậy là chúng ta đã có một chiếc VPN server nhỏ gọn cá nhân đặt tại nhà. Hãy cảm nhân sự tiện lợi của nó khi bạn có thể truy cập vào mạng ở nhà khi đang làm việc ở cơ quan hay điều khiển được máy tính của mình một cách thoải mái mà không sợ bị tấn công. Cảm ơn các bạn đã theo dõi bài viết này của mình.</p>', '/images/787681593594592.jpg', 4, 5, 6, '8', '2020-07-01 02:09:52', '2020-10-09 08:24:37', 'chiase;hoctap;laptrinh', 0),
(14, 'Cython - Cách Để Code Python Chạy Nhanh Hơn', '<p><strong>Mình tin rằng bạn đã nghe nhiều người phàn nàn rằng Python quá chậm. Mình thấy mọi người chỉ so sánh Python với C về hiệu năng - performance, nhưng không mấy ai so sánh về thời gian phát triển. Thời gian phát triển Python quá nhanh vì Python có vẻ &quot;dễ code&quot; hơn một vài ngôn ngữ khác và bạn không phải đối mặt với con trỏ hay quản lý bộ nhớ, v.v.</strong></p>\r\n\r\n<p>Một trong những lý do mình sử dụng&nbsp;<a href=\"https://codelearn.io/learning/python-co-ban\">Python</a>&nbsp;rất nhiều mặc dù mình cũng biết cơ bản một số ngôn ngữ khác (chẳng hạn C/<a href=\"https://codelearn.io/learning/cpp-cho-nguoi-moi-bat-dau\">C++</a>) là vì trong hầu hết các trường hợp, thời gian phát triển quan trọng hơn hiệu suất. Nếu bạn làm nhanh sẽ làm được nhiều và có lẽ chỉ ở bước đưa ra sản phẩm bạn mới thực sự cần đến performance. Hơn nữa Python có một cộng đồng rất lớn và các thư viện hỗ trợ nhiều vô kể nên bạn có thể làm rất nhiều thứ.</p>\r\n\r\n<p>Trong bài viết này mình sẽ nói về Cython thứ giúp cho code Python của bạn nhanh hơn nhiều lần để hạn chế điểm yếu là chạy chậm của Python thuần. Theo định nghĩa từ&nbsp;<a href=\"https://www.infoworld.com/article/3250299/what-is-cython-python-at-the-speed-of-c.html\">infoworld</a>,&nbsp; &quot;Cython is a superset of Python that compiles to C, Cython combines the ease of Python and the speed of native code&quot;. Tạm dịch Cython là một thay thế của python có thể biên dịch thành C, Cython kết hợp sự đơn giản của Python và tốc độ của C.</p>\r\n\r\n<p>Bài viết sẽ chia làm 2 phần chính, ở phần đầu mình sẽ giới thiệu một số cú pháp đơn giản của Cython và phần sau đó mình sẽ thử làm một ví dụ để so sánh tốc độ với Python thuần</p>\r\n\r\n<h3><strong>Cython - Phần mở rộng C cho Python</strong></h3>\r\n\r\n<p>Nếu bạn muốn code cú pháp dễ dàng như Python và hiệu suất cao như C thì Cython là lựa chọn của bạn. Bạn có thể sử dụng Cython để viết các extention C cho Python. Code Python của bạn sẽ được dịch sang code C/C++ và được tối ưu hóa. Nó sẽ cung cấp cho bạn hiệu suất cao và bạn có thể sử dụng nó trong các dự án Python của mình.&nbsp;</p>\r\n\r\n<p><strong>1. Cài đặt Cython</strong></p>\r\n\r\n<p>Lưu ý rằng bạn sẽ cần một trình biên dịch C dựa theo hệ điều hành bạn đang sử dụng, cái này có thể tự google nhé, mình sẽ không hướng dẫn ở đây. Sau đó, bạn cần cài đặt Cython như dưới đây.</p>\r\n\r\n<p><code>pip install Cython</code></p>\r\n\r\n<p><strong>2. Lợi ích từ khai báo biến tĩnh (static)</strong></p>\r\n\r\n<p>Nếu bạn để ý ở Python sẽ rất dễ dàng, bạn chẳng cần khai báo kiểu dữ liệu cho biến nhưng ở C/C++ thì đó lại là điều bắt buộc. Điều này là một trong rất nhiều nguyên nhân khiến C/C++ có hiệu suất tốt hơn. Bạn có thể tạm hiểu theo cách này, nếu bạn định nghĩa càng rõ ràng thì máy càng đỡ mất thời gian để hiểu ý nghĩa từng dòng code của bạn điều này đồng nghĩa với việc giúp máy xử lý nhanh hơn :D.&nbsp;</p>\r\n\r\n<p>Với Cython&nbsp;bạn có thể thêm khai báo kiểu static cho các biến và hàm của bạn. Nó sẽ cung cấp cho bạn hiệu suất tốt hơn đấy. Bạn có thể sử dụng giống với code C như&nbsp;int,&nbsp;float,&nbsp;double, ...</p>\r\n\r\n<p><strong>3. Khai báo một biến trong Cython</strong></p>\r\n\r\n<p><code>cdef int i = 10</code></p>\r\n\r\n<p>Về cơ bản câu lệnh trên có nghĩa là bạn đang khai báo một biến số nguyên&nbsp;i&nbsp; (kiểu int)</p>\r\n\r\n<p><strong>4. Khai báo một hàm trong Cython</strong></p>\r\n\r\n<p><code>cdef int square (int x):</code></p>\r\n\r\n<p><code>return x ** 2</code></p>\r\n\r\n<p>Đoạn code này khai báo một hàm có tên&nbsp;square&nbsp;lấy một tham số x có kiểu int và trả về một giá trị x**2 cũng là kiểu int.</p>\r\n\r\n<p>Có ba kiểu khai báo hàm là def, cdef và cpdef.</p>\r\n\r\n<ul>\r\n	<li>def sẽ chỉ gọi từ code Python</li>\r\n	<li>cdef chỉ gọi từ code Cython</li>\r\n	<li>cpdef thì có thể được gọi cả từ C và Python</li>\r\n</ul>\r\n\r\n<p>Ở phần tiếp theo ta sẽ thử đi làm ví dụ để so sánh nhé @@</p>\r\n\r\n<h3><strong>Làm code Python nhanh hơn với Cython</strong></h3>\r\n\r\n<p><strong>1. Tính giai thừa trong Python</strong></p>\r\n\r\n<p>Thử code với python thuần như sau nhé</p>\r\n\r\n<p><code>def factorial(n):</code></p>\r\n\r\n<p><code>&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp; n &gt;= 1:</code></p>\r\n\r\n<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return n * factorial(n - 1)</code></p>\r\n\r\n<p><code>&nbsp;&nbsp;&nbsp;&nbsp;return 1</code></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&gt;&gt;&gt; Hãy làm nó nhanh hơn theo cách của Cython nhé :D&nbsp;</p>\r\n\r\n<p><strong>2. Tạo một file .pyx</strong></p>\r\n\r\n<p>Chẳng hạn tạo 1 file&nbsp;<em>fastfac.pyx</em>&nbsp;với nội dung như sau:</p>\r\n\r\n<p><code>cpdef long fastfactorial(long n):</code></p>\r\n\r\n<p><code>&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp; n &gt;= 1:</code></p>\r\n\r\n<p><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return n * fastfactorial(n - 1)</code></p>\r\n\r\n<p><code>&nbsp;&nbsp;&nbsp;&nbsp;return 1</code></p>\r\n\r\n<p>Hàm này sẽ trả về một giá trị có kiểu dữ liệu long và tham số n truyền vào cũng là kiểu long.</p>\r\n\r\n<p><strong>3. Tạo một file setup</strong></p>\r\n\r\n<p>Bây giờ chúng ta cần tạo một file&nbsp;<em>setup.py&nbsp;</em>để dịch Cython sang C với nội dung như sau:</p>\r\n\r\n<p><code>from distutils.core import setup</code></p>\r\n\r\n<p><code>from Cython.Build import cythonize</code></p>\r\n\r\n<p><code>setup(ext_modules = cythonize(&#39;fastfac.pyx&#39;))</code></p>\r\n\r\n<p><strong>4. Biên dịch code (compile)</strong></p>\r\n\r\n<p>Để thực hiện việc biên dịch ta chạy dòng lệnh sau,</p>\r\n\r\n<p><code>python3 setup.py build_ext --inplace</code></p>\r\n\r\n<p>trong đó<em>, --inplace</em>&nbsp;là tham số tạo một file đối tượng (.so) được hiện ra trong thư mục đang làm việc.</p>\r\n\r\n<p><strong>5. So sánh tốc độ nào</strong></p>\r\n\r\n<p>Bước cuối cùng là so sánh tốc độ =))</p>\r\n\r\n<p><code>&gt;&gt;&gt;from fastfac import fastfactorial</code></p>\r\n\r\n<p><code>&gt;&gt;&gt;from fac import factorial</code></p>\r\n\r\n<p><code>&gt;&gt;&gt;from timeit import timeit</code></p>\r\n\r\n<p><code>&gt;&gt;&gt;print(timeit(&#39;fastfactorial(20)&#39;, globals=globals(), number=10000))&nbsp;&nbsp;</code></p>\r\n\r\n<p><code>#output: 0.005239142999926116</code></p>\r\n\r\n<p><code>&gt;&gt;&gt;print(timeit(&#39;factorial(20)&#39;, globals=globals(), number=10000))&nbsp;&nbsp;</code></p>\r\n\r\n<p><code>#output: 0.05793850899863173</code></p>\r\n\r\n<p>=&gt; Bạn thấy nó nhanh thế nào rồi chứ, hãy thử chạy trên máy mình đi nhé. Lưu ý là code này mình đang sử dụng python 3 nhé, nếu có lỗi chắc do bạn đang xài python 2x đó :D&nbsp;</p>\r\n\r\n<h3><strong>Kết luận</strong></h3>\r\n\r\n<p>Với một vài dòng lệnh bạn đã làm cho code Python của mình chạy nhanh hơn nhiều rồi đấy. Bài viết là một giới thiệu cơ bản kèm theo ví dụ, bạn có thể làm nhiều thứ hơn thế tùy theo nhu cầu của bạn. Nếu muốn làm nhiều thứ hơn hãy thử đọc docs của nó, link mình để ở dưới phần reference nhé.</p>\r\n\r\n<p>Nếu bài viết hữu ích với bạn thì cho mình một đánh giá tốt nhé. Cảm ơn bạn quan tâm. Chúc bạn học tốt!</p>', '/images/697871593663789.jpg', 5, 5, 1, '10', '2020-07-01 21:23:09', '2020-10-09 08:27:34', 'chiase;hoctap;laptrinh', 0);
INSERT INTO `blog` (`id_blog`, `title_blog`, `content_blog`, `img_blog`, `cate_parent`, `rate_blog`, `view_blog`, `auth`, `created_at`, `updated_at`, `tag_blog`, `stt_blog`) VALUES
(15, 'Lập Trình Ứng Dụng Chat Nội Bộ Đơn Giản Với Socket', '<p><em><strong>Trong bài viết này, mình sẽ hướng dẫn các bạn lập trình một phần mềm đơn giản. Phần mềm này nhằm mục đích chat trong mạng cục bộ với nhau sử dụng Socket. Có nhiều loại ngôn ngữ hỗ trợ Socket nhưng mình sẽ hướng dẫn những thứ cơ bản để các bạn có thể tự tạo phần mềm cho riêng mình, ở đây để minh họa cụ thể hơn thì mình sẽ dùng ngôn ngữ Java.</strong></em></p>\r\n\r\n<h3><strong>1. Socket là cái gì nhỉ?</strong></h3>\r\n\r\n<p>Trước hết bạn cần hiểu được mô hình Client - Server đã nhé:</p>\r\n\r\n<ul>\r\n	<li>Mô hình&nbsp;<strong>Client-Server</strong>&nbsp;(hay còn gọi là mô hình máy khách - máy chủ) là mô hình mà ở đây,&nbsp;máy khách là các máy tính, các thiết bị điện tử như máy in, điện thoại bàn, máy fax,&hellip; các máy khách này gửi yêu cầu đến server (hay còn được gọi là máy chủ). Máy chủ, xử lý các yêu cầu đó và trả về kết quả</li>\r\n</ul>\r\n\r\n<p><img alt=\"\" src=\"https://codelearn.io/Media/Default/Users/satellite1012/T%C3%ADn/mo-hinh-client-server-la-gi-5ca32f8e96ac1.png\" width=\"604\" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<ul>\r\n	<li><strong>Socket</strong>&nbsp;là&nbsp;một giao diện lập trình ứng dụng mạng được dùng để truyền và nhận dữ liệu trên internet.&nbsp;Giữa hai chương trình chạy trên mạng cần có một liên kết giao tiếp hai chiều để kết nối với nhau. Điểm cuối (endpoint) của liên kết này được gọi là socket,&nbsp;cho phép người dùng kết nối các máy tính truyền tải và nhận dữ liệu từ máy tính thông qua mạng. Vì vậy, hiểu đơn giản thì socket là thiết bị truyền thông hai chiều gửi và nhận dữ liệu từ máy khác.</li>\r\n	<li>Để xây dựng được một ứng dụng chat bằng Socket thì cần phải hiểu rõ cách thức hoạt động của nó, có rất nhiều loại Socket, nhưng ở đây mình sẽ lấy&nbsp;<strong>Stream Socket</strong>&nbsp;làm ví dụ, và sẽ dùng nó để lập trình nên phần mềm chat giữa client và server, Stream Socket hoạt động như sau:</li>\r\n</ul>\r\n\r\n<p><img alt=\"\" src=\"https://codelearn.io/Media/Default/Users/satellite1012/T%C3%ADn/socket-la-gi-4.jpg\" width=\"648\" /></p>\r\n\r\n<ul>\r\n	<li><strong>Stream Socket</strong>&nbsp;hay còn gọi là socket hướng kết nối, là socket hoạt động thông qua&nbsp;<strong>giao thức TCP (Transmission Control Protocol)</strong>. Stream Socket chỉ hoạt động khi server và client đã kết nối với nhau thông qua một&nbsp;<strong>IP</strong>&nbsp;và&nbsp;<strong>Port</strong>, dữ liệu truyền đi được đảm bảo truyền đến đúng nơi nhận, đúng thứ tự với thời gian nhanh chóng.</li>\r\n</ul>\r\n\r\n<h3><strong>2. Tạo một ứng dụng chat đơn giản bằng JFrame (Java)</strong></h3>\r\n\r\n<p>Đầu tiên, chúng ta tạo một project mới đặt tên nó là ChattingSoftware (hoặc tên tùy thích), thêm vào project mới tạo này 2 lớp<strong>&nbsp;JFrame</strong>, lần lượt đặt tên là<strong>&nbsp;ClientGUI</strong>&nbsp;và&nbsp;<strong>ServerGUI&nbsp;</strong>và<strong>&nbsp;1 lớp JPanel&nbsp;</strong>đặt tên là&nbsp;<strong>ChatPanel.</strong></p>\r\n\r\n<p><img alt=\"\" src=\"https://codelearn.io/Media/Default/Users/satellite1012/T%C3%ADn/Capture6.JPG\" width=\"712\" /></p>\r\n\r\n<p><img alt=\"\" src=\"https://codelearn.io/Media/Default/Users/satellite1012/T%C3%ADn/Capture.JPG\" width=\"718\" /></p>\r\n\r\n<p>Ý nghĩa của từng lớp JFrame:</p>\r\n\r\n<ul>\r\n	<li><strong>ClientGUI</strong>&nbsp;dùng để thiết kế giao diện người dùng cho phần mềm chat bên máy khách</li>\r\n	<li><strong>ServerGUI</strong>&nbsp;dùng để thiết kế giao diện người dùng cho phần mềm chat bên máy chủ, quản lí các máy khách</li>\r\n	<li><strong>ChatPanel</strong>&nbsp;dùng để thiết kế một&nbsp;<strong>JPanel</strong>, JPanel này dùng cho việc hiển thị cửa sổ chat và các tin nhắn giữa client-server. Vì cả Client và Server điều dùng chung một JPanel để hiện thị tin nhắn, nên mình sẽ tách nó ra thành một lớp riêng vì style của mình như vậy, các bạn có thể viết lớp&nbsp;<strong>ChatPanel</strong>&nbsp;này bên trong&nbsp;<strong>ClientGUI</strong>&nbsp;và&nbsp;<strong>ServerGUI</strong>&nbsp;(nhưng các bạn sẽ phải viết lại 2 lần, tốn thời gian hơn).</li>\r\n</ul>\r\n\r\n<ul>\r\n	<li>Khi tạo xong, project của các bạn sẽ tương tự như sau:&nbsp;</li>\r\n</ul>\r\n\r\n<p>&nbsp;<img alt=\"\" src=\"https://codelearn.io/Media/Default/Users/satellite1012/T%C3%ADn/t%E1%BA%A3i%20xu%E1%BB%91ng.png\" width=\"366\" /></p>\r\n\r\n<p><strong>2.1 Thiết kế ChatPanel</strong></p>\r\n\r\n<p>Tiếp đến là phần Design (thiết kế giao diện) cho từng lớp, đầu tiên vào&nbsp;<strong>ChatPanel</strong>&nbsp;và chọn tab Design (nếu bạn dùng Eclipse hoặc Netbean) và tạo các&nbsp;<strong>Components</strong>&nbsp;như sau (các bạn có thể tự design phần này theo ý của mình).</p>\r\n\r\n<p><img alt=\"\" src=\"https://codelearn.io/Media/Default/Users/satellite1012/T%C3%ADn/t%E1%BA%A3i%20xu%E1%BB%91ng%20(1).png\" width=\"683\" /></p>\r\n\r\n<p><em><strong>Lưu ý:</strong>&nbsp;khuyến khích các bạn chỉnh các Layout cho các Panel một cách phù hợp để tránh trường hợp bị lỗi hiển thị, thiếu chữ, thiếu nút,... Vì phần này khá dài nên mình sẽ không đề cập đến ở đây, các bạn có thể tìm hiểu về các Layout cũng như cách dùng các Layout tại:&nbsp;<a href=\"https://vietjack.com/java_swing/layout_trong_java_swing.jsp\">https://vietjack.com/java_swing/layout_trong_java_swing.jsp</a>&nbsp;và học cách thiết kế một giao diện đồ họa bằng JFrame (Java) tại&nbsp;<a href=\"https://www.devpro.edu.vn/lap-trinh-java-swing\">https://www.devpro.edu.vn/lap-trinh-java-swing</a>&nbsp;.</em></p>\r\n\r\n<p>Tiếp đến chúng ta thay đổi tham số hàm dựng cho&nbsp;<strong>ChatPanel</strong>, nhằm mục đích truyền vào trong ChatPanel một Socket, tên của người gửi tin nhắn và tên người nhận tin nhắn, từ lúc này trở đi thì phải code một tí rồi:</p>\r\n\r\n<pre>\r\n<code>//Hàm dựng lớp ChatPanel\r\n    public ChatPanel(Socket s, String sender, String receiver) {\r\n	try {\r\n	    //Khởi tạo các Components cho giao diện đồ họa\r\n	    initComponents();\r\n	    \r\n	    //Truyền socket(Socket này sẽ được tạo sau)\r\n	    socket = s;\r\n	    \r\n	    //Nhận tên người gửi và người nhận\r\n	    this.sender = sender;\r\n	    this.receiver = receiver;\r\n	    \r\n	    //Tạo các bộ đệm để gửi và nhận tin nhắn\r\n	    bf = new BufferedReader(new InputStreamReader(socket.getInputStream()));\r\n	    os = new DataOutputStream(socket.getOutputStream());\r\n	} catch (Exception e) {\r\n	    System.out.println(&quot;Error while create Main Panel&quot;);\r\n	}\r\n\r\n    }</code></pre>\r\n\r\n<p>Tiếp đến chúng ta tạo một&nbsp;<strong>ActionListener</strong>&nbsp;cho nút&nbsp;<strong>SEND</strong>, khi ấn vào nút này thì chúng ta mong rằng tin nhắn sẽ được gửi đi và hiện vào trong mục lịch sử chat:</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<pre>\r\n<code> btnNewButton.addActionListener(new ActionListener() {\r\n		//Một Action Listener để gửi tin nhắn đi mỗi khi người dùng ấn nút SEND\r\n		@Override\r\n		public void actionPerformed(ActionEvent arg0) {\r\n		    // Kiểm tra xem người dùng nhập tin nhắn hay chưa\r\n		    if (inputMess.getText().isEmpty()) return;\r\n		    try {\r\n			// Ghi dữ liệu từ ô nhập tin nhắn vào &quot;bộ đệm của của socket&quot;\r\n                        // để sau này chúng ta có thể lấy dữ liệu này từ server\r\n			os.writeBytes(inputMess.getText());\r\n			// Xuống Dòng + Xóa bộ đệm\r\n			os.write(13);\r\n			os.write(10);\r\n			os.flush();\r\n\r\n			// Ghi dữ liệu vào textArea ở phía trên\r\n			displayChattingHistory.append(&quot;\\n&quot; + sender + &quot;: &quot; + inputMess.getText());\r\n\r\n			// Xóa hết tin nhắn tại ô nhập tin nhắn\r\n			inputMess.setText(&quot;&quot;);\r\n		    } catch (Exception e) {\r\n			System.out.println(&quot;Error while sendding messeger&quot;);\r\n		    }\r\n		}\r\n});</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Có vẻ khá đầy đủ rồi đấy, nhưng vẫn còn thiếu một thứ, nếu như thiếu một&nbsp;<strong>Thread</strong>&nbsp;để đảm nhận nhiệm vụ kiểm tra các tin nhắn mới và hiển thị nó lên mục lịch sử, thì mục lịch sử chat của bạn sẽ chỉ có các tin nhắn bạn đã gửi đi, vì thế chúng ta tạo một phương thức run tại ChatPanel như sau:</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<pre>\r\n<code>//Một phương thức run được implement từ lớp Runable với mục đích kiểm tra tin nhắn đến\r\n    @Override\r\n    public void run() {\r\n	while (true) {\r\n	    try {\r\n		if (socket != null) {\r\n		    String msg = &quot;&quot;;\r\n		    while ((msg = bf.readLine()) != null) {\r\n			//Nếu có tin nhắn đến thì ghi vào lịch sử\r\n			displayChattingHistory.append(&quot;\\n&quot; + receiver + &quot;: &quot; + msg);\r\n		    }\r\n		}\r\n	    } catch (Exception e) {\r\n		// Do not change this because it spawn try-catch many time while running thread!\r\n	    }\r\n	}\r\n    }</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Thế là hoàn tất thiết kế một JPanel để hiển thị tin nhắn, phần còn lại khá đơn giản, chúng ta hãy tiếp tục.</p>\r\n\r\n<p><strong>2.2. Thiết kế Server</strong></p>\r\n\r\n<p>Tương tự như phần 1, tạo các&nbsp;<strong>Component</strong>&nbsp;như sau:&nbsp;</p>\r\n\r\n<p><img alt=\"\" src=\"https://codelearn.io/Media/Default/Users/satellite1012/T%C3%ADn/t%E1%BA%A3i%20xu%E1%BB%91ng%20(7).png\" width=\"708\" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Tiếp theo chúng ta tạo một ActionListener cho nút&nbsp;<strong>&quot;START SERVER&quot;&nbsp;</strong>mà&nbsp;khi nhấn nút này, phần mềm sẽ tạo một&nbsp;<strong>Server Socket</strong>&nbsp;cho phép các client kết nối vào:</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<pre>\r\n<code>btnNewButton.addActionListener(new ActionListener() {\r\n		@Override\r\n		public void actionPerformed(ActionEvent arg0) {\r\n		    //Cổng mặc định là 8, bạn có thể đổi thành số bạn thích\r\n		    int port = 8;\r\n		    try {\r\n			//Kiểm tra dữ liệu nhập vào\r\n			port = Integer.parseInt(textField.getText());\r\n		    } catch (Exception e) {\r\n			JOptionPane.showMessageDialog(contentPane,\r\n			                &quot;Can&#39;t start at this port, program will use the default port=8\\nDetails: &quot; + e,\r\n			                &quot;Error while read Port&quot;, JOptionPane.ERROR_MESSAGE);\r\n		    }\r\n		    try {\r\n			//Hiểu nôm na là chạy Server tại port này\r\n			socket = new ServerSocket(port);\r\n			JOptionPane.showMessageDialog(contentPane, &quot;Server is running at port: &quot; + port, &quot;Started server&quot;,\r\n			                JOptionPane.INFORMATION_MESSAGE);\r\n\r\n		    } catch (Exception e) {\r\n			JOptionPane.showMessageDialog(contentPane, &quot;Details: &quot; + e, &quot;Start server error&quot;,\r\n			                JOptionPane.ERROR_MESSAGE);\r\n		    }\r\n		    \r\n		    //Chạy Server (class ServerGUI hiên tại) để kiểm tra các luồng kết nối vào server sau này, \r\n                    //ở đây biến &quot;thisServerGUI&quot; đã được mình gán ở đầu class\r\n		    Thread t=new Thread(thisServerGUI);\r\n		    t.start();\r\n		}\r\n	    });</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Ở dòng gần cuối, bạn sẽ nhận ra để các Client kết nối được đến server này thì cần&nbsp;<strong>implement</strong>&nbsp;một phương thức<strong>&nbsp;run</strong>&nbsp;như phần 1, liên tục kiểm tra các kết nối từ&nbsp;<strong>Client</strong>&nbsp;gửi đi, vì vậy chúng ta thêm vào&nbsp;<strong>ServerGUI</strong>&nbsp;một phương thức run. Lưu ý dưới đây vẫn là cách xử lý của mình, có một&nbsp;<strong>cách khác</strong>&nbsp;là bạn có thể tạo thêm một nút&nbsp;<strong>&quot;ACCEPT CONNECT&quot;</strong>&nbsp;chẳng hạn, nút này sẽ chấp nhận các kết nối từ&nbsp;<strong>Client</strong>&nbsp;gửi đi khi ấn vào.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<pre>\r\n<code>@Override\r\n    public void run() {\r\n	while (true)\r\n	    try {\r\n		// Chấp nhận kết nối từ Client\r\n		Socket staffSocket = socket.accept();\r\n		if (staffSocket != null) {\r\n		    // Lấy tên của nhân viên vừa nhắn tin cho Server\r\n		    // Có nhiều cách xử lý, đây là cách của mình\r\n		    br = new BufferedReader(new InputStreamReader(staffSocket.getInputStream()));\r\n		    String staffName = br.readLine();\r\n		    staffName = staffName.substring(0,staffName.indexOf(&quot;:&quot;));\r\n\r\n		    // Tạo ChatPanel và show nó vào cái TabbedPane, khá là đơn giản\r\n		    ChatPanel chatPanel = new ChatPanel(staffSocket, &quot;Manager&quot;, staffName);\r\n		    tabbedPane.add(staffName, chatPanel);\r\n		    chatPanel.updateUI();\r\n		    \r\n		    // Chạy Thread ChatPanel để kiểm tra các tin nhắn đến và đi (Đã giải thích ở phần 1)\r\n		    Thread t=new Thread(chatPanel);\r\n		    t.start();\r\n		}\r\n\r\n		// Không cần thiết cho lắm\r\n		Thread.sleep(1000);\r\n	    } catch (Exception e) {\r\n		// Do not change this because it spawn try-catch many time while running thread!\r\n	    }\r\n    }</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Vậy là server chạy ngon lành rồi, cuối cùng thì tạo một cái&nbsp;<strong>Client</strong>&nbsp;là xong</p>\r\n\r\n<p><strong>2.3. Thiết kế Client</strong></p>\r\n\r\n<p>Tạo các component:</p>\r\n\r\n<p><img alt=\"\" src=\"https://codelearn.io/Media/Default/Users/satellite1012/T%C3%ADn/t%E1%BA%A3i%20xu%E1%BB%91ng%20(3).png\" width=\"830\" /></p>\r\n\r\n<p>Tương tự, tạo ActionListener cho nút &quot;CONNECT&quot; nhằm tạo một socket và kết nối tới địa chỉ IP cũng như cổng cho trước từ server:</p>\r\n\r\n<pre>\r\n<code> btnNewButton.addActionListener(new ActionListener() {\r\n		@Override\r\n		public void actionPerformed(ActionEvent arg0) {\r\n		    try {\r\n			//Lấy dữ liệu bao gồm name,ip,port\r\n			ip = inputIP.getText();\r\n			port = Integer.parseInt(inputPort.getText());\r\n			name = inputName.getText();\r\n			\r\n			//Tạo một socket bằng ip và port ở trên\r\n			socket = new Socket(ip, port);\r\n			\r\n			// Validation__________________________\r\n			if (name.isEmpty()) throw new Exception(&quot;Empty Name&quot;);\r\n			if (socket == null) throw new Exception(&quot;Null Socket&quot;);\r\n			\r\n			//Tạo một ChatPanel\r\n			panel.removeAll();\r\n			ChatPanel chatPanel = new ChatPanel(socket, name, &quot;Manager&quot;);\r\n			panel.add(chatPanel);\r\n			panel.updateUI();\r\n			\r\n			//Cho ChatPanel này &quot;chạy&quot; để kiểm tra tin nhắn đến và đi\r\n			Thread t=new Thread(chatPanel);\r\n			t.start();\r\n			\r\n			//Thông báo chạy thành công\r\n			JOptionPane.showMessageDialog(contentPane, &quot;Connect success&quot;, &quot;Connected&quot;,\r\n			                JOptionPane.INFORMATION_MESSAGE);\r\n		    } catch (Exception e) {\r\n			JOptionPane.showMessageDialog(contentPane,\r\n			                &quot;Error while connect, please check details try again!\\nDetails: &quot; + e,\r\n			                &quot;Error while connect&quot;, JOptionPane.ERROR_MESSAGE);\r\n		    }\r\n		}\r\n});</code></pre>\r\n\r\n<h3><strong>3. Chạy chương trình</strong></h3>\r\n\r\n<p>Chạy chương trình tại Server (ServerGUI) đầu tiên để tạo cổng kết nối:</p>\r\n\r\n<p><img alt=\"\" src=\"https://codelearn.io/Media/Default/Users/satellite1012/T%C3%ADn/t%E1%BA%A3i%20xu%E1%BB%91ng%20(4).png\" width=\"670\" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Tiếp đến chạy chương trình bên Client (ClientGUI) để nhắn tin, có thể tạo nhiều Client cùng lúc:</p>\r\n\r\n<p><img alt=\"\" src=\"https://codelearn.io/Media/Default/Users/satellite1012/T%C3%ADn/t%E1%BA%A3i%20xu%E1%BB%91ng%20(5).png\" width=\"733\" /></p>\r\n\r\n<p>Vậy là các bạn có thể nhắn tin qua lại bằng phần mềm này rồi đó, một server có thể nhắn tin cho nhiều client khác nhau ở mạng cục bộ:</p>\r\n\r\n<p><img alt=\"\" src=\"https://codelearn.io/Media/Default/Users/satellite1012/T%C3%ADn/t%E1%BA%A3i%20xu%E1%BB%91ng%20(6).png\" width=\"750\" /></p>\r\n\r\n<h3><strong>4. Kết thúc</strong></h3>\r\n\r\n<p>Vậy là trên đây mình đã hướng dẫn các bạn cách tạo cũng như chạy một phần mềm chat đơn giản bằng socket, lưu ý các dòng code ở trên chỉ là hướng dẫn các bạn thực thi các chức năng để có thể kết nối giữa client-server, các bạn hãy dựa vào và biến thể để tạo thành một phần mềm hoàn chỉnh. Hy vọng sau bài viết này, các bạn có thể biết thêm được nhiều kiến thức mới, cảm ơn các bạn đã đọc.&nbsp;</p>\r\n\r\n<p><em><strong>Tham khảo source code của mình tại:&nbsp;<a href=\"https://github.com/satellite1012/ChattingSoftwareDemo1\">chatting software</a>&nbsp;&nbsp;</strong>(Java_EclipseProject)</em></p>', '/images/130091593688263.jpg', 5, 5, 5, '9', '2020-07-02 04:11:03', '2020-10-09 08:27:34', 'hoctap;laptrinh;socket;app', 0),
(16, 'Xử Lý Bất Đồng Bộ Trong Javascript - Phần 1', '<p><strong>Chắc chắn khi lập trình, bạn sẽ có các công việc cần thời gian delay (gọi API, lấy dữ liệu từ Database, đọc/ghi file,...). Và đây chính là lúc xử lý bất đồng bộ lên ngôi, hãy cùng mình tìm hiểu về bất đồng bộ trong Javascript và chúng giúp code dễ dàng hơn thế nào nhé.</strong></p>\r\n\r\n<p>Trong phần đầu tiên này, chúng ta sẽ cùng tìm hiểu và khái niệm cũng như một số phương án xử lý hay dùng.</p>\r\n\r\n<h3>1. Quá trình đồng bộ (Synchronous)</h3>\r\n\r\n<p>Đây là một quá trình đã rất quen thuộc với chúng ta. Về cơ bản thì quá trình này gồm các câu lệnh được thực hiện theo thứ tự lần lần lượt, câu lệnh thứ nhất phải hoàn thành thì mới có thể thực hiện câu lệnh thứ 2, ...</p>\r\n\r\n<p>Ví dụ, đây là một đoạn code của quá trình đồng bộ:</p>\r\n\r\n<pre>\r\n<code>console.log(&quot;job1&quot;);\r\nconsole.log(&quot;job2&quot;);\r\nconsole.log(&quot;job3&quot;);</code></pre>\r\n\r\n<p>Các câu lệnh sẽ chạy lần lượt và cho ra kết quả như sau</p>\r\n\r\n<pre>\r\n<code>job1\r\njob2\r\njob3</code></pre>\r\n\r\n<p><strong>Ưu điểm:</strong>&nbsp;Do các câu lệnh được chạy lần lượt nên sẽ dễ kiểm soát hơn, ngoài ra nếu có bất kỳ lỗi nào thì chương trình cũng sẽ dừng lại mà không chạy tiếp.</p>\r\n\r\n<p><strong>Hạn chế:</strong>&nbsp;Đôi khi chúng ta cần lấy dữ liệu từ bên ngoài (đọc file, lấy dữ liệu từ DB, ...) nên sẽ cần một thời gian chờ nhất định. Nếu chúng ta thực hiện theo kiểu đồng bộ, thì thời gian chạy của toàn bộ chương trình sẽ bằng tổng thời gian thực hiện từng câu lệnh một</p>\r\n\r\n<p>==&gt; Điều này có thể làm giảm hiệu năng của chương trình. Ví dụ ta cần đọc&nbsp;<strong>100</strong>&nbsp;file, mỗi file cần&nbsp;<strong>0.5s</strong>&nbsp;==&gt; Tổng thời gian chạy chương trình sẽ là&nbsp;<strong>50s</strong>.</p>\r\n\r\n<p><img alt=\"\" src=\"https://codelearn.io/Media/Default/Users/D_2EA_2EN_5F3002/Async-Function/2A3Xj4V.png\" width=\"751\" /></p>\r\n\r\n<h3>2. Quá trình bất đồng bộ (Asynchronous)</h3>\r\n\r\n<p>Để giải quyết vấn đề ở quá trình đồng bộ thì chúng ta sẽ sử dụng quá trình bất đồng bộ. Đây là quá trình mà các câu lệnh có thể chạy cùng một lúc chứ không cần chờ câu lệnh trước. Với ví dụ trên, thì ta sẽ chạy đồng thời 100 câu lệnh đọc file cùng một lúc =&gt; Chúng ta sẽ chỉ mất khoảng&nbsp;<strong>0.5s</strong>&nbsp;đến&nbsp;<strong>1s</strong>&nbsp;thay vì&nbsp;<strong>50s</strong>&nbsp;như lúc trước.</p>\r\n\r\n<p>Một lưu ý là có thể câu lệnh thứ 2 sẽ thực hiện nhanh hơn câu lệnh 1 nên sẽ trả về kết quả sớm hơn. Do đó, kết quả của các câu lệnh cũng có thể được trả về không theo thứ tự gọi bạn đâu.</p>\r\n\r\n<p><img alt=\"\" src=\"https://codelearn.io/Media/Default/Users/D_2EA_2EN_5F3002/Async-Function/Mo7eBlr.png\" width=\"341\" /></p>\r\n\r\n<p><strong>Ưu điểm:</strong>&nbsp;Như đã nói, nó giúp chúng ta tối ưu được thời gian chạy của các câu lệnh. Cũng giúp chúng ta thực hiện các tác vụ mất nhiều thời gian mà không làm ảnh hưởng đến luồng chính của chương trình.</p>\r\n\r\n<p><strong>Khuyết điểm:</strong>&nbsp;Chính vì các câu lệnh được thực hiện đồng thời và kết quả cũng được trả về một cách không theo thứ tự nên sẽ khó kiểm soát cũng như debug code.</p>\r\n\r\n<h3>3. Các cách xử lý bất đồng bộ phổ biến</h3>\r\n\r\n<p>Vậy trong Javascript thì làm sao để các câu lệnh thực hiện theo đúng thứ tự ?? Mình sẽ nói đến 3 cách xử lý bất đồng bộ hay dùng nhất:</p>\r\n\r\n<ul>\r\n	<li>Callback</li>\r\n	<li>Promise</li>\r\n	<li>Async / Await</li>\r\n</ul>\r\n\r\n<p>3.1 Sử dụng Callback (ES5)</p>\r\n\r\n<p><code>Callback</code>&nbsp;hiểu đơn giản là bạn truyền một hàm B vào hàm A dưới dạng 1 tham số, một lúc nào đó thì hàm A sẽ gọi hàm B để chạy. Ví dụ:</p>\r\n\r\n<pre>\r\n<code>function asyncFunction(callback) {\r\n   console.log(&quot;Start&quot;);\r\n   setTimeout(() =&gt; {\r\n      callback();\r\n   }, 1000);\r\n   console.log(&quot;Waiting&quot;);\r\n}\r\n\r\nlet printEnd = function() {\r\n   console.log(&quot;End&quot;);\r\n}\r\n\r\nasyncFunction(printEnd)</code></pre>\r\n\r\n<p>*&nbsp;<strong>Ở đây mình dùng setTimeout để giả sử cho thời gian chờ là 1s.</strong></p>\r\n\r\n<p><strong>Kết quả khi chạy đoạn code trên:</strong></p>\r\n\r\n<pre>\r\n<code>Start\r\nWaiting\r\nEnd</code></pre>\r\n\r\n<p>Ở đây hàm callback của mình là&nbsp;<code>printEnd</code>&nbsp;và được truyền vào hàm&nbsp;<code>asyncFunction</code>&nbsp;dưới dạng 1 tham số. Sau khi chờ 1s thì&nbsp;asyncFunction mới gọi hàm callback để thực hiện các câu lệnh tiếp theo.&nbsp; Callback thường được sử dụng trong các&nbsp;<code>EventListener</code>&nbsp;để khi bắt được các sự kiện sẽ gọi đến hàm callback.</p>\r\n\r\n<p>Và tất nhiên callback cũng có nhược điểm của nó. Nếu như bạn cần thực hiện nhiều câu lệnh bất đồng bộ thì bạn cần phải lồng từng đó callback với nhau, khiến cho code sẽ vô cùng khó đọc, khó debug cũng như phát triển (trường hợp này được gọi là&nbsp;<strong>Callback Hell)</strong>,</p>\r\n\r\n<p><img alt=\"\" src=\"https://codelearn.io/Media/Default/Users/D_2EA_2EN_5F3002/Async-Function/1_Df2Tv5lqtw6793817sNLbw.png\" width=\"396\" /></p>\r\n\r\n<p><strong>Ví dụ:</strong></p>\r\n\r\n<pre>\r\n<code>function getData(link, callback) {\r\n   setTimeout(() =&gt; {\r\n      callback();\r\n   }, 1000)\r\n}\r\n\r\ngetData(&quot;Data1&quot;, () =&gt; {\r\n   getData(&quot;Data2&quot;, () =&gt; {\r\n      getData(&quot;Data2&quot;, () =&gt; {\r\n         getData(&quot;Data3&quot;, () =&gt; {\r\n            getData(&quot;Data4&quot;, () =&gt; {\r\n               getData(&quot;Data5&quot;, () =&gt; {\r\n                  getData(&quot;Data6&quot;, () =&gt; {\r\n                     console.log(&quot;Done&quot;);                     \r\n                  })\r\n               })\r\n            })\r\n         })\r\n      })\r\n   })\r\n})</code></pre>\r\n\r\n<p>3.2 Sử dụng Promise (ES6)</p>\r\n\r\n<p>Để giải quyết vấn đề Callback Hell ở trên, phiên bản ES6 đã đem đến cho chúng ta&nbsp;<code>Promise</code>. Về khái niệm,&nbsp;<code>Promise</code>&nbsp;chính là &quot;lời hứa&quot; đại diện cho giá trị chưa tồn tại và giá trị đó sẽ được trả về vào một thời gian trong tương lai.</p>\r\n\r\n<p>Ví dụ, khi bạn oder một món đồ ở trên mạng và cần 2 ngày để ship về, có thể thấy hành động giao hàng ở đây là bất đồng bộ (cần 2 ngày mới có thể hoàn thành). Thì chủ shop đã trao cho bạn một &quot;lời hứa&quot;&nbsp; đại diện cho món hàng đó. Sau đó, bạn vẫn thực hiện các hoạt động khác (ăn, ngủ, code) bình thường và cuối cùng sẽ nhận được món hàng sau 2 ngày và có thể sử dụng nó.</p>\r\n\r\n<p>Đây là cách để tạo ra một Promise:</p>\r\n\r\n<pre>\r\n<code>let promise = new Promise((resolve, reject) =&gt; {\r\n  // Asynchronous Code.\r\n});</code></pre>\r\n\r\n<p>Promise sẽ nhận vào một hàm callback gồm 2 tham số như sau:</p>\r\n\r\n<ul>\r\n	<li><code>resolve</code>: một&nbsp;<strong>function</strong>&nbsp;sẽ được gọi nếu đoạn code bất đồng bộ trong Promise chạy thành công.</li>\r\n	<li><code>reject</code>: một&nbsp;<strong>function</strong>&nbsp;sẽ được gọi nếu đoạn code bất đồng bộ trong Promise có lỗi xảy ra.</li>\r\n</ul>\r\n\r\n<p>Promise cũng cung cấp cho chúng ta 2 phương thức để xử lý sau khi được thực hiện:</p>\r\n\r\n<ul>\r\n	<li><code>then():</code>&nbsp;Dùng để xử lý sau khi Promise được thực hiện thành công (khi&nbsp;<strong>resolve</strong>&nbsp;được gọi).</li>\r\n	<li><code>catch():</code>&nbsp;Dùng để xử lý sau khi Promise có bất kỳ lỗi nào đó (khi&nbsp;<strong>reject</strong>&nbsp;được gọi).</li>\r\n</ul>\r\n\r\n<p>Dưới đây là đoạn code hoàn chỉnh về việc sử dụng Promise:</p>\r\n\r\n<pre>\r\n<code>const randomNumber = new Promise((resolve, reject) =&gt; {\r\n   const url = &#39;https://www.random.org/integers/?num=1&amp;min=1&amp;max=10&amp;col=1&amp;base=10&amp;format=plain&amp;rnd=new&#39;;\r\n   let request = new XMLHttpRequest();\r\n\r\n   request.open(&#39;GET&#39;, url);\r\n   request.onload = function() {\r\n      if (request.status == &#39;200&#39;) {\r\n         resolve(request.response);\r\n      } else {\r\n         reject(Error(request.statusText)); \r\n      }\r\n   };\r\n\r\n   request.onerror = function() {\r\n      reject(Error(&#39;Error fetching data.&#39;));\r\n   };\r\n\r\n   request.send();\r\n});\r\n\r\nrandomNumber\r\n.then((res) =&gt; {\r\n   console.log(&quot;Success&quot;);\r\n   console.log(&quot;Random number: &quot;, res);\r\n})\r\n.catch((err) =&gt; {\r\n   console.log(&quot;Error: &quot;, err.message);\r\n})</code></pre>\r\n\r\n<p>Mình đã khởi tạo một Promise là&nbsp;<code>randomNumber</code>, nhiệm vụ của Promise này là gọi lên API để lấy một số ngẫu nhiêu trong khoảng [1, 10]. Nếu lấy được số thành công thì sẽ truyền kết quả qua hàm&nbsp;<code>resolve()</code>, còn nếu có lỗi thì sẽ truyền lỗi qua hàm&nbsp;<code>reject()</code>.</p>\r\n\r\n<p>Ở hàm&nbsp;<code>then()</code>, mình truyền vào 1 callback để in số đó ra nếu lấy thành công</p>\r\n\r\n<p>Còn hàm&nbsp;<code>catch()</code>&nbsp;thì là callback để thông báo lỗi nếu thất bại.</p>\r\n\r\n<p>Ngoài ra, ta cũng có thể nối nhiều Promise với nhau (<strong>Promise Chaining</strong>) để xử lý nhiều thao tác bất đồng bộ lồng nhau. Từ đó tránh được&nbsp;<strong>Callback Hell</strong>. Ví dụ:</p>\r\n\r\n<pre>\r\n<code>getAsyncData(url)\r\n.then((res) =&gt; {getAsyncData(res.url1)})\r\n.then((res) =&gt; {getAsyncData(res.url2)})\r\n.then((res) =&gt; {getAsyncData(res.url3)})\r\n.then((res) =&gt; {getAsyncData(res.url4)})\r\n.then((res) =&gt; {getAsyncData(res.url4)})\r\n.then((res) =&gt; {\r\n   console.log(&quot;Done&quot;);\r\n   console.log(res);\r\n})</code></pre>\r\n\r\n<h3>Tạm Kết</h3>\r\n\r\n<p>Vậy là mình đã giới thiệu với các bạn khái quát về bất đồng bộ cũng như một số cách xử lý hay dùng. Tất nhiên còn 1 cách nữa là&nbsp;<code>Async / Await,</code>&nbsp;mình sẽ nói rõ hơn ở phần 2 :)) Cảm ơn các bạn đã đọc hết bài viết :))</p>', '/images/405711593688335.jpg', 4, 5, 46, '9', '2020-07-02 04:12:15', '2020-10-09 09:33:41', 'js;laptrinh;bug', 0);
INSERT INTO `blog` (`id_blog`, `title_blog`, `content_blog`, `img_blog`, `cate_parent`, `rate_blog`, `view_blog`, `auth`, `created_at`, `updated_at`, `tag_blog`, `stt_blog`) VALUES
(17, 'Cách Kết Nối Cơ Sở Dữ Liệu Với ADO.NET', '<p><strong>Công nghệ ngày càng phát triển theo thời gian, nhiều framework cũng từ đó mà được sinh ra, cách kết nối cơ sở dữ liệu cũng không ngoại lệ. Hiện nay có nhiều framework miễn phí hỗ trợ chúng ta kết nối cơ sở dữ liệu như Entity Framework, Dapper, NHibernate... Việc sử dụng những framework trên giúp chúng ta tiết kiệm được rất nhiều thời gian.</strong></p>\r\n\r\n<p>Vậy trước kia, những lập trình viên sử dụng công nghệ gì để hỗ trợ kết nối cơ sở dữ liệu? Hôm nay mình xin chia sẻ với các bạn một kỹ thuật kết nối tới cơ sở dữ liệu đó chính là ADO.NET</p>\r\n\r\n<h3><strong>1. ADO.NET là gì?</strong></h3>\r\n\r\n<p>ADO.NET là tập hợp các thư viện được cung cấp bởi Microsoft nhằm giúp cho ứng dụng có thể thao tác (select, insert, update, delete) tới cơ sở dữ liệu (CSDL) bất kỳ như Sql Server, Oracle, MySql, SQLite...</p>\r\n\r\n<h3><strong>2. Kiến trúc của ADO.NET</strong></h3>\r\n\r\n<p>ADO.NET được chia thành 2 thành phần chính là&nbsp;<code>Data Provider</code>&nbsp;và&nbsp;<code>Data Set</code>&nbsp;như hình vẽ dưới đây<br />\r\n<br />\r\n<img alt=\"\" src=\"https://codelearn.io/Media/Default/Users/tuann6/Ado/AdoNet-01.png\" width=\"657\" /><br />\r\n<br />\r\n<strong>2.1. Data Provider</strong></p>\r\n\r\n<p>Gồm các thư viện cung cấp cách thức kết nối tới CSDL và thao tác tới dữ liệu. Mặc định .Net cung cấp sẵn cho chúng ta thư viện để kết nối tới Sql Server -&nbsp;SqlClient (System.Data). Để sử dụng các loại cơ sở dữ liệu khác chúng ta có thể tải về từ Nuget.<br />\r\n<br />\r\nMột số từ khóa bạn có thể sử dụng để tìm kiếm như: mysql provider (provider cho Mysql); sqlite provider (provider cho SqlLite); ...</p>\r\n\r\n<p><strong>2.2. Data Set</strong></p>\r\n\r\n<p>Gồm các thư viện để quản lý dữ liệu như DataTable (đại diện cho các bảng có trong CSDL); DataColumn (đại diện cho các cột có trong bảng); DataRow (đại diện cho dữ liệu); khóa chính; Constraint (đại diện cho khóa ngoại của bảng); DataRelation (đại diện cho mỗi quan hệ giữa các bảng)...</p>\r\n\r\n<h3><strong>3. ADO.NET dùng để làm gì?</strong></h3>\r\n\r\n<p>Mình sẽ tạo ra class&nbsp;AdoNetCSharp để làm ví dụ xuyên suốt trong bài viêt và được gọi trong hàm&nbsp;<code>main</code>&nbsp;như sau:</p>\r\n\r\n<pre>\r\n<code>static void Main(string[] args)\r\n        {\r\n            var adoNet = new AdoNetCSharp();\r\n            adoNet.Run();\r\n\r\n            Console.ReadKey();\r\n        }</code></pre>\r\n\r\n<p><br />\r\nGiả sử mình có CSDL tại IP là &quot;<code>127.0.0.1</code>&quot;; tên CSDL là &quot;<code>ADONETEXAMPLE</code>&quot;; tài khoản kết nối là &quot;<code>testado</code>&quot; và mật khẩu là &quot;<code>testado.net</code>&quot;. Trong CSDL có bảng &quot;<code>Users</code>&quot; gồm các trường và dữ liệu như hình vẽ dưới đây:<br />\r\n<br />\r\n<img alt=\"\" src=\"https://codelearn.io/Media/Default/Users/tuann6/Ado/AdoNet-02.png\" width=\"387\" /><br />\r\n<br />\r\n<img alt=\"\" src=\"https://codelearn.io/Media/Default/Users/tuann6/Ado/AdoNet-04.png\" width=\"541\" /><br />\r\n<br />\r\nCó 1 view là vwUsers<br />\r\n<br />\r\n<img alt=\"\" src=\"https://codelearn.io/Media/Default/Users/tuann6/Ado/AdoNet-06.png\" width=\"334\" /><br />\r\n<br />\r\nCó 2 store procedure là&nbsp;spGetAllUsers - xác định danh sách các user có trong bảng Users, spGetUserByUsername - xác định danh sách các user có Username giống với tham số @Username truyền vào.<br />\r\n<br />\r\n<img alt=\"\" src=\"https://codelearn.io/Media/Default/Users/tuann6/Ado/AdoNet-07.png\" width=\"500\" /><br />\r\n<br />\r\n<img alt=\"\" src=\"https://codelearn.io/Media/Default/Users/tuann6/Ado/AdoNet-08.png\" width=\"512\" /><br />\r\n<br />\r\n<strong>3.1. Chuỗi kết nối cơ sở dữ liệu</strong></p>\r\n\r\n<p>Chuỗi chứa thông tin kết nối tới cơ sở dữ liệu như địa chỉ chứa CSDL, tên CSDL, thông tin tài khoản kết nối tới CSDL...<br />\r\nCấu trúc của chuỗi kết nối CSDL như sau:<br />\r\n&nbsp;</p>\r\n\r\n<pre>\r\n<code>keyword1=value1; keyword2=value2;</code></pre>\r\n\r\n<p><br />\r\nTrong đó keywork không phân biệt chữ hoa, chữ thường; value tùy thuộc vào giá trị mà sẽ có sự phân biệt. Mình sẽ liệt kê một số các keyword hay được sử dụng ở bảng dưới đây.<br />\r\n&nbsp;</p>\r\n\r\n<table border=\"1\">\r\n	<tbody>\r\n		<tr>\r\n			<td><strong>Keyword</strong></td>\r\n			<td><strong>Mô tả</strong></td>\r\n		</tr>\r\n		<tr>\r\n			<td>Connect Timeout / Timeout / Connection Timeout</td>\r\n			<td>Thời gian timeout khi thực hiện kết nối. Giá trị mặc định là 15 (giây).<br />\r\n			<br />\r\n			Lưu ý: không nên thay đổi giá trị này. Nếu bạn để nhỏ hơn thì rất dễ xảy ra timeout. Nếu để lớn hơn thì connection sẽ được giữ lại và ảnh hưởng tới những connection phía sau.</td>\r\n		</tr>\r\n		<tr>\r\n			<td>Data Source / Server / Address/Addr</td>\r\n			<td>Địa chỉ CSDL. Trong trường hợp bạn sử dụng cổng khác với cổng mặc định thì thêm &quot;,port&quot; và phía sau giá trị.</td>\r\n		</tr>\r\n		<tr>\r\n			<td>Initial Catalog/Database</td>\r\n			<td>Tên CSDL.</td>\r\n		</tr>\r\n		<tr>\r\n			<td>User ID/UID</td>\r\n			<td>Tên tài khoản đăng nhập.</td>\r\n		</tr>\r\n		<tr>\r\n			<td>Password/PWD</td>\r\n			<td>Mật khẩu đăng nhập.</td>\r\n		</tr>\r\n		<tr>\r\n			<td>Application Name</td>\r\n			<td>Thiết lập tên ứng dụng kết nối tới CSDL. Mặc định nếu không có sẽ là &quot;.Net SqlClient Data Provider&quot;.<br />\r\n			<br />\r\n			Lưu ý: nên sử dụng giá trị này để dễ dàng xác định khi thực hiện truy vấn log. Bạn sẽ thấy hữu ích khi sử dụng phần mềm SQL Server Profiler.</td>\r\n		</tr>\r\n		<tr>\r\n			<td>MultipleActiveResultSets</td>\r\n			<td>Thiết lập thao tác tới CSDL trên cùng một connection. Giá trị là True hoặc False&nbsp;(giá trị mặc định).</td>\r\n		</tr>\r\n		<tr>\r\n			<td>Pooling</td>\r\n			<td>Thiết lập cơ chế tái sử dụng connection.</td>\r\n		</tr>\r\n		<tr>\r\n			<td>Min Pool Size</td>\r\n			<td>Số connection tối thiểu có trong pool (có thể dịch là tập hợp các connection).</td>\r\n		</tr>\r\n		<tr>\r\n			<td>Max Pool Size</td>\r\n			<td>Số connection tối đa có trong pool.</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p><br />\r\nVí dụ chuỗi kết nối như sau:<br />\r\n&nbsp;</p>\r\n\r\n<pre>\r\n<code>var connectionString = &quot;Server=127.0.0.1; Initial Catalog=ADONETEXAMPLE; User ID=testado; Password=testado.net; Application Name=Test ADP.NET&quot;;</code></pre>\r\n\r\n<p>Ngoài cách thiết lập chuỗi kết nối như trên, chúng ta có thể tạo chuỗi kết nối bằng cách sử dụng class&nbsp;SqlConnectionStringBuilder (System.Data.SqlClient)</p>\r\n\r\n<pre>\r\n<code>var connectionStringBuilder = new SqlConnectionStringBuilder();\r\nconnectionStringBuilder[&quot;Server&quot;] = &quot;127.0.0.1&quot;;\r\nconnectionStringBuilder[&quot;Initial Catalog&quot;] = &quot;ADONETEXAMPLE&quot;;\r\nconnectionStringBuilder[&quot;User ID&quot;] = &quot;testado&quot;;\r\nconnectionStringBuilder[&quot;Password&quot;] = &quot;testado.net&quot;;\r\nconnectionStringBuilder[&quot;Application Name&quot;] = &quot;Test ADP.NET&quot;;\r\n\r\nvar connectionString = connectionStringBuilder.ToString();</code></pre>\r\n\r\n<p><br />\r\n<strong>3.2. Kết nối</strong></p>\r\n\r\n<p>Để kết nối tới CSDL, chúng ta dùng class SqlConnection như đoạn code dưới đây</p>\r\n\r\n<pre>\r\n<code>public class AdoNetCSharp\r\n    {\r\n        public void Run()\r\n        {\r\n            var connectionString = &quot;Server=127.0.0.1; Initial Catalog=ADONETEXAMPLE; User ID=testado; Password=testado.net; Application Name=Test ADP.NET&quot;;\r\n            using (var connection = new SqlConnection(connectionString))\r\n            {\r\n                connection.Open();\r\n                //  TODO:...\r\n            }\r\n        }\r\n    }</code></pre>\r\n\r\n<p><br />\r\nBất kể bạn muốn làm gì trên CSDL, bạn cần thực hiện Open trước. Sau khi dùng sau, bạn phải nhớ Close connection lại. Trong ví dụ trên, bạn không thấy hàm Close nhưng khi bạn sử dụng using, .Net đã làm giúp bạn điều đó.</p>\r\n\r\n<p><strong>3.3. Truy vấn CSDL</strong></p>\r\n\r\n<p>Để truy vấn một bảng, chúng ta sử dụng đoạn code sau:<br />\r\n&nbsp;</p>\r\n\r\n<pre>\r\n<code>public class AdoNetCSharp\r\n    {\r\n        public void Run()\r\n        {\r\n            var connectionString = &quot;Server=127.0.0.1; Initial Catalog=ADONETEXAMPLE; User ID=testado; Password=testado.net; Application Name=Test ADP.NET&quot;;\r\n            using (var connection = new SqlConnection(connectionString))\r\n            {\r\n                connection.Open();\r\n                \r\n                using (var command = connection.CreateCommand())\r\n                {\r\n                    command.CommandText = &quot;Select * From Users&quot;;\r\n\r\n                    var reader = command.ExecuteReader();\r\n                    while (reader.Read())\r\n                    {\r\n                        var sUserId = reader[&quot;UserId&quot;].ToString();\r\n                        var username = reader[&quot;Username&quot;].ToString();\r\n                        var password = reader[&quot;Password&quot;].ToString();\r\n                        var fullName = reader[&quot;Fullname&quot;] != null ? reader[&quot;Fullname&quot;].ToString() : string.Empty;\r\n                        var sState = reader[&quot;State&quot;].ToString();\r\n\r\n                        Console.WriteLine(&quot;{0}=={1}=={2}=={3}=={4}&quot;, sUserId, username, password, fullName, sState);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }</code></pre>\r\n\r\n<p><br />\r\nTrong ví dụ trên, chúng ta sử dụng câu lệnh sql là &quot;<code>Select * From Users</code>&quot; để thực hiện truy vấn dữ liệu. Đây là câu lệnh truy vấn trực tiếp đến bảng Users. Chúng ta có thể sử dụng view để truy vấn bằng cách thay câu lệnh sql thành &quot;Select * From vwUsers&quot;.<br />\r\n<br />\r\nNgoài việc sử dụng câu lệnh thuần sql (giá trị mặc định là enum&nbsp;<code>System.Data.CommandType.Text</code>), chúng ta có thể sử dụng store procedure để thực hiện việc lấy dữ liệu. Để thực hiện lấy thông tin qua store procedure, chúng ta thay bằng đoạn code sau:<br />\r\n&nbsp;</p>\r\n\r\n<pre>\r\n<code>public class AdoNetCSharp\r\n    {\r\n        public void Run()\r\n        {\r\n            var connectionString = &quot;Server=127.0.0.1; Initial Catalog=ADONETEXAMPLE; User ID=testado; Password=testado.net; Application Name=Test ADP.NET&quot;;\r\n            using (var connection = new SqlConnection(connectionString))\r\n            {\r\n                connection.Open();\r\n                \r\n                using (var command = connection.CreateCommand())\r\n                {\r\n                    command.CommandType = CommandType.StoredProcedure;\r\n                    command.CommandText = &quot;spGetAllUsers&quot;;\r\n\r\n                    var reader = command.ExecuteReader();\r\n                    while (reader.Read())\r\n                    {\r\n                        var sUserId = reader[&quot;UserId&quot;].ToString();\r\n                        var username = reader[&quot;Username&quot;].ToString();\r\n                        var password = reader[&quot;Password&quot;].ToString();\r\n                        var fullName = reader[&quot;Fullname&quot;] != null ? reader[&quot;Fullname&quot;].ToString() : string.Empty;\r\n                        var sState = reader[&quot;State&quot;].ToString();\r\n\r\n                        Console.WriteLine(&quot;{0}=={1}=={2}=={3}=={4}&quot;, sUserId, username, password, fullName, sState);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }</code></pre>\r\n\r\n<p><br />\r\nBạn cần thêm&nbsp;<code>CommandType</code>&nbsp;là&nbsp;<code>StoreProcedure</code>&nbsp;(kiểu enum System.Data.CommandType) để xác định thực hiện bằng store. Tên store sẽ nằm trong thuộc tính CommandText.<br />\r\n<br />\r\nKết quả của những đoạn code trên:<br />\r\n<br />\r\n<img alt=\"\" src=\"https://codelearn.io/Media/Default/Users/tuann6/Ado/AdoNet-05.png\" width=\"439\" /><br />\r\n<br />\r\nTrong trường hợp, chúng ta muốn tìm kiếm user có Username định dạng giống với tham số truyền vào thì đoạn code như sau:<br />\r\n&nbsp;</p>\r\n\r\n<pre>\r\n<code>public class AdoNetCSharp\r\n    {\r\n        public void Run()\r\n        {\r\n            var connectionString = &quot;Server=127.0.0.1; Initial Catalog=ADONETEXAMPLE; User ID=testado; Password=testado.net; Application Name=Test ADP.NET&quot;;\r\n            using (var connection = new SqlConnection(connectionString))\r\n            {\r\n                connection.Open();\r\n                \r\n                using (var command = connection.CreateCommand())\r\n                {\r\n                    var likeUsername = &quot;XXX&quot;;\r\n\r\n                    command.CommandText = &quot;Select * From Users Where Username Like &#39;&quot; + likeUsername + &quot;%&#39;&quot;;\r\n\r\n                    var reader = command.ExecuteReader();\r\n                    while (reader.Read())\r\n                    {\r\n                        var sUserId = reader[&quot;UserId&quot;].ToString();\r\n                        var username = reader[&quot;Username&quot;].ToString();\r\n                        var password = reader[&quot;Password&quot;].ToString();\r\n                        var fullName = reader[&quot;Fullname&quot;] != null ? reader[&quot;Fullname&quot;].ToString() : string.Empty;\r\n                        var sState = reader[&quot;State&quot;].ToString();\r\n\r\n                        Console.WriteLine(&quot;{0}=={1}=={2}=={3}=={4}&quot;, sUserId, username, password, fullName, sState);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }</code></pre>\r\n\r\n<p><br />\r\nKết quả cho như sau:<br />\r\n<br />\r\n<img alt=\"\" src=\"https://codelearn.io/Media/Default/Users/tuann6/Ado/AdoNet-10.png\" width=\"462\" /><br />\r\n<br />\r\n<strong>3.4. Insert/Update/Delete</strong></p>\r\n\r\n<p>Về cơ bản đoạn code để thực hiện 3 lệnh trên là giống nhau, mình chỉ đưa ra ví dụ thực hiện lệnh Insert, các bạn có thể làm tương tự với các lệnh Update và Delete.<br />\r\n&nbsp;</p>\r\n\r\n<pre>\r\n<code>public class AdoNetCSharp\r\n    {\r\n        public void Run()\r\n        {\r\n            var connectionString = &quot;Server=127.0.0.1; Initial Catalog=ADONETEXAMPLE; User ID=testado; Password=testado.net; Application Name=Test ADP.NET&quot;;\r\n            using (var connection = new SqlConnection(connectionString))\r\n            {\r\n                connection.Open();\r\n                \r\n                using (var command = connection.CreateCommand())\r\n                {\r\n                    var username = &quot;XXX03&quot;;\r\n                    var password = &quot;Xxx03&quot;;\r\n                    var fullName = &quot;X3&quot;;\r\n                    var state = &quot;True&quot;;\r\n\r\n                    command.CommandText = &quot;Insert Into Users (Username, Password, Fullname, State) &quot; +\r\n                        &quot;Values (N&#39;&quot; + username + &quot;&#39;, N&#39;&quot; + password + &quot;&#39;, N&#39;&quot; +  fullName + &quot;&#39;, &#39;&quot; + state + &quot;&#39;)&quot;;\r\n\r\n                    var affectedRow = command.ExecuteNonQuery();\r\n\r\n                    Console.WriteLine(affectedRow); //  Output: 1\r\n                }\r\n            }\r\n        }\r\n    }</code></pre>\r\n\r\n<p><br />\r\nKết quả trong CSDL sẽ có bản ghi mới như sau:<br />\r\n<br />\r\n<img alt=\"\" src=\"https://codelearn.io/Media/Default/Users/tuann6/Ado/AdoNet-09.png\" width=\"539\" /><br />\r\n&nbsp;</p>\r\n\r\n<h3><strong>4. Lưu ý</strong></h3>\r\n\r\n<p><strong>4.1. Kiểm tra dữ liệu khi đọc thông tin</strong></p>\r\n\r\n<p>Cùng xem lại đoạn code sau:<br />\r\n&nbsp;</p>\r\n\r\n<pre>\r\n<code>while (reader.Read())\r\n{\r\n	var sUserId = reader[&quot;UserId&quot;].ToString();\r\n	var username = reader[&quot;Username&quot;].ToString();\r\n	var password = reader[&quot;Password&quot;].ToString();\r\n	var fullName = reader[&quot;Fullname&quot;] != null ? reader[&quot;Fullname&quot;].ToString() : string.Empty;\r\n	var sState = reader[&quot;State&quot;].ToString();\r\n\r\n	Console.WriteLine(&quot;{0}=={1}=={2}=={3}=={4}&quot;, sUserId, username, password, fullName, sState);\r\n}</code></pre>\r\n\r\n<p><br />\r\nTrong cấu trúc bảng Users, trường UserId, Username, Password và State là những trường bắt buộc nhập nên việc kiểm tra dữ liệu lúc đọc là không cần thiết (đã được kiểm tra trước khi Insert); trường Fullname là trường cho phép NULL nên bắt buộc phải kiểm tra dữ liệu. Điều này nói lên rằng, chúng ta không được quá lạm dụng việc kiểm tra dữ liệu (vì mỗi lần kiểm tra dữ liệu là một lần CPU hoạt động).</p>\r\n\r\n<p><strong>4.2. Lưu ý khi sử dụng&nbsp;MultipleActiveResultSets</strong></p>\r\n\r\n<p>Là một tính năng chỉ làm việc với Sql Server.<br />\r\n<br />\r\n- Chỉ nên sử dụng tính năng này đối với những ứng dụng có xử lý song song để tận dụng connection cho nhiều thao tác.</p>\r\n\r\n<p><strong>4.3. Lưu ý khi sử dụng pool</strong></p>\r\n\r\n<p>- Để thao tác với CSDL, chúng ta cần thực hiện Open - Close connection. Nếu quá trình Open - Close này xảy ra liên tục sẽ ảnh hưởng tới hiệu năng của chương trình. Để tránh việc Open - Close liên tục như vậy, .Net cung cấp khái niệm là pool - chứa các connection. Việc lựa chọn connection nào sẽ được thực hiện khi khởi tạo SqlConnection.<br />\r\n<br />\r\n- .Net sử dụng connection string để phân biệt các connection có trong pool. Chúng ta hãy xem ví dụ sau:<br />\r\n&nbsp;</p>\r\n\r\n<pre>\r\n<code>public class AdoNetCSharp\r\n    {\r\n        public void Run()\r\n        {\r\n            var connectionString = &quot;Server=127.0.0.1; Initial Catalog=ADONETEXAMPLE; User ID=testado; Password=testado.net; Application Name=Test ADP.NET&quot;;\r\n            using (var connection = new SqlConnection(connectionString))\r\n            {\r\n                connection.Open();\r\n                //  TODO: Connection đầu tiên được tạo tại đây.\r\n            }\r\n\r\n            connectionString = &quot;Server=127.0.0.1; Initial Catalog=ADONETEXAMPLE; User ID=testado1; Password=testado1.net; Application Name=Test ADP.NET&quot;;\r\n            using (var connection = new SqlConnection(connectionString))\r\n            {\r\n                connection.Open();\r\n                //  TODO: Connection thứ 2 được tạo tại đây.\r\n            }\r\n\r\n            connectionString = &quot;Server=127.0.0.1; Initial Catalog=ADONETEXAMPLE; User ID=testado; Password=testado.net; Application Name=Test ADP.NET&quot;;\r\n            using (var connection = new SqlConnection(connectionString))\r\n            {\r\n                connection.Open();\r\n                //  TODO: Tái sử dụng lại connection đầu tiên\r\n            }\r\n        }\r\n    }</code></pre>\r\n\r\n<p><br />\r\nĐiều này có thể hiểu rằng, hiện tại trong pool có 2 connection được chờ sẵn.</p>\r\n\r\n<p><strong>4.4. Sử dụng tham số (Parameters) trong câu lệnh thao tác CSLD</strong></p>\r\n\r\n<p>- Đối với những thao tác có truyền tham số, chúng ta cần sử dụng Parameters để tránh việc bị&nbsp;<a href=\"https://codelearn.io/sharing/sql-injection-nguy-hiem-voi-website\">tấn công Sql Injection</a>. Các ví dụ phía trên (tìm kiếm user với Username có định dạng bất kỳ; thêm mới bản ghi vào bảng Users) mình viết dưới dạng câu lệnh thường nhưng trên thực tế thì không được phép viết như vậy.<br />\r\n<br />\r\n- Đối với chức năng tìm kiếm user với Username có định dạng bất kỳ cần thực hiện như đoạn code dưới đây:<br />\r\n&nbsp;</p>\r\n\r\n<pre>\r\n<code>public class AdoNetCSharp\r\n    {\r\n        public void Run()\r\n        {\r\n            var connectionString = &quot;Server=127.0.0.1; Initial Catalog=ADONETEXAMPLE; User ID=testado; Password=testado.net; Application Name=Test ADP.NET&quot;;\r\n            using (var connection = new SqlConnection(connectionString))\r\n            {\r\n                connection.Open();\r\n\r\n                using (var command = connection.CreateCommand())\r\n                {\r\n                    var likeUsername = &quot;XXX&quot;;\r\n\r\n                    command.CommandText = &quot;Select * From Users Where Username Like @Username&quot;;\r\n                    command.Parameters.Add(new SqlParameter(&quot;@Username&quot;, &quot;&quot; + likeUsername + &quot;%&quot;));\r\n\r\n                    var reader = command.ExecuteReader();\r\n                    while (reader.Read())\r\n                    {\r\n                        var sUserId = reader[&quot;UserId&quot;].ToString();\r\n                        var username = reader[&quot;Username&quot;].ToString();\r\n                        var password = reader[&quot;Password&quot;].ToString();\r\n                        var fullName = reader[&quot;Fullname&quot;] != null ? reader[&quot;Fullname&quot;].ToString() : string.Empty;\r\n                        var sState = reader[&quot;State&quot;].ToString();\r\n\r\n                        Console.WriteLine(&quot;{0}=={1}=={2}=={3}=={4}&quot;, sUserId, username, password, fullName, sState);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }</code></pre>\r\n\r\n<p><br />\r\n- Đối với chức năng Insert vào CSDL thì đoạn code phải là:<br />\r\n&nbsp;</p>\r\n\r\n<pre>\r\n<code>public class AdoNetCSharp\r\n    {\r\n        public void Run()\r\n        {\r\n            var connectionString = &quot;Server=127.0.0.1; Initial Catalog=ADONETEXAMPLE; User ID=testado; Password=testado.net; Application Name=Test ADP.NET&quot;;\r\n            using (var connection = new SqlConnection(connectionString))\r\n            {\r\n                connection.Open();\r\n\r\n                using (var command = connection.CreateCommand())\r\n                {\r\n                    var username = &quot;XXX03&quot;;\r\n                    var password = &quot;Xxx03&quot;;\r\n                    var fullName = &quot;X3&quot;;\r\n                    var state = &quot;True&quot;;\r\n\r\n                    command.CommandText = &quot;Insert Into Users (Username, Password, Fullname, State) Values (@Username, @Password, @Fullname, @State)&quot;;\r\n                    command.Parameters.Add(new SqlParameter(&quot;@Username&quot;, username));\r\n                    command.Parameters.Add(new SqlParameter(&quot;@Password&quot;, password));\r\n                    command.Parameters.Add(new SqlParameter(&quot;@Fullname&quot;, fullName));\r\n                    command.Parameters.Add(new SqlParameter(&quot;@State&quot;, state));\r\n\r\n                    var affectedRow = command.ExecuteNonQuery();\r\n\r\n                    Console.WriteLine(affectedRow); //  Output: 1\r\n                }\r\n            }\r\n        }\r\n    }</code></pre>\r\n\r\n<p><strong>4.5. Sử dụng Transtraction</strong></p>\r\n\r\n<p>Đối với những trường hợp chúng ta cần thực hiện nhiều thao tác phải đảm bảo an toàn dữ liệu, chúng ta cần sử dụng Transaction như code dưới đây:<br />\r\n&nbsp;</p>\r\n\r\n<pre>\r\n<code>public class AdoNetCSharp\r\n    {\r\n        public void Run()\r\n        {\r\n            var connectionString = &quot;Server=127.0.0.1; Initial Catalog=ADONETEXAMPLE; User ID=testado; Password=testado.net; Application Name=Test ADP.NET&quot;;\r\n            using (var connection = new SqlConnection(connectionString))\r\n            {\r\n                connection.Open();\r\n\r\n                var transaction = connection.BeginTransaction();\r\n\r\n                try\r\n                {\r\n                    using (var command = connection.CreateCommand())\r\n                    {\r\n                        command.Transaction = transaction;\r\n                        //  TODO: Thao tác 1\r\n                    }\r\n\r\n                    using (var command = connection.CreateCommand())\r\n                    {\r\n                        command.Transaction = transaction;\r\n                        //  TODO: Thao tác 2\r\n                    }\r\n\r\n                    transaction.Commit();\r\n                }\r\n                catch (Exception)\r\n                {\r\n                    transaction.Rollback();\r\n                }\r\n            }\r\n        }\r\n    }</code></pre>\r\n\r\n<p><br />\r\nKhi đã bắt đầu transaction thì kết thúc phải là&nbsp;<code>Commit</code>&nbsp;(thực hiện thành công) hoặc&nbsp;<code>Rollback</code>&nbsp;(thực hiện lỗi và đưa dữ liệu về dữ liệu trước khi thực hiện các thao tác).</p>\r\n\r\n<h3><strong>Kết luận</strong></h3>\r\n\r\n<p>Mình đã giới thiệu tới các bạn toàn bộ hiểu biết của mình về ADO.NET. Rất mong bài viết sẽ có ích cho các bạn.</p>', '/images/778991593688654.jpg', 6, 5, 6, '9', '2020-07-02 04:17:34', '2020-10-09 08:27:34', 'db;ado;csdl', 0),
(18, 'Lập Trình Viên Android Chuyên Nghiệp Cần Gì?', '<p><strong><em>&ldquo;Lập trình viên Android cần học những gì?&rdquo;</em>&nbsp;là câu hỏi mà nhiều bạn trẻ đặt ra khi bắt đầu học lập trình Android nhưng hãy thử đổi câu hỏi đó thành&nbsp;<em>&quot;Lập trình viên Android chuyên nghiệp cần gì?&quot;</em>&nbsp;nó sẽ giúp các bạn trở nên chuyên nghiệp hơn và dễ dàng được tuyển chọn hơn khi ứng tuyển vào các công ty công nghệ. Vậy cái gì hay điều gì là cần thiết để các lập trình viên Android trở nên chuyên nghiệp, hãy cùng mình tìm hiểu trong bài viết này nhé!</strong></p>\r\n\r\n<p>Đầu tiên thay cho tất cả, để trở thành một lập trình viên nói chung hay trở thành một lập trình viên Android chuyên nghiệp nói riêng, các bạn hãy chuẩn bị cho mình&nbsp;<strong>&quot;một tâm hồn tươi đẹp&quot;</strong>. OK Just for fun, mình chỉ đùa thôi, mình sẽ chỉ ra 5 thứ mà các bạn cần phải có nếu muốn trở thành một lập trình viên Android chuyên nghiệp. Đừng lười đọc nhé, hãy cố gắng đọc hết bài viết, nó sẽ là liều thuốc bổ giúp bạn trong bước đường phát triển sự nghiệp lập trình.</p>\r\n\r\n<h3><strong>Nắm vững một ngôn ngữ lập trình</strong></h3>\r\n\r\n<p>Ngôn ngữ lập trình là thứ không thể thiếu đối với mỗi lập trình viên, nếu các bạn muốn trở thành lập trình viên mà không biết về bất cứ một ngôn ngữ lập trình nào thì giống như các bạn cầu mong được trúng vé số nhưng lại không mua vé số vậy. Ngôn ngữ lập trình thì nhiều vô số kể, nó nhiều còn hơn cả các bí kíp võ công trong phim kiếm hiệp Kim Dung.</p>\r\n\r\n<p>Tuy nhiên đối với nên tảng Android, Google (công ty sỡ hữu hệ điều hành Android) chỉ cho phép các nhà phát triển (hay lập trình viên) sử dụng một trong hai ngôn ngữ là&nbsp;<strong>JAVA</strong>&nbsp;hoặc&nbsp;<strong>KOTLIN</strong>&nbsp;làm ngôn ngữ lập trình chính thức để phát triển các ứng dụng trên nền tảng này. Cả hai ngôn ngữ này đều là những ngôn ngữ lập trình hướng đối tượng, để học được nó thì các bạn phải nắm được các khái niệm về hướng đối tượng.&nbsp;<a href=\"https://codelearn.io/learning/java-co-ban\">JAVA</a>&nbsp;thì có từ lâu đời rồi và nó cũng là ngôn ngữ lập trình đầu tiên mà Android lựa chọn, còn KOTLIN thì chỉ mới đây thôi (được giới thiệu vào tháng 7 năm 2011). Vì được ra sau nên KOTLIN có phần nhỉnh hơn một xíu, nó kế thừa toàn bộ tinh hoa của JAVA đồng thời khắc phục những điểm yếu mà vị huynh trưởng của nó mắc phải.</p>\r\n\r\n<p><img alt=\"\" src=\"https://codelearn.io/Media/Default/Users/T_5FFlower/blog/kotlin%20vs%20java.png\" width=\"935\" /></p>\r\n\r\n<p>KOTLIN được tinh chỉnh để viết gọn hơn, mã nguồn của nó trong sáng, dễ hiểu, trong KOTLIN chúng ta không cần phải dùng dấu chấm phẩy để ngăn cách các câu lệnh và cũng không cần phải quan tâm đến việc&nbsp;NullPointerException tồn tại vì đối với KOTLIN điều đó sẽ không bao giờ xảy đến. Ngôn ngữ tuyệt vời này cũng sở hữu cho mình rất nhiều thư viện và các hàm chức năng, từ đó giúp các nhà phát triển đỡ công hơn trong việc suy nghĩ để giải quyết các bài toán common. Không những thế với khả năng tương tác JAVA 100%, chúng ta có thể sử dụng KOTLIN kết hợp với các thư viện của JAVA mà không hè có bất kì một sự e ngại nào.</p>\r\n\r\n<p>Để học và tìm hiểu về sự thú vị của KOTLIN, các bạn có thể truy cập trang chủ của nó ở đường dẫn&nbsp;<a href=\"https://kotlinlang.org/\" target=\"_blank\">này</a>&nbsp;Tuy tuyệt vời như thế, song chúng ta cũng không thể phủ nhận sự tồn tại của JAVA khi phát triển các ứng dụng Android. Vì đa phần các package (gói), library (thư viện),... trong Android đều được viết và đóng gọi lại bắng ngôn ngữ JAVA, do vậy việc học và biết về ngôn ngữ JAVA cũng là một điều tất yếu. Hãy thử nghĩ rằng một ngày đẹp trời nào đó, khi khách hàng yêu cầu bạn phát triển một chức năng nho nhỏ, bạn lên mạng tìm hiểu và thấy một thư viện tuyệt vời, nó đáp ứng được một vài tiêu chí bạn cần đồng thời bạn cũng phải customize (tuỳ biến) lại một vài thứ để phù hợp với yêu cầu, nhưng không may thay nó được viết bằng ngôn ngữ JAVA và bạn không biết gì về thứ gọi là JAVA, hãy cho tôi biết cảm xúc của bạn ngay lúc đó... có phải là tiếc điên cuồng không!?? Mà đấy cũng là trường hợp thực tế chúng ta sẽ gặp phải. Vì thế dù KOTLIN có ngon đến mấy thì mình khuyên các bạn cũng nên biết thêm chút đỉnh về JAVA. KOTLIN hay JAVA cũng được, hoặc cả hai thì càng tốt, nhưng để trở nên chuyên nghiệp hơn thì hãy cùng mình đi đến với cái thứ hai nhé, nó là nền móng quan trọng để bạn trở thành expert KOTLIN hoặc JAVA.</p>\r\n\r\n<h3>Lập trình hướng đối tượng (<em>OOP</em>) - không biết không phải là lập trình viên</h3>\r\n\r\n<p>Vì sao mình khẳng định nếu không biết lập trình hướng đối tượng thì không phải là lập trình viên? Vì hiện nay, đa số các ngôn ngữ đều dựa trên các khái niệm về lập trình hướng đối tương, vẫn có một vài ngôn ngữ theo hướng lập trình chức năng nhưng mình tin chắc rằng, khi các bạn bắt tay vào học lập trình, thì các bạn đã biết đến lập trình hướng đối tượng rồi. Và như ở mục phía trên mình đã nói, JAVA hay KOTLIN nó đều là ngôn ngữ lập trình hướng đối tượng và nếu như các bạn không biết cái khái niệm lập trình này... ôi thôi cuộc tình với Android của các bạn sẽ chính thức tan vỡ! Vậy nắm vững lập trình hướng đối tượng là nắm những thứ gì? Đó chính là các bạn phải biết đối tượng trong lập trình là gì? Nó cũng như ngoài đời thực vậy, đối tượng trong lập trình cũng chính là con người, là sự vật, sự việc, là cây cối, hoa lá, chim chóc. Khi bắt tay vào lập trình, các bạn cũng phải xác định rõ đối tượng mà chúng ta hướng đến là gì. Đối tượng thì sẽ có hành động, mà hành động ở trong lập trình người ta gọi là các phương thức&nbsp;<em>(methods)</em>. Ngoài các phương thức đối tượng còn có các tính chất, thuộc tính&nbsp;<em>(properties)</em>. Không dừng lại ở đó, khi nhắc đến OOP, các bạn phải nắm thật kĩ bốn thuộc tính bá đạo của nó bao gồm&nbsp;<strong>Kế thừa</strong>&nbsp;<em>(Inheritance)</em>,&nbsp;<strong>Trừu tượng</strong>&nbsp;<em>(Abstraction)</em>,<strong>&nbsp;Đa hình</strong>&nbsp;<em>(Polymorphism)</em>,&nbsp;<strong>Đóng gói</strong>&nbsp;<em>(Encapsulation)</em>, phân biệt được bốn thuộc tính đó, cách sử dụng chúng ra sao và làm thế nào để kết hợp chúng lại với nhau. Đấy chỉ cần nắm nhiêu đó thôi là các bạn cũng đủ nâng mình lên tầm cao mới rồi, nhưng phải nắm thật kĩ nhé.</p>\r\n\r\n<p><img alt=\"\" src=\"https://codelearn.io/Media/Default/Users/T_5FFlower/blog/oop%20android.jpeg\" width=\"883\" /></p>\r\n\r\n<h3>Các thành phần trong ứng dụng Android&nbsp;<em>(<a href=\"https://codelearn.io/sharing/cac-thanh-phan-co-ban-trong-android-la-gi\">Android components</a>)</em></h3>\r\n\r\n<p>Nãy giờ chỉ là những thứ râu ria, nhưng mà râu ria đấy lại là nền móng cho cả tương lai. Tiếp theo chúng ta đến với một thứ cực kì quan trọng và luôn cần phải nhắc đến đó chính là các thành phần trong ứng dụng Android. Các thành phần thì nhiều lắm, nhưng mình sẽ nêu ra một vài thứ mà khi các bạn nắm kĩ những thứ đó, người ta sẽ đánh giá các bạn thật là chuyên nghiệp. Đầu tiên phải kể đến đó là các layout, trong Android có rất nhiều loại layout là LinearLayout, RelativeLayout, TableLayout, GridLayout... và đặc biết là&nbsp;<strong>ConstaintLayout</strong>, các bạn không nên dừng lại ở việc biết sắp xếp bố cục trong layout mà phải biết cách lựa chọn layout nào cho hợp lí, sắp xếp các thành phần lên đó sao cho ứng dụng đạt hiệu năng&nbsp;<em>(performance)</em>&nbsp;tốt nhất, tối ưu hoá&nbsp;<em>(optimize)</em>&nbsp;đoạn code xml&nbsp;<em>(mã nguồn giao diện)</em>. Tiếp đến các bạn cần phải nắm kĩ và rõ về&nbsp;<a href=\"https://codelearn.io/sharing/su-dung-activity-trong-android-phan-1\"><strong>Activity</strong></a>,&nbsp;<strong>Fragment</strong>&nbsp;và vòng đời của chúng. Cách mà Activity hoạt động như thế nào, mỗi một dự án<em>&nbsp;(project)</em>&nbsp;thì nên tổ chức bao nhiêu Activity, Fragment hoạt động ra sao, nó lệ thuộc như thế nào vào Activity... Nắm vững các loại view trong Android, ví dụ như&nbsp;<strong>TextView</strong>,&nbsp;<strong>Button</strong>,&nbsp;<strong>ViewPager</strong>...&nbsp;<strong>ViewGroup</strong>&nbsp;là gì, cách customize view ra sao... Đấy nếu mà kể thì sẽ đến sáng mai nhưng tốt nhất khi làm việc, các bạn hãy dành thời gian vào trang chủ của Android&nbsp;<a href=\"https://developer.android.com/\">tại đây</a>&nbsp;để xem về những điều này nhé. Sự chuyên nghiệp sẽ thể hiện ở những thứ bạn làm mà nó được người ta khuyến nghị và cộng đồng đều hưởng ứng.</p>\r\n\r\n<p><img alt=\"\" src=\"https://codelearn.io/Media/Default/Users/T_5FFlower/blog/Components-of-Android1.jpg\" width=\"598\" /></p>\r\n\r\n<h3>Kiến trúc ứng dụng trong Android&nbsp;<em>(Android architecture)</em>&nbsp;- sự chuyên nghiệp thể hiện ở đây</h3>\r\n\r\n<p>Từ thời xa xưa, cái thời mà Android vừa mới đủ lông đủ cánh để bước vào xứ sở của những công nghệ đình đám, người ta rất ưa chuộng kiến trúc gọi là&nbsp;<strong>MVC</strong>&nbsp;<em>(Model-View-Controller)</em>. MVC chính là cả thanh xuân của Android nhưng bây giờ, khi mà yêu cầu ngày một khó khăn hơn đòi hỏi Android cũng phải thay đổi để đáp ứng được các nhà phát triển khó tính. Hiện nay Google khuyến khích các chiến binh lập trình viên khi phát triển các ứng dụng Android thì nên sử dụng một trong hai kiến trúc là&nbsp;<strong>MVP</strong>&nbsp;<em>(Model-View-Presenter)</em>&nbsp;hoặc&nbsp;<strong>MVVM</strong>&nbsp;<em>(Model-View-ViewModel)</em>.&nbsp; Để nắm vững các loại kiến trúc này thì buộc các bạn phải trải nghiệm thật nhiều trong các dự án thật. Khi tham gia các dự án thật, các bạn sẽ có cơ hội để gặp những bài toán lớn, từ đó sẽ học được cách thiết kế kiến trúc hợp lí, đáp ứng tải lượng các yêu cầu. Các bạn có thể truy cập vào trang web&nbsp;<a href=\"https://developer.android.com/topic/libraries/architecture\">này</a>&nbsp;để tìm hiểu về các kiến trúc trong ứng dụng Android, ở đây Google cũng đưa ra các ví dụ mẫu kiến trúc. Hãy làm theo sự chỉ dẫn của Google!</p>\r\n\r\n<p><img alt=\"\" src=\"https://codelearn.io/Media/Default/Users/T_5FFlower/blog/architecture.png\" width=\"771\" /></p>\r\n\r\n<h3>Các mẫu thiết kế&nbsp;<em>(Design Patterns)</em>&nbsp;- vừa chuyên nghiệp, vừa đẳng cấp</h3>\r\n\r\n<p>Các mẫu thiết kế (Design Patterns) - mình xin phép phải nói là mình không thích dịch nó ra tiếng Việt chút nào - là những lời giải cho những bài toán đã có từ trước. Các bạn sẽ không phải đau đầu, cũng không phải mất nhiều thời gian từ vài ngày cho đến vài năm và thậm chí là cả cuộc đời để giải những bài toán lập trình này vì thật sự may mắn khi bạn và tôi đã đọc và hiểu được những lời giải mà các vị tiền bối tổ sư để lại. Design Patterns nó cũng như bài văn mẫu vậy, các bạn đọc vào bài văn mẫu của người ta, sau đó hiểu được bố cục họ làm như thế nào, dàn ý bài văn đó ra sao, nắm được cái sườn đó rồi chúng ta lại lấy cái sườn đó qua bài văn của mình mà viết lời văn ra thôi. Thật đơn giản phải không nào!? Nói đơn giản vậy thôi chứ để hiểu và ứng dụng được các design patterns trong lập trình quả là một việc không hề nhẹ nhàng gì, tuy nhiên nó cũng không quá phức tạp. Design patterns có rất nhiều loại, nhưng theo như kinh nghiệm của mình, một vài loại ứng dụng trong Android như là Singleton, Builder, Dependency injection, Observer, Adapter,... Khi các bạn nắm vững nó và ứng dụng nó một cách nhuần nhuyễn trong dự án của mình, các bạn sẽ thật sự rất chuyên nghiệp. Mơ hồ quá đúng không? Nếu vẫn cảm thấy mơ hồ thì hãy bắt tay lên Google và tìm kiếm với từ khoá&nbsp;<em>&quot;design patterns in android&quot;</em>, sau đó áp dụng và thực hành thật là nhiều, dần dần sẽ không còn khái niệm mơ hồ trong bạn nữa.</p>\r\n\r\n<h3>Tạm kết</h3>\r\n\r\n<p>Trên đây là năm thứ mà mình nghĩ thực sự rất cần khi các bạn muốn mình trở nên chuyên nghiệp hơn trong lập trình Android. Sự chuyên nghiệp sẽ không dừng lại ở việc các bạn đọc blog của mình hoặc lên mạng tìm kiếm những thứ xoay quanh đó mà hãy bắt tay vào làm, làm thật là nhiều các bạn sẽ khám phá ra những điều mới lạ và sẽ hình thành trong bản thân một phản xạ là sự chuyên nghiệp.</p>\r\n\r\n<p>Bài viết cũng khá dài, chân thành cảm ơn các bạn đã đọc đến câu này. Mình sẽ cố gắng viết thêm những bài viết bổ ích hơn và chi tiết hơn dành cho các bạn. Mong rằng sau khi đọc bài viết của mình, các bạn sẽ đọng lại được điều gì đó và chút ít kiến thức đó sẽ là nền móng cho sự thành công sau này của các bạn.</p>\r\n\r\n<p>Nếu các bạn thấy bài viết hữu ích, hãy đánh giá cho nó 5 sao để mình có thêm động lực viết tiếp những điều hay ho nhé.</p>\r\n\r\n<p>Nếu có chủ đề gì cần mình viết ra, các bạn hãy cứ comment cho mình biết.</p>\r\n\r\n<p>Chúc các bạn thành công và hẹn gặp lại!</p>', '/images/742521593688708.jpg', 6, 5, 1, '9', '2020-07-02 04:18:28', '2020-10-09 08:27:34', 'android;huongnghiep', 0),
(19, 'Lập Trình Game Rắn Săn Mồi Bằng 3 Ngôn Ngữ', '<p><strong>Bài viết này mình sẽ tổng hợp cho các bạn cách lập trình game rắn săn mồi bằng 3 ngôn ngữ C/C++, Java và Javascript với hướng dẫn không thể chi tiết hơn đi từ ý tưởng cho đến từng bước thực hiện và đương nhiên là toàn bộ source code để bạn tham khảo.</strong></p>\r\n\r\n<p>Hãy cùng bắt đầu với ý tưởng nào...</p>\r\n\r\n<h3>Ý tưởng như thế nào?</h3>\r\n\r\n<p>Game rắn săn mồi là game huyền thoại nổi tiếng mà bất cứ ai dùng điện thoại đen trắng đều đã chơi qua. Trò chơi cơ bản có màn hình, rắn và thức ăn. Ý tưởng sẽ là:</p>\r\n\r\n<p><strong>Bước 1</strong>: Xác định được đối tượng trong game</p>\r\n\r\n<ul>\r\n	<li>Hệ tọa độ màn hình</li>\r\n	<li>Phân tích đối tượng rắn trong game</li>\r\n</ul>\r\n\r\n<p><strong>Bước 2:</strong>&nbsp;Trừu tượng hóa các đối tượng</p>\r\n\r\n<p><strong>Bước 3:</strong>&nbsp;Xác định các biến và các hàm cần sử dụng</p>\r\n\r\n<p><strong>Bước 4:</strong>&nbsp;Xây dựng các tính năng&nbsp;</p>\r\n\r\n<p>Cuối cùng là phát triển game, customize cho game để lại dấu ấn riêng của bạn (cái này không bắt buộc nha)</p>\r\n\r\n<p>Bắt tay vào thực hiện thôi</p>\r\n\r\n<h3>Lập trình game snake với C/C++</h3>\r\n\r\n<p>Chuẩn bị kiến thức là bước đầu để bạn bắt tay vào làm game snake cho riêng mình. Bạn cần nắm được</p>\r\n\r\n<ul>\r\n	<li><a href=\"https://codelearn.io/learning/detail/cpp-cho-nguoi-moi-bat-dau\">Kiến thức lập trình C/C++</a>&nbsp;và tư duy lập trình cơ bản</li>\r\n	<li>Kiến thức lập trình đồ họa trong C, thư viện graphics.h/ winbgim.h&nbsp;(xem Chương 9 tài liệu lập Kỹ thuật lập trình C thầy Phạm Văn Ất)</li>\r\n	<li><a href=\"https://nguyenvanhieu.vn/doc-ghi-file-trong-c/\">Kỹ thuật đọc ghi file</a></li>\r\n	<li>Thao tác với&nbsp;bàn phím&nbsp;và chuột sử dụng ngôn ngữ C++</li>\r\n	<li>Cách điều khiển chuột, Phát nhạc trong C++,...</li>\r\n</ul>\r\n\r\n<p>Sau khi nắm được hết kiến thức C/C++ với các kiến thức liên quan. Hãy follow các bước hướng dẫn trong bài viết&nbsp;<a href=\"https://codelearn.io/sharing/huong-dan-code-game-ran-san-moi-trong-cpp\">hướng dẫn code game rắn săn mồi với C++</a>&nbsp; để hoàn thiện game snake của bạn nha.</p>\r\n\r\n<p>Và đây là clip sản phẩm sau khi code xong</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Và toàn bộ source code của game&nbsp;<a href=\"https://github.com/nguyenvanhieuvn/Snake\">ở đây</a></p>\r\n\r\n<h3>Lập trình game snake với Java</h3>\r\n\r\n<p><strong>Java</strong>&nbsp;là một&nbsp;ngôn ngữ lập trình&nbsp;hướng đối tượng&nbsp;(OOP) và dựa trên các lớp (class). Khác với phần lớn ngôn ngữ lập trình thông thường, thay vì&nbsp;biên dịch&nbsp;mã nguồn&nbsp;thành&nbsp;mã máy&nbsp;hoặc&nbsp;thông dịch&nbsp;mã nguồn khi chạy, Java được thiết kế để biên dịch mã nguồn thành&nbsp;bytecode, bytecode sau đó sẽ được môi trường thực thi.</p>\r\n\r\n<p>Chắc chắn rằng khi lập trình game với java bạn phải có kiến thức cơ bản về java. Vậy Game này cần cụ thể những gì?</p>\r\n\r\n<ul>\r\n	<li>Kiến thức về&nbsp;<a href=\"https://codelearn.io/learning/java-co-ban\">java cơ bản</a></li>\r\n	<li>Biết cách sử dụng&nbsp;các button trong class JFrame của Pakage&nbsp;<code>javax.swing</code></li>\r\n	<li>Các hàm và biến cần dùng để thiết lập trò chơi</li>\r\n</ul>\r\n\r\n<p>Giờ thì bắt tay vào làm game theo&nbsp;<a href=\"https://codelearn.io/sharing/lam-tro-choi-ran-san-moi-bang-java\">Hướng dẫn làm trò chơi rắn săn mồi bằng java</a></p>\r\n\r\n<p>Các bạn có thể tham khảo source code&nbsp;<a href=\"https://drive.google.com/file/d/1DTCx2hAA8qtMlTgv6Nd3o2pe62YoeKSl/view?usp=sharing\" target=\"_blank\">Tại đây nha</a></p>\r\n\r\n<p><img alt=\"\" src=\"https://codelearn.io/Media/Default/Users/T_5FFlower/blog/snake.png\" width=\"826\" /></p>\r\n\r\n<h3>Lập trình game snake với Javascript</h3>\r\n\r\n<p>JavaScript&nbsp;là một&nbsp;ngôn ngữ lập trình thông dịch&nbsp;được dùng rộng rãi cho các&nbsp;trang web&nbsp;(phía người dùng) cũng như phía máy chủ (với Nodejs).&nbsp;JavaScript là ngôn ngữ hàng đầu trong lập trình web và trình duyệt.&nbsp;Ngày nay, phát triển Web bị chi phối chủ yếu bởi các framework phát triển dựa trên JavaScript như React, Vue.js, Angular.</p>\r\n\r\n<p>Kiến thức cần có:</p>\r\n\r\n<ul>\r\n	<li>Nắm vững kiến thức về&nbsp;<a href=\"https://codelearn.io/learning/javascript-co-ban\">javascript cơ bản</a></li>\r\n	<li>Cách sử dụng thư viện&nbsp;<a href=\"https://p5js.org/\">p5.js</a>&nbsp;</li>\r\n	<li>Một số thư viện để tương tác với các đối tượng trong HTML5 như&nbsp;<strong>text, input, video, webcam và âm thanh.</strong></li>\r\n</ul>\r\n\r\n<p>Sau khi hoàn thành game này với js, các bạn sẽ nắm vững hơn một số khái niệm trong Javascript cũng như biết cách dùng p5.js để làm đồ họa, animation trên web. Đây là hướng dẫn cụ thể cho từng bước thực hiện game, bạn tham khảo trong bài viết&nbsp;<a href=\"https://codelearn.io/sharing/lam-game-ran-san-moi-bang-javascript\">Làm game rắn săn mồi bằng javascript</a></p>\r\n\r\n<p>Toàn bộ code, các bạn có thể tham khảo ở repo này:&nbsp;<a href=\"https://github.com/DAN3002/snake-game-p5js\">snake game</a></p>\r\n\r\n<p><img alt=\"\" src=\"https://codelearn.io/Media/Default/Users/T_5FFlower/blog/snake%20game.gif\" width=\"592\" /></p>\r\n\r\n<h3><strong>Tạm kết</strong></h3>\r\n\r\n<p>Game snake là một tựa game đơn giản cho các bạn tái hiện với bất cứ ngôn ngữ nào bạn thành thạo mà không giới hạn ở 3 ngôn ngữ trên. Hi vọng sẽ thấy các sản phẩm game của các bạn với các ngôn ngữ lập trình khác. Thân ái</p>', '/images/254281593688762.jpg', 5, 5, 6, '9', '2020-07-02 04:19:22', '2020-10-09 08:27:34', 'game;lapptrinh;coban', 0);
INSERT INTO `blog` (`id_blog`, `title_blog`, `content_blog`, `img_blog`, `cate_parent`, `rate_blog`, `view_blog`, `auth`, `created_at`, `updated_at`, `tag_blog`, `stt_blog`) VALUES
(20, 'Kiểu Ký Tự Trong C++ Là Gì? (Phần 2)', '<p><strong>Chào các bạn, ở&nbsp;<a href=\"https://codelearn.io/sharing/kieu-ky-tu-trong-cpp-la-gi-phan-1\">bài viết</a>&nbsp;trước, chúng ta đã hiểu sơ bộ về kiểu ký tự rồi, ở bài viết lần này ta sẽ điểm mặt qua những hàm thường sử dụng cho kiểu ký tự và cũng như tìm hiểu về bộ nhớ đệm.</strong></p>\r\n\r\n<h3>Bộ nhớ đệm</h3>\r\n\r\n<p>Bình thường, khi ta nhập 1 chuỗi ký tự hoặc số vào bàn phím, các chuỗi này sẽ được đẩy vào bộ nhớ đệm dùng cho việc lưu trữ trước khi được gán vào 1 biến.</p>\r\n\r\n<p>Nếu ta dùng câu lệnh nhập&nbsp;<code>scanf</code>&nbsp;hoặc&nbsp;<code>cin</code>, chương trình sẽ tự động bỏ qua các ký tự còn lưu trong bộ nhớ đệm (VD như&nbsp;<code>&quot; &quot;</code>&nbsp;hoặc&nbsp;<code>&quot;\\n&quot;</code>), bởi vậy ta không cần quan tâm tới. Nhưng vấn đề phát sinh khi ta dùng câu lệnh&nbsp;<code>getline</code>&nbsp;để lấy chuỗi có khoảng trắng.</p>\r\n\r\n<p>Khi thao tác với kiểu ký tự (char) có sử dụng khoảng trắng hay&nbsp;<code>Enter</code>, ta cần lưu ý xóa bộ nhớ đệm trước khi in ra màn hình. Việc quên xóa bộ nhớ đệm sẽ dẫn đến việc lưu trữ giá trị trong biến bị sai. VD như ở câu lệnh sau:</p>\r\n\r\n<pre>\r\n<code>int main() {\r\n    int a;\r\n    char b[100];\r\n    cin &gt;&gt; a;                \\\\Nhập vào 1, và xài Enter\r\n    cin.getline(b,100);      \\\\Nhập &quot;codelearn&quot;\r\n    cout &lt;&lt; a &lt;&lt; &quot; &quot; &lt;&lt; b &lt;&lt; &quot; &quot;;  \r\n    cout &lt;&lt; &quot;Ket thuc&quot;;\r\n}</code></pre>\r\n\r\n<pre>\r\n<code>1  Ket thuc</code></pre>\r\n\r\n<p>Ở trên, chuỗi ký tự b không nhận được giá trị do bị ký tự&nbsp;<code>Enter</code>&nbsp;có trong bộ nhớ đệm chèn vào.</p>\r\n\r\n<p>Để có thể xóa bộ nhớ đệm, có thể sử dụng các câu lệnh&nbsp;<code>cin.ignore()</code>,&nbsp;<code>fflush()</code>&nbsp;hoặc&nbsp;<code>flushall()</code>. Ở đây mình hay sử dụng câu lệnh&nbsp;<code>cin.ignore()</code>.</p>\r\n\r\n<p><code>cin.ignore()</code>&nbsp;là 1 phương thức của đối tượng cin trong C++. Câu lệnh này có tác dụng&nbsp;<strong>xóa ký tự đầu tiên</strong>&nbsp;trong bộ nhớ đệm.</p>\r\n\r\n<pre>\r\n<code>int main() {\r\n    int a;\r\n    char b[100];\r\n    cin &gt;&gt; a;                \\\\Nhập vào 1, và xài Enter\r\n    cin.ignore();            \\\\Xóa 1 ký tự trong bộ nhớ đệm\r\n    cin.getline(b,100);      \\\\Nhập &quot;kytu&quot;\r\n    cout &lt;&lt; a &lt;&lt; &quot; &quot; &lt;&lt; b &lt;&lt; &quot; &quot;;  \r\n    cout &lt;&lt; &quot;Ket thuc&quot;;\r\n}</code></pre>\r\n\r\n<pre>\r\n<code>1 kytu Ket thuc</code></pre>\r\n\r\n<p><strong>Lưu ý:</strong>&nbsp;Nếu bộ nhớ đệm không có ký tự nào, nó sẽ xóa ký tự đầu tiên kế tiếp được nhập vào từ bàn phím.</p>\r\n\r\n<pre>\r\n<code>int main() {\r\n    char a[100];\r\n    cin.ignore();            \\\\Xóa 1 ký tự trong bộ nhớ đệm\r\n    cin.getline(a,100);      \\\\Nhập &quot;kytu&quot;\r\n    cout &lt;&lt; a;               \\\\In ra &quot;ytu&quot;\r\n}</code></pre>\r\n\r\n<pre>\r\n<code>ytu</code></pre>\r\n\r\n<p>Hoặc ta có thể sử dụng cú pháp&nbsp;<code>cin.ignore(so_luong, ky_tu)</code>, câu lệnh này sẽ xóa cho đến khi gặp&nbsp;<code>ky_tu</code>&nbsp;đầu tiên hoặc khi đủ&nbsp;<code>so_luong</code>&nbsp;ký tự.</p>\r\n\r\n<h3>Một số hàm thường sử dụng khi xài chuỗi</h3>\r\n\r\n<p>Tất cả hàm trong phần này đều thuộc thư viện&nbsp;<code>string.h</code>.</p>\r\n\r\n<p>Sao chép chuỗi</p>\r\n\r\n<p>Sử dụng&nbsp;<strong>strcpy</strong>(chuỗi được sao chép, chuỗi sao chép).</p>\r\n\r\n<pre>\r\n<code>#include &lt;string.h&gt;\r\n#include &lt;iostream&gt;\r\nusing namespace std;\r\nint main() {\r\n    char a[100] = &quot;chuoi&quot;;\r\n    char b[100];\r\n    strcat(b,a);\r\n    cout &lt;&lt; &quot;Chuoi a: &quot; &lt;&lt; a &lt;&lt; &quot;\\n&quot;;\r\n    cout &lt;&lt; &quot;Chuoi b: &quot; &lt;&lt; b;\r\n}</code></pre>\r\n\r\n<pre>\r\n<code>Chuoi a: chuoi\r\nChuoi b: chuoi</code></pre>\r\n\r\n<p><strong>Lưu ý:</strong>&nbsp;khi sử dụng là kích thước chuỗi được sao chép phải lớn hơn kích thước ký tự có trong chuỗi sao chép, nếu không sẽ bị&nbsp;<strong>tràn bộ nhớ</strong>, dù vẫn nhập xuất được.</p>\r\n\r\n<p>So sánh 2 chuỗi</p>\r\n\r\n<ul>\r\n	<li>Có phân biệt hoa thường:</li>\r\n</ul>\r\n\r\n<p>Sử dụng&nbsp;<code>strcmp</code>(chuỗi 1, chuỗi 2).</p>\r\n\r\n<p>Chuỗi trả về 0 nếu 2 chuỗi bằng nhau, lớn hơn 0 khi ký tự ở vị trí khác nhau, ký tự ở chuỗi 2 lớn hơn chuỗi 1, hoặc ngược lại.</p>\r\n\r\n<pre>\r\n<code>#include &lt;string.h&gt;\r\n#include &lt;iostream&gt;\r\nusing namespace std;\r\nint main() {\r\n    char a[100] = &quot;CHUOI&quot;;\r\n    char b[100] = &quot;CHUOI&quot;;\r\n    char c[100] = &quot;CHuOI&quot;;\r\n    cout &lt;&lt; strcmp(a, b) &lt;&lt; endl;      //in ra 0\r\n    cout &lt;&lt; strcmp(a, c);              //in ra -1 vì &#39;U&#39; &lt; &#39;u&#39;\r\n}</code></pre>\r\n\r\n<ul>\r\n	<li>Không phân biệt hoa thường.</li>\r\n</ul>\r\n\r\n<p>Sử dụng&nbsp;<code>stricmp</code>(chuỗi 1, chuỗi 2).</p>\r\n\r\n<p>Đây là hàm không chính thống nên không khuyên sử dụng. Thay vào đó bạn nên chuyển chữ hoa thành thường hoặc ngược lại, sau đó có thể sử dụng hàm&nbsp;<code>strcmp()</code>&nbsp;ở trên để so sánh.</p>\r\n\r\n<p>Nối 2 chuỗi</p>\r\n\r\n<p>Sử dụng&nbsp;<code>strcat</code>(chuỗi cần thêm, chuỗi ký tự được thêm vào).</p>\r\n\r\n<p><strong>Lưu ý:</strong>&nbsp;chuỗi sau khi thêm vào&nbsp;<strong>không vượt quá</strong>&nbsp;số lượng phần tử của chuỗi được cấp phép để tránh bị&nbsp;<strong>tràn bộ nhớ</strong>.</p>\r\n\r\n<pre>\r\n<code>#include &lt;string.h&gt;\r\n#include &lt;iostream&gt;\r\nusing namespace std;\r\nint main() {\r\n    char a[100] = &quot;ok_&quot;;\r\n    strcat(a,&quot;ket thuc&quot;);\r\n    cout &lt;&lt; a;                //in ra &quot;ok_ket thuc&quot;\r\n}</code></pre>\r\n\r\n<p>Hoặc đối với biến&nbsp;<code>string</code>, đơn giản hơn chỉ cần thao tác cộng giống như toán học.</p>\r\n\r\n<pre>\r\n<code>#include &lt;string&gt;\r\n#include &lt;iostream&gt;\r\nusing namespace std;\r\nint main() {\r\n    string a = &quot;ok_&quot;;\r\n    a = a + &quot;ket thuc&quot;;\r\n    cout &lt;&lt; a;                //in ra &quot;ok_ket thuc&quot;\r\n}</code></pre>\r\n\r\n<p>Tìm hàm chuỗi trong chuỗi</p>\r\n\r\n<p>Sử dụng&nbsp;<code>strstr</code>(chuỗi có sẵn, chuỗi cần tìm). Nếu tìm thấy, hàm sẽ trả về&nbsp;<strong>địa chỉ</strong>&nbsp;con trỏ&nbsp;<strong>đầu tiên</strong>&nbsp;trong chuỗi có sẵn có chứa chuỗi cần tìm, ngược lại sẽ trả về&nbsp;<code>NULL</code>.</p>\r\n\r\n<pre>\r\n<code>#include &lt;string.h&gt;\r\n#include &lt;iostream&gt;\r\nusing namespace std;\r\nint main() {\r\n    char a[] = &quot;codelearn_hoctap&quot;;\r\n    char b[] = &quot;learn&quot;;\r\n    cout &lt;&lt; strstr(a,b);      //in ra từ ký tự &#39;l&#39; đến hết chuỗi     \r\n}</code></pre>\r\n\r\n<pre>\r\n<code>learn_hoctap</code></pre>\r\n\r\n<h3>Kết</h3>\r\n\r\n<p>Đây là bài học về chuỗi ký tự trong c++, tưởng dễ mà khó, tưởng khó mà dễ, mong là bạn sẽ học được nhiều điều bổ ích trong bài viết này.</p>\r\n\r\n<p>Mình sẽ tiếp tục ra nhiều bài blog mới hơn, mong được sự đón nhận của các bạn đọc.</p>', '/images/666781593688812.jpg', 6, 5, 1, '9', '2020-07-02 04:20:12', '2020-10-09 08:27:34', 'c++;hoctap;coban', 0),
(21, 'Đường Đến Tim Crush Bằng Java - Socket (Part 1)', '<p><strong>Trong cuộc đời, điều quan trọng nhất của hạnh phúc chính là &ldquo;Tình yêu&rdquo;. Khi yêu, chúng ta&nbsp;trao cho nhau những tình cảm đặc biệt và tạo ra một sự kết nối bền chặt với nửa còn lại.&nbsp;</strong><strong>Kết nối là sự tiếp xúc, trao đổi của hai người, cho đi yêu thương và nhận lại yêu thương. Lập trình cũng tương tự như tình yêu, thứ kết nối trong tình yêu thì trong lập trình được gọi là: Socket.</strong></p>\r\n\r\n<p><img alt=\"\" src=\"https://codelearn.io/Media/Default/Users/Vua_5FVo_5FDanh/SerieSocketChatApp/facebook-workplace-chat-desktop-software-screen-share-696x392.png\" width=\"393\" /></p>\r\n\r\n<h3>Hiểu đơn giản Socket là gì ?</h3>\r\n\r\n<p>Socket là một điểm cuối (end-point) của liên kết truyền thông hai chiều (two-way communication) giữa hai chương trình chạy trên mạng. Các Socket cung cấp kỹ thuật giao tiếp giữa hai máy tính sử dụng TCP và&nbsp;UDP. Một chương trình Client tạo một socket trên đầu cuối của giao tiếp và cố gắng để kết nối socket đó tới một Server Socket trên máy khác.&nbsp;</p>\r\n\r\n<p>Ơ&nbsp;, vậy&nbsp;TCP và UDP là cái quái gì ?</p>\r\n\r\n<h3>TCP / UDP</h3>\r\n\r\n<p>Vậy TCP và UDP là gì? Nó có vai trò như thế nào trong việc truyền dữ liệu qua mạng? Chúng ta cần hiểu rõ hai khai niệm này .</p>\r\n\r\n<ul>\r\n	<li>Theo Wikipedia , TCP là viết tắt của cụm từ&nbsp;<code>Transmission Control Protocol</code>&nbsp;- Giao thức&nbsp;điều khiển vận chuyển, TCP cho phép các máy tính cùng mạng có thể kết nối với nhau&nbsp;để trao&nbsp;đổi các package (gói tin). TCP&nbsp;đảm bảo cho việc chuyển các gói tin&nbsp;đúng thứ tự và&nbsp;đáng tin cậy bằng quy trình bắt tay ba bước. (bắt tay ba bước là gì thị bạn nên đọc thêm tài liệu bạn nhớ)</li>\r\n	<li>Cũng theo&nbsp;Wikipedia , UDP là viết tắt của&nbsp;<code>User Datagram Protocol</code>&nbsp;- Giao thức gói dữ liệu người dùng, UDP cho phép những chương trình trên mạng máy tính có thể truyền dữ liệu&nbsp;đến máy khác một cách nhanh chóng nhưng không đáng tin cậy vì thứ tự đến của các dữ liệu có thể sai và khi mất dữ lệu sẽ mặc kệ mà không truyền lại như TCP.</li>\r\n	<li>Sự khác nhau của hai giao thức này là: UDP nhanh hơn nhưng dữ liệu không&nbsp;đảm bảo toàn vẹn. TCP thì&nbsp;đảm bảo toàn vẹn dữ liệu nhưng mà chậm hơn.</li>\r\n</ul>\r\n\r\n<h3>Các&nbsp;bước khi một Socket kết nối&nbsp;đến một ServerSocket</h3>\r\n\r\n<ol>\r\n	<li>Server khởi tạo một ServerSocket với cổng cho phép.</li>\r\n	<li>Server gọi lệnh&nbsp;<code>Accept()&nbsp;</code>đểể chờ Scoket kết nối&nbsp;đến.</li>\r\n	<li>Ở&nbsp;phía&nbsp;Client, sau khi ServerSocket&nbsp;được tạo và&nbsp;đang&nbsp;đứng từ hôm qua&nbsp;để chờ Socket tới, Client tạo một Socket với cổng và IP của ServerSocket&nbsp;để kết nối. Bước này xảy ra ngay khi bạn khởi tạo Socket - nghĩa là bạn khởi tạo,&nbsp;đồng thời cũng kết nối luôn&nbsp;đến ServerSocket.</li>\r\n	<li>Nếu kết nối thành công , bạn có thể sử dụng Socket này&nbsp;để liên lạc với Server.</li>\r\n	<li>Sau khi hàm&nbsp;Accept() nhận được kết nối, một instance của Socket đó được tạo và lưu trên Server tại thời điểm Runtime.</li>\r\n	<li>Và&nbsp;cuối cùng là Server và Client có thể thoải mái giao tiếp, trò truyện, trao cho nhau những tài liệu học tập nặng đến hàng Gygabyte, vv...</li>\r\n	<li>Kết nối sẽ bị ngắt nếu một trong hai dừng chương trình, Server hoặc Client đơn phương đóng Socket (tình ta chấm dứt từ đây ~~).</li>\r\n</ol>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<img alt=\"\" src=\"https://codelearn.io/Media/Default/Users/Vua_5FVo_5FDanh/SerieSocketChatApp/socket.png\" width=\"870\" /></p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Hình minh họa cho socket</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Sau khi chém gió một hồi, thứ tôi muốn anh em nhớ&nbsp;đó là :&nbsp;</p>\r\n\r\n<ul>\r\n	<li><strong>Socket là gì</strong>? Là công cụ giao tiếp hai chiều của hai thiết bị - Tức là cả hai máy có thể trao đổi thông tin và nhận thông tin từ nhau, sử dụng giao thức TCP và UDP.&nbsp;</li>\r\n	<li><strong>Socket&nbsp;</strong><strong>để làm gì</strong>? Chúng ta có thể dùng Socket&nbsp;để gửi data (File , message ,...) từ máy này sang máy khác.&nbsp;Đó có thể là một số Int, một String, một&nbsp;Ọbject, ....</li>\r\n	<li><strong>Socket hoạt&nbsp;động như thế nào</strong>? Socket là một chiếc&nbsp;ống, bạn có thể&nbsp;đọc dữ liệu trong&nbsp;đó bằng&nbsp;<code>InputStream</code>, ghi dữ liệu vào nó&nbsp;để truyền&nbsp;đến máy khác bằng&nbsp;<code>OutputStream</code>.</li>\r\n	<li><strong>Muốn Socket hoạt&nbsp;động thì phải làm thế nào</strong>? Trước tiên phải có ServerSocket, khởi tạo ServerSocket trong mạng lan. Sau&nbsp;đó là tạo Socket kết nối&nbsp;đến IP và Port của ServerSocket.&nbsp;</li>\r\n</ul>\r\n\r\n<h3><strong>Các&nbsp;Method hay sử&nbsp;dụng trong lập trình Socket</strong></h3>\r\n\r\n<p>Trước khi khai sáng và dẫn dắt các bạn&nbsp;đến với Project đó, tôi sẽ cung cấp cho các bạn những kiến thức cơ bản nhất về Socket.</p>\r\n\r\n<p>Vậy nên, ở&nbsp;phần này, thứ tôi muốn chia sẻ vởi bạn không phải là một mớ các định nghĩa, nguyên lý mà đó là những thứ mà tôi hay dùng khi làm việc với Socket.</p>\r\n\r\n<p>ServerSocket</p>\r\n\r\n<p>Để tạo một ServerSocket, chúng ta có thể tạo bằng một trong 4 cách&nbsp;</p>\r\n\r\n<ul>\r\n	<li><code>public ServerSocket(int port ) throw IOException</code>: Cách này giúp chúng ta có thể tạo một ServerSocket với một cổng&nbsp;đã xác&nbsp;định, nếu cổng&nbsp;đó&nbsp;đã có&nbsp;ứng dụng khác sử dụng, ngoại lệ sẽ xuất hiện.</li>\r\n	<li><code>public ServerSocket(int port, int backlog , InetAddress address) throw IOException</code>: khi nào chúng ta nên dùng Constructor này? khi mà Server có quá nhiều&nbsp;địa chỉ IP và chỉ rõ ràng rằng: IP nào sẽ&nbsp;được Server dùng&nbsp;để chập nhận Socket kết nối vào.</li>\r\n	<li><code>public ServerSocket() throw IOException</code>: Tạo một ServerSocket không giới hạn, sử dụng method Bind() khi&nbsp;đã kết nối&nbsp;đến Server.</li>\r\n	<li><code>public ServerSocket(int port, int backlog) throw IOExceptio<em>n</em></code>: Mở rộng của constructor trên, int backlog là tham số định nghĩa số Socket tối đa đang vào để lưu giữ trong hàng đợi ( nghe cứ như đám Friendzone của Crush nhỉ ).</li>\r\n</ul>\r\n\r\n<p>Các method thông dụng của ServerSocket.</p>\r\n\r\n<ul>\r\n	<li><code>Int getLocalPort()</code>:&nbsp;đương nhiên rồi, nhìn tên hàm bạn biết ngay là lấy&nbsp;địa chỉ cổng của Server rồi.&nbsp;Ơ mà khoan, chẳng phải&nbsp;ở constructor có truyền vào cổng hay sao? chả nhẽ lại có&nbsp;ông não cá vàng&nbsp;đến nỗi khôn nhớ mình truyền vào cổng nào&nbsp;à? Không bạn&nbsp;ơi, method này dùng khi bạn khởi tạo Server mà không truyền Port ( cổng ). Server sẽ tự&nbsp;động tìm một cổng&nbsp;đang free&nbsp;để làm cổng kết nối của Server, và hàm này giúp bạn biết&nbsp;được cái cổng ngẫu nhiên&nbsp;đó.</li>\r\n	<li><code>Socket accept() throw IOException</code>: &quot;Chào Client , Anh dứng đây từ chiều @@&quot;. Nói không ngoa khi&nbsp;đây là một trong những hàm quan trọng nhất trong lập trình socket. Server thì phải có Client kết nối, hàm này cho phép&nbsp;đợi Socket kết nối&nbsp;đến và trả về cho Server chính cái Socket&nbsp;đó. Nhưng nếu không có Socket thì sao? Thì em&nbsp;ấy sẽ&nbsp;đợi vĩnh viễn (khi nào app bị tắt thì dừng) hoặc đơi trong một thời gian có hạn, thứ sẽ được trình bày ở bên dưới.</li>\r\n	<li><code>v</code><code>oid setToTimeout(int timeOut)</code>:&nbsp;Đây, hàm này để xác định thời gian chờ socket tối đa khi accept() được gọi.&nbsp;Khi quá thời gian chờ, accept() sẽ thôi không chờ nữa.</li>\r\n</ul>\r\n\r\n<p>Socket&nbsp;</p>\r\n\r\n<p>Sau&nbsp;đây là những kiến thức cơ bản và những hàm thông dụng của Socket.</p>\r\n\r\n<p>Constructor : Cũng như ServerSocket,&nbsp;để khởi tạo một Socket kết nối&nbsp;đến Server, chúng ta có 5 cách và tôi sẽ giới thiệu cho các bạn 3 cách phổ biến.</p>\r\n\r\n<ul>\r\n	<li><code>public Socket(String Host, int port) throw UnknowhostException, IOException</code>: Cho phép khởi tạo và kết nối Socket&nbsp;đến máy có&nbsp;địa chỉ IP truyền vào, tại cổng xác&nbsp;định.</li>\r\n	<li><code>public Socket()</code>: tạo một Socket không tham số, muốn kết nối đến Server, ta phải dùng lệnh Connect().</li>\r\n	<li><code>public Socket(InetAddress Host, int port) throw&nbsp; IOException</code>: về nguyên lý, constructor này cũng laàm những công việc như cái trên, khác một điều là địa chỉ của Server được biểu thị qua Class InetAddress.</li>\r\n</ul>\r\n\r\n<p>Các&nbsp;hàm&nbsp;cơ&nbsp;bản:&nbsp;&nbsp;</p>\r\n\r\n<ul>\r\n	<li><code>public InetAddress getInetAddress()</code>&nbsp;: Lấy về&nbsp;địa chỉ của Server mà Socket kết nối tới.</li>\r\n	<li><code>public int getPort()</code>: trả về cổng mà socket kết nối trên Server.</li>\r\n	<li><code>public int getLoaclPort()</code>: trả về cổng mà socket kết nối trên thiết bị nội bộ.</li>\r\n	<li><code>public InputSteam getInputStream()</code>: Trả vể InputStream của Socket - Thứ&nbsp; có thể&nbsp;đọc Data từ OutputStream phía máy dang kết nối.</li>\r\n	<li><code>public OutputStream getOutputStream()</code>: trả về OutputStream&nbsp;đển bạn ghi dữ liệu vào&nbsp;đó, thứ mà truyền&nbsp;đến InputStream phía máy đang kết nối.</li>\r\n	<li><code>public voi close() throw IOException</code>:&nbsp;đóng Socket hiện tại, ngắt kết nối&nbsp;đến Server.</li>\r\n	<li><code>public void connect(SocketAddress host, int timeout) throw IOException</code>: Như đã nói ở trên, connect() chỉ nên dùng khi bạn khai bảo một Socket không tham số. Nhớ kĩ nhé, có tham số thì không cần dùng.</li>\r\n</ul>\r\n\r\n<h3>Ví dụ minh họa</h3>\r\n\r\n<p>Sau khi nhai xong cái&nbsp;đống kiến thức có vẻ mau quên kia, tôi dám cá anh em vẫn chưa thể viết&nbsp;được một Project nhỏ về gửi tin nhắn qua Socket. Nhưng không sao, tôi vẫn đứng đây từ chiều.</p>\r\n\r\n<p>Và dưới đây là code mẫu về Server.</p>\r\n\r\n<pre>\r\n<code>public class Server {\r\n\r\n    public static void main(String[] args) throws IOException {\r\n        Scanner sc = new Scanner(System.in);\r\n        // Khởi tạo một socket với cổng 9999\r\n        ServerSocket server = new ServerSocket(9999);\r\n        // chờ cho Socket khác kết nối đến\r\n        Socket socket = server.accept();\r\n        // tạo đối tượng DataInputStream để đọc dữ liệu\r\n        DataInputStream dIn = new DataInputStream(socket.getInputStream());\r\n        // Tạo đối tượng DataOutputStream để truyền dữ liệu đi\r\n        DataOutputStream dOut = new DataOutputStream(socket.getOutputStream());\r\n        while (true) {\r\n            System.out.println(&quot;Enter message : &quot;);\r\n            // nhập tin nhắn và gửi cho client\r\n            String mesage = sc.nextLine();\r\n            // hàm WriteUTF() của OutputStream cho phép nó gửi Data dạng String đến InputStream của Client\r\n            dOut.writeUTF(mesage);\r\n\r\n            System.out.println(&quot;You say : &quot; + mesage);\r\n            // đọc tin nhắn từ client , dùng ReadUTF để đọc String\r\n            String client_message = dIn.readUTF();\r\n            System.out.println(&quot;Client say : &quot; + client_message);\r\n        }\r\n\r\n    }\r\n}</code></pre>\r\n\r\n<p>Code mẫu về Client&nbsp;</p>\r\n\r\n<pre>\r\n<code>public class Client {\r\n    public static void main(String[] args) throws IOException {\r\n        Scanner sc = new Scanner(System.in);\r\n        // tao socket kết nối đển Server\r\n        Socket socket = new Socket(&quot;localhost&quot;, 9999);\r\n\r\n        // tạo đối tượng DataInputStream để đọc dữ liệu\r\n        DataInputStream dIn = new DataInputStream(socket.getInputStream());\r\n        // Tạo đối tượng DataOutputStream để truyền dữ liệu đi\r\n        DataOutputStream dOut = new DataOutputStream(socket.getOutputStream());\r\n        while (true) {\r\n            System.out.println(&quot;Enter message : &quot;);\r\n            // nhập tin nhắn và gửi cho server \r\n            String mesage = sc.nextLine();\r\n            // hàm WriteUTF() của OutputStream cho phép nó gửi Data dạng String đến InputStream của Client\r\n            dOut.writeUTF(mesage);\r\n\r\n            System.out.println(&quot;You say : &quot; + mesage);\r\n            // đọc tin nhắn từ client , dùng ReadUTF để đọc String\r\n            String client_message = dIn.readUTF();\r\n            System.out.println(&quot;Client say : &quot; + client_message);\r\n        }\r\n    }\r\n}</code></pre>\r\n\r\n<h3>Tạm&nbsp;kết</h3>\r\n\r\n<p>Như vậy, tôi đã cung cấp cho anh em kiến thức cơ bản về làm việc với Socket. Nếu anh em muốn tự phát triển bài toán lên, anh em nên tìm hiểu thêm về Java IO (cụ thể là InputStream và OutputStream). Nhưng nếu anh em chưa làm chủ&nbsp;được sức mạnh, thì chính tôi sẽ hướng dẫn anh em phát triển bài toán khó hơn một chút,&nbsp;đó là cho thêm tính năng gửi File và thêm giao dện &quot;nung ninh&quot; trong phần 2 tới. Cảm&nbsp;ơn anh em&nbsp;đã dành thời gian&nbsp;đọc bài, nếu có gì muốn góp&nbsp;ý hay có&nbsp;ý tưởng về những project với Java, hãy để lại comment để cùng nhau trao đổi nhé :)</p>', '/images/666991593688885.jpg', 5, 5, 10, '9', '2020-07-02 04:21:25', '2020-10-09 08:27:34', 'chemgio;ungdung;java', 0),
(22, 'Học Python Để Làm Gì Cho Đời?', '<p><strong>Python là ngôn ngữ lập trình hướng đối tượng bậc cao, dùng để phát triển website và nhiều ứng dụng khác. Với cú pháp cực kì đơn giản và thanh lịch, Python là lựa chọn hoàn hảo cho những ai lần đầu tiên học lập trình.</strong></p>\r\n\r\n<p>Python ngày càng chứng minh ưu thế của mình trong việc xây dựng và triển khai nhiều loại ứng dụng khác nhau như&nbsp;<strong>web application, desktop application, phân tích thống kê, Machine Leaning, Deep Learning</strong>&hellip;. Đó là nhanh chóng, mạnh mẽ, thân thiện, có thể thực thi ở mọi nơi và hoàn toàn miễn phí.</p>\r\n\r\n<h3>Học Python như thế nào và ở đâu?</h3>\r\n\r\n<p>Không phải tự nhiên mà Python lại được ưa chuộng và học tập nhiều đến vậy.&nbsp;Mình đã từng lướt nhanh khi học Python, nhưng sau một thời gian vọc vạch lung tung mình nhận thấy cần phải học Python căn bản thật chắc, tập trung vào:</p>\r\n\r\n<ul>\r\n	<li>Cú pháp, bao gồm cách viết hàm, lớp, module</li>\r\n	<li>Kiểu dữ liệu, cần nắm vững list, tuple, set, dict</li>\r\n	<li>Cách debug</li>\r\n	<li>Các cách xử lý dữ liệu ngày tháng, dữ liệu kiểu chuỗi, xử lý tập tin</li>\r\n</ul>\r\n\r\n<p>Có rất nhiều khóa học online và offline hướng dẫn dạy học python. Gợi ý cách học tập python trong bài viết&nbsp;<a href=\"https://codelearn.io/sharing/toi-da-hoc-python-trong-6-thang-the-nao\">Tôi đã học python trong 6 tháng như thế nào</a>&nbsp;dành cho các bạn muốn bắt đầu ngay hôm nay.</p>\r\n\r\n<p>Để học online cho người mới bắt đầu và rèn luyện mỗi ngày,&nbsp;<a href=\"https://codelearn.io/learning/detail/python-co-ban\">Khóa Python cơ bản</a>&nbsp;trên Codelearn là một sự lựa chọn khá phù hợp. Khóa học sẽ cung cấp cho bạn những kiến thức căn bản nhất về Python và cách sử dụng chúng bằng lối mô tả, dẫn dắt và giải thích khá dễ hiểu, quan trọng là bạn sẽ được thực hành run code trực tiếp. Kho tài liệu 1000 bài tập cũng là một môi trường tốt để bạn luyện tập mỗi ngày.</p>\r\n\r\n<p>Ngoài ra, một số khóa trên các trang web đào tạo trực tuyến ví dụ như Udemy, Coursera,...</p>\r\n\r\n<h3>Học xong Python thì có thể làm gì?</h3>\r\n\r\n<p><img alt=\"\" src=\"https://codelearn.io/Media/Default/Users/Poman/DL/python-dung-de-lam-gi-10.jpg\" width=\"980\" /></p>\r\n\r\n<h3><strong>1. Làm trang Web với Framework của Python:</strong></h3>\r\n\r\n<p>Các web frameworks Django và Flask ngày càng trở nên phố biến thì việc phát triển web bằng Python trở nên dễ dàng hơn bao giờ hết.</p>\r\n\r\n<p>Flask cung cấp cho người dùng các thành phần cốt lõi thường được sử dụng nhất của khung ứng dụng web như URL routing, request &amp; response object, template...</p>\r\n\r\n<p>Django được thiết kế để giúp các nhà phát triển đưa các ứng dụng từ ý tưởng đến hoàn thành càng nhanh càng tốt, nó có đầy đủ các thư viện/module cần thiết.</p>\r\n\r\n<h3><strong>2. Python dùng để tạo nguyên mẫu phần mềm:</strong></h3>\r\n\r\n<p>Bên cạnh mảng lập trình ứng dụng web, Python còn được ứng dụng trong tạo nguyên mẫu phần mềm. Nếu nói về tốc độ thì Python sẽ chậm hơn so với các ngôn ngữ biên dịch như Java và C++. Python sẽ không phải lựa chọn tốt nhất nếu bạn đang bị giới hạn về nguồn lực, yêu cầu hiệu quả cao. Tuy nhiên, bên cạnh đó Python lại là một ngôn ngữ lập trình tuyệt vời để tạo ra những nguyên mẫu - bản chạy thử.</p>\r\n\r\n<h3><strong>3. Ứng dụng trong khoa học và tính toán:</strong></h3>\r\n\r\n<p>Ngoài việc lập trình ứng dụng web, tạo nguyên mẫu phần mềm, Python còn được ứng dụng trong khoa học và tính toán. Python sở hữu thư viện cho khoa học, tính toán số liệu như NumPy, SciPy. Chúng được sử dụng cho mục đích chung chung trong việc tính toán. Bên cạnh đó, trong thư viên của mình, Python còn có EarthPy cho khoa học trái đất, AstroPy cho thiên văn học... Python cũng được ứng dụng trong khai thác dữ liệu, deep learning, machine learning.</p>\r\n\r\n<h3><strong>4. Viết tool để tự động hóa công việc:</strong></h3>\r\n\r\n<p><strong><img alt=\"\" src=\"https://codelearn.io/Media/Default/Users/Poman/DL/python-dung-de-lam-gi-6.png\" width=\"950\" /></strong></p>\r\n\r\n<p>Bạn yêu thích công nghệ chắc chắn biết những tool thú vị ở trong Google chorme Extension chứ?</p>\r\n\r\n<p>Hoặc vô vàn tool hữu ích bạn có thể download trên bất kỳ trang web nào.</p>\r\n\r\n<p>Nếu như trước kia, những tool này cần phải viết bằng các ngôn ngữ khó như Java, PHP ... thì hiện nay, với Python tốc độ sản xuất tool có thể tăng lên gấp 10 lần.</p>\r\n\r\n<p>Đây là điểm khởi đầu hoàn hảo cho bất cứ ai đã nắm vững kiến ​​thức Python cơ bản.</p>\r\n\r\n<p>Bạn có thể thể thực hành những gì bạn đã học được từ trước đến nay bằng cách tạo từ điển, quét trang web, làm việc với các tệp...</p>\r\n\r\n<h3><strong>5. Khoa học máy tính</strong>:</h3>\r\n\r\n<p>Python có rất nhiều thư viện quan trọng trong khoa học máy tính như:&nbsp;<a href=\"https://codelearn.io/sharing/xu-ly-anh-voi-opencv-phan-1\">Opencv</a>,&nbsp;<a href=\"https://codelearn.io/sharing/tim-hieu-thu-vien-numpy-trong-python\">numpys</a>,&nbsp;<a href=\"https://codelearn.io/sharing/xu-ly-du-lieu-voi-pandas-trong-python\">panda</a>,&nbsp;<a href=\"https://codelearn.io/sharing/su-dung-thu-vien-scippy-trong-python-p1\">scipy</a>...</p>\r\n\r\n<h3><strong>6. Lĩnh vực IoT &ndash; Internet Vạn Vật:</strong></h3>\r\n\r\n<p>Python khá mạnh đủ để ứng dụng trong các nền tảng nhúng. Đối với những ứng dụng đòi hỏi khả năng phải truy xuất dữ liệu lớn thì Python là một ứng cử viên rất phù hợp và tiềm năng. Nhờ được sử dụng trên các trang web như Pinterest và Instagram. Vì vậy mà nó đang ngày một phổ biến và thông dụng hơn.</p>\r\n\r\n<h3><strong>7. Làm dự án Blockchain với Python:</strong></h3>\r\n\r\n<p>Làm dự án Blockchian này bạn sẽ học cách làm việc với HTTP Clients và thư viện cần thiết. Thông qua Flask Framework, bạn sẽ có thể sử dụng HTTP requests để liên lạc với blockchain của mình qua Internet.</p>\r\n\r\n<h3><strong>8. Làm game với PyGame:</strong></h3>\r\n\r\n<p>Có lập trình viên nào lại không thích chơi game và phát triển ra chúng cơ chứ? Thư viện này sẽ giúp bạn đạt được mục tiêu của mình trong việc phát triển các game 2D. Pygame được viết trên thư viện SDL (Simple DirectMedia Layer).</p>\r\n\r\n<h3><strong>9. Machine Learning:</strong></h3>\r\n\r\n<p><strong><img alt=\"\" src=\"https://codelearn.io/Media/Default/Users/Poman/DL/7-ung-dung-tuyet-voi-ma-lap-trinh-python-lam-duoc-4.png\" width=\"720\" /></strong></p>\r\n\r\n<p>Như trong bài viết trước mình đã giới thiệu mọi người về&nbsp;<a href=\"https://codelearn.io/sharing/hoc-ve-deep-learning-kho-hay-de-phan-1\">Deep Learning</a>&nbsp;qua những ứng dụng và ví dụ cụ thể.</p>\r\n\r\n<p>Python thực sự đang nắm giữ đầu tàu của các lĩnh vực liên quan đến Machine Learning, AI.</p>\r\n\r\n<h3><strong>Kết luận:</strong></h3>\r\n\r\n<p>Vậy là mình đã giới thiệu cho các bạn những ứng dụng của Python, nó thực sự to lớn. Chúng ta còn chần chờ gì nữa, hãy tìm hiểu và học Python ngay thôi nào !</p>\r\n\r\n<p>Nếu thấy bài viết hay hãy share cho bạn bè cùng đọc nhé.&nbsp;</p>', '/images/363511593688940.jpg', 4, 5, 1, '9', '2020-07-02 04:22:20', '2020-07-31 07:03:42', 'python;huongnghiep;laptrinh', 0),
(23, 'Phát Hiện Đối Tượng Theo Thời Gian Thực Với Python', '<p><strong>Hôm nay mình sẽ giới thiệu đến các bạn một chủ đề khá &ldquo;hot&rdquo; đó là Computer Vision hay gọi tắt là CV. Cho đến hiện tại, các nhà nghiên cứu đã tìm ra cách cho máy móc có thể phát hiện đối tượng thông qua tầm nhìn của thiết bị. Và từ đó có hàng tá các ứng dụng thời thượng ra đời.</strong></p>\r\n\r\n<p>Từ việc sử dụng những chiếc xe có khả năng tự động phát hiện các đối tượng di chuyển trên đường cho đến nhận diện ngôn ngữ cơ thể, phát hiện hành vi của các đối tượng khả nghi cho việc phòng chống tội phạm, rồi đến nhận diện khuôn mặt v.v&hellip;. Ngày nay&nbsp;<strong>CV&nbsp;</strong>được sử dụng khá phổ biến và rộng rãi và không thể phủ nhận sự thật &ldquo;Phát hiện đối tượng&rdquo; (Object Detection) là một trong những ứng dụng tuyệt vời nhất của&nbsp;<strong>CV</strong>.&nbsp;</p>\r\n\r\n<p>Nếu bạn chưa từng làm việc với Python và OpenCV đừng lo ngại, mình sẽ viết bài giới thiệu về OpenCV sau, hoặc các bạn có thể tham khảo thêm một số bài viết trên mạng.</p>\r\n\r\n<p><strong>Modern-day CV</strong>&nbsp;là các công cụ cho phép dễ triển khai một ứng dụng thời thượng để xác định đối tượng thông qua các hình ảnh hoặc thậm chí qua các Video live stream. Trong bài viết này chúng ta sẽ cùng xem một màn trình diễn đơn giản của phát hiện đối tượng trong thời gian thực cùng với&nbsp;<strong>TensorFlow.</strong></p>\r\n\r\n<h3><strong>Yêu cầu chuẩn bị TensorFlow</strong></h3>\r\n\r\n<p>Yêu cầu:&nbsp;<code>Tensorflow &gt;= 1.15.0</code></p>\r\n\r\n<p>Các bạn hãy dùng&nbsp;<strong>pip&nbsp;</strong>để cài đặt phiên bản mới nhất của Tensorflow.</p>\r\n\r\n<p>Các bạn đã nắm được những gì yêu cầu cần chuẩn bị cho viết ứng dụng, bây giờ chúng ta sẽ bắt tay vào cài đặt môi trường theo từng bước dưới đây.</p>\r\n\r\n<h3><strong>Cài đặt môi trường</strong></h3>\r\n\r\n<p><strong>Bước 1: Tải xuống Tensorflow từ github.</strong></p>\r\n\r\n<p>Mở gitbash ra thực thi câu lệnh dưới đây để clone về Tensorflow:</p>\r\n\r\n<p>git clone&nbsp;<a href=\"https://github.com/tensorflow/models.git\">https://github.com/tensorflow/models.git</a></p>\r\n\r\n<p>Nếu bạn chưa cài đặt git trên máy tính, bạn có thể chọn cách download file zip&nbsp;<a href=\"https://github.com/tensorflow/models?ref=hackernoon.com\" target=\"_blank\">tại đây.</a>&nbsp;</p>\r\n\r\n<p><strong>Bước 2: Cài đặt các gói phụ thuộc.</strong></p>\r\n\r\n<p>Ở bước này chúng ta sẽ đảm bảo rẳng đã cài đặt đầy đủ các thư viện và các module cần thiết để chạy&nbsp;<strong>Object Detector&nbsp;</strong>trên thiết bị của chúng ta.</p>\r\n\r\n<p>Dưới đây là dánh sách các thư viện cần thiết để chạy&nbsp;<strong>Object Detector&nbsp;</strong>(Hầu hết các thư viện cần thiết đều nằm trong các thư viện mặc định khi chúng ta cài&nbsp;<strong>Tensorflow</strong>):</p>\r\n\r\n<ul>\r\n	<li>Cython</li>\r\n	<li>contextlib2</li>\r\n	<li>pillow</li>\r\n	<li>lxml</li>\r\n	<li>matplotlib</li>\r\n</ul>\r\n\r\n<p>Trong trường hợp nếu trình biên dịch phát hiện bất cứ module nào bị thiếu bạn chỉ cần dùng&nbsp;<strong>pip&nbsp;</strong>để cài đặt lại (<strong>pip</strong>&nbsp;là một trình quản lí các gói của python như composer trong php, npm trong nodejs, angular ...).</p>\r\n\r\n<p><strong>Bước 3: Cài đặt trình biên dịch&nbsp;Protobuf.</strong></p>\r\n\r\n<p><strong>Protobuf</strong>&nbsp;hay&nbsp;<strong>Protocol buffers&nbsp;</strong>là những ngôn ngữ, nền tảng trung gian của Google, là những cơ chế mở rộng để tuần tự hóa dữ liệu có cấu trúc. Nó giúp chúng ta tổ chức giữ liệu dưới dạng cấu trúc và khi dữ liệu đã ở dưới dạng cấu trúc chúng ta có thể dễ dàng đọc ghi trong nhiều luồng dữ liệu và sử dụng nhiều ngôn ngữ.</p>\r\n\r\n<p>Đây là một trong các phần phụ thuộc của ứng dụng&nbsp;<strong>OD,&nbsp;</strong>các bạn có thể tìm hiểu thêm về Protobuf&nbsp;<a href=\"https://developers.google.com/protocol-buffers/\" target=\"_blank\">tại đây</a>.</p>\r\n\r\n<p>Chọn phiên bản phù hợp với hệ điều hành bạn đang sử dụng, mở của sổ dòng lệnh trên thiết bị của bạn, điều hướng đến thư mục bạn chứa ứng dụng, dán và thực thi câu lệnh dưới đây:</p>\r\n\r\n<p><em>cd models/research \\ wget -O protobuf.zip https://github.com/protocolbuffers/protobuf/releases/download/v3.9.1/protoc-3.9.1-osx-x86_64.zip \\ unzip protobuf.zip</em><br />\r\n<br />\r\n<strong>Ghi nhớ</strong>: hãy chắc chắn rằng Protobuf.zip đã được giải nén trong thư mục&nbsp;models/research.</p>\r\n\r\n<p>Bước 4: Khởi động biên dịch Protobuf.</p>\r\n\r\n<p>Chạy dòng lệnh dưới đây trong thư mục&nbsp;<strong>research/&nbsp;</strong>để biên dịch Protocol Buffer.</p>\r\n\r\n<pre>\r\n<code>./bin/protoc object_detection/protos/*.proto --python_out=.</code></pre>\r\n\r\n<h3><strong>Triển khai Object Detection trong Python.</strong></h3>\r\n\r\n<p><br />\r\nBây giờ chúng ta đã có tất cả các thư viện và các thành phần phụ thuộc, việc còn lại là triển khai&nbsp;<strong>OD&nbsp;</strong>(phát hiện đối tượng) trên Python<strong>.&nbsp;</strong></p>\r\n\r\n<p>Trong thư mục chứa ứng dụng đã được tải về trên git server (guthub), mở thư mục&nbsp;<strong>models/research/object_detection,&nbsp;</strong>trong thư mục này bạn sẽ thấy một file ghi chú của Python được đặt tên là&nbsp;<strong>object_detection_tutorial.ipynb,&nbsp;</strong>file này chưa Demo của OB khi thực thi sẽ sử dụng đối tượng chỉ định:</p>\r\n\r\n<p><code>ssd_mobilenet_v1_coco_2017_11_17</code>&nbsp;là mẫu được dùng để phân loại hai hình ảnh thử nghiệm được cung cấp trong &quot;kho lưu trữ&quot; (repository được đã được clone về thiết bị của bạn) hay thư mục chúng ta giải nén khi tải về trên git server nếu bạn chưa cài đặt git.</p>\r\n\r\n<p>Và dây là kết quả chạy thử:</p>\r\n\r\n<p><img alt=\"\" src=\"https://codelearn.io/Media/Default/Users/Dungtv/images/Wu42GekgXIZe2EfxrilLFOTYv0U2-8i236ng.png\" width=\"713\" /></p>\r\n\r\n<p>Thêm một số thay đổi nhỏ để chúng ta phát hiện các đối tượng từ video phát trực tiếp (<strong>livestream</strong>). Tạo một sổ ghi chép Jupyter (Jupyter notebook) mới trong cùng một thư mục và làm theo đoạn mã mình đưa ra dưới đây để làm được &quot;chuyện đó&quot;.</p>\r\n\r\n<p><strong>[1]:</strong></p>\r\n\r\n<pre>\r\n<code>import numpy as np\r\nimport os\r\nimport six.moves.urllib as urllib\r\nimport sys\r\nimport tarfile\r\nimport tensorflow as tf\r\nimport zipfile\r\nfrom distutils.version import StrictVersion\r\nfrom collections import defaultdict\r\nfrom io import StringIO\r\nfrom matplotlib import pyplot as plt\r\nfrom PIL import Image\r\n# This is needed since the notebook is stored in the object_detection folder.\r\nsys.path.append(&quot;..&quot;)\r\nfrom utils import ops as utils_ops\r\nif StrictVersion(tf.__version__) &lt; StrictVersion(&#39;1.12.0&#39;):\r\n    raise ImportError(&#39;Please upgrade your TensorFlow installation to v1.12.*.&#39;)</code></pre>\r\n\r\n<p><strong>[2]:</strong></p>\r\n\r\n<pre>\r\n<code># This is needed to display the images.\r\nget_ipython().run_line_magic(&#39;matplotlib&#39;, &#39;inline&#39;)\r\n</code></pre>\r\n\r\n<p><strong>[3]:</strong></p>\r\n\r\n<pre>\r\n<code># Object detection imports\r\n# Here are the imports from the object detection module.\r\nfrom utils import label_map_util\r\nfrom utils import visualization_utils as vis_util</code></pre>\r\n\r\n<pre>\r\n<strong>[4]:</strong></pre>\r\n\r\n<pre>\r\n<code># Model preparation \r\n# Any model exported using the `export_inference_graph.py` tool can be loaded here simply by changing `PATH_TO_FROZEN_GRAPH` to point to a new .pb file.\r\n# By default we use an &quot;SSD with Mobilenet&quot; model here. \r\n#See https://github.com/tensorflow/models/blob/master/research/object_detection/g3doc/detection_model_zoo.md\r\n#for a list of other models that can be run out-of-the-box with varying speeds and accuracies.\r\n# What model to download.\r\nMODEL_NAME = &#39;ssd_mobilenet_v1_coco_2017_11_17&#39;\r\nMODEL_FILE = MODEL_NAME + &#39;.tar.gz&#39;\r\nDOWNLOAD_BASE = &#39;http://download.tensorflow.org/models/object_detection/&#39;\r\n# Path to frozen detection graph. This is the actual model that is used for the object detection.\r\nPATH_TO_FROZEN_GRAPH = MODEL_NAME + &#39;/frozen_inference_graph.pb&#39;\r\n# List of the strings that is used to add correct label for each box.\r\nPATH_TO_LABELS = os.path.join(&#39;data&#39;, &#39;mscoco_label_map.pbtxt&#39;)</code></pre>\r\n\r\n<pre>\r\n<strong>[5]:</strong></pre>\r\n\r\n<pre>\r\n<code>#Download Model\r\nopener = urllib.request.URLopener()\r\nopener.retrieve(DOWNLOAD_BASE + MODEL_FILE, MODEL_FILE)\r\ntar_file = tarfile.open(MODEL_FILE)\r\nfor file in tar_file.getmembers():\r\n    file_name = os.path.basename(file.name)\r\n    if &#39;frozen_inference_graph.pb&#39; in file_name:\r\n        tar_file.extract(file, os.getcwd())</code></pre>\r\n\r\n<pre>\r\n\r\n&nbsp;</pre>\r\n\r\n<p><strong>[6]:</strong></p>\r\n\r\n<pre>\r\n<code># Load a (frozen) Tensorflow model into memory.\r\ndetection_graph = tf.Graph()\r\nwith detection_graph.as_default():\r\n    od_graph_def = tf.GraphDef()\r\n    with tf.gfile.GFile(PATH_TO_FROZEN_GRAPH, &#39;rb&#39;) as fid:\r\n        serialized_graph = fid.read()\r\n        od_graph_def.ParseFromString(serialized_graph)\r\n        tf.import_graph_def(od_graph_def, name=&#39;&#39;)</code></pre>\r\n\r\n<pre>\r\n<strong>[7]:</strong></pre>\r\n\r\n<pre>\r\n<code># Loading label map\r\n# Label maps map indices to category names, so that when our convolution network predicts `5`,\r\n#we know that this corresponds to `airplane`.  Here we use internal utility functions, \r\n#but anything that returns a dictionary mapping integers to appropriate string labels would be fine\r\ncategory_index = label_map_util.create_category_index_from_labelmap(PATH_TO_LABELS, use_display_name=True)</code></pre>\r\n\r\n<pre>\r\n<strong>[8]:</strong></pre>\r\n\r\n<pre>\r\n<code>def run_inference_for_single_image(image, graph):\r\n    with graph.as_default():\r\n        with tf.Session() as sess:\r\n            # Get handles to input and output tensors\r\n            ops = tf.get_default_graph().get_operations()\r\n            all_tensor_names = {output.name for op in ops for output in op.outputs}\r\n            tensor_dict = {}\r\n            for key in [\r\n                  &#39;num_detections&#39;, &#39;detection_boxes&#39;, &#39;detection_scores&#39;,\r\n                  &#39;detection_classes&#39;, &#39;detection_masks&#39;]:\r\n                tensor_name = key + &#39;:0&#39;\r\n                if tensor_name in all_tensor_names:\r\n                    tensor_dict[key] = tf.get_default_graph().get_tensor_by_name(tensor_name)\r\n            if &#39;detection_masks&#39; in tensor_dict:\r\n                # The following processing is only for single image\r\n                detection_boxes = tf.squeeze(tensor_dict[&#39;detection_boxes&#39;], [0])\r\n                detection_masks = tf.squeeze(tensor_dict[&#39;detection_masks&#39;], [0])\r\n                # Reframe is required to translate mask from box coordinates to image coordinates and fit the image size.\r\n                real_num_detection = tf.cast(tensor_dict[&#39;num_detections&#39;][0], tf.int32)\r\n                detection_boxes = tf.slice(detection_boxes, [0, 0], [real_num_detection, -1])\r\n                detection_masks = tf.slice(detection_masks, [0, 0, 0], [real_num_detection, -1, -1])\r\n                detection_masks_reframed = utils_ops.reframe_box_masks_to_image_masks(\r\n                detection_masks, detection_boxes, image.shape[1], image.shape[2])\r\n                detection_masks_reframed = tf.cast(\r\n                tf.greater(detection_masks_reframed, 0.5), tf.uint8)\r\n                # Follow the convention by adding back the batch dimension\r\n                tensor_dict[&#39;detection_masks&#39;] = tf.expand_dims(\r\n                                    detection_masks_reframed, 0)\r\n            image_tensor = tf.get_default_graph().get_tensor_by_name(&#39;image_tensor:0&#39;)\r\n            # Run inference\r\n            output_dict = sess.run(tensor_dict, feed_dict={image_tensor: image})\r\n            # all outputs are float32 numpy arrays, so convert types as appropriate\r\n            output_dict[&#39;num_detections&#39;] = int(output_dict[&#39;num_detections&#39;][0])\r\n            output_dict[&#39;detection_classes&#39;] = output_dict[\r\n                      &#39;detection_classes&#39;][0].astype(np.int64)\r\n            output_dict[&#39;detection_boxes&#39;] = output_dict[&#39;detection_boxes&#39;][0]\r\n            output_dict[&#39;detection_scores&#39;] = output_dict[&#39;detection_scores&#39;][0]\r\n            if &#39;detection_masks&#39; in output_dict:\r\n                output_dict[&#39;detection_masks&#39;] = output_dict[&#39;detection_masks&#39;][0]\r\n        return output_dict</code></pre>\r\n\r\n<pre>\r\n<strong>[9]:</strong></pre>\r\n\r\n<pre>\r\n<code>import cv2\r\ncam = cv2.cv2.VideoCapture(0)\r\nrolling = True\r\nwhile (rolling):\r\n    ret, image_np = cam.read()\r\n    image_np_expanded = np.expand_dims(image_np, axis=0)\r\n    # Actual detection.\r\n    output_dict = run_inference_for_single_image(image_np_expanded, detection_graph)\r\n    # Visualization of the results of a detection.\r\n    vis_util.visualize_boxes_and_labels_on_image_array(\r\n      image_np,\r\n      output_dict[&#39;detection_boxes&#39;],\r\n      output_dict[&#39;detection_classes&#39;],\r\n      output_dict[&#39;detection_scores&#39;],\r\n      category_index,\r\n      instance_masks=output_dict.get(&#39;detection_masks&#39;),\r\n      use_normalized_coordinates=True,\r\n      line_thickness=8)\r\n    cv2.imshow(&#39;image&#39;, cv2.resize(image_np,(1000,800)))\r\n    if cv2.waitKey(25) &amp; 0xFF == ord(&#39;q&#39;):\r\n        break\r\n        cv2.destroyAllWindows()\r\n        cam.release()</code></pre>\r\n\r\n<p><strong>Ghi chú</strong>: Khi bạn chạy&nbsp;<strong>Jupyter notebook, webcam</strong>&nbsp;hệ thống sẽ mở ra và sẽ phát hiện tất cả các lớp đối tượng mà mô hình ban đầu đã được &quot;đào tạo&quot; để phát hiện.&nbsp;</p>\r\n\r\n<h3>Kết luận</h3>\r\n\r\n<p>Chúng ta vừa tìm hiểu về&nbsp;<strong>Object Detection&nbsp;</strong>phát hiển đối tượng cùng với&nbsp;<strong>Python, Tensorflow, Protocol Buffer</strong>. Hẹn gặp lại các bạn trong các bài viết sắp tới trong seri &quot;<strong>Sành điệu cùng Python</strong>&quot; của mình.&nbsp;</p>\r\n\r\n<p><strong>Thanks for Reading!</strong></p>\r\n\r\n<p><strong>Dung Tran - Push Manager / Software Engineer</strong></p>\r\n\r\n<p><em>Nguồn: tham khảo internet&nbsp;</em></p>', '/images/683781593688976.jpg', 6, 5, 4, '9', '2020-07-02 04:22:56', '2020-07-31 07:03:55', 'python;laptrinh;thoigianthuc', 0);
INSERT INTO `blog` (`id_blog`, `title_blog`, `content_blog`, `img_blog`, `cate_parent`, `rate_blog`, `view_blog`, `auth`, `created_at`, `updated_at`, `tag_blog`, `stt_blog`) VALUES
(24, '15 Câu Hỏi Phỏng Vấn Thường Gặp Với Python?', '<p><strong>Có thể nói, trong những năm gần đây Python luôn là một trong những cái tên được các nhà tuyển dụng săn đón và mong mỏi nhiều nhất ở một ứng cử viên. Không chỉ ứng dụng được vào nhiều lĩnh vực khác nhau và tạo ra nhiều cơ hội việc làm, Python còn thu hút các developer bởi mức lương cao ngất ngưỡng với một tháng có thể lên tới hàng ngàn đô.&nbsp;</strong></p>\r\n\r\n<p>Và tất nhiên, chắc chắn không cần phải nói nhiều khi ngôn ngữ lập trình này chính là nền tảng cho rất nhiều sản phẩm cực kỳ nổi tiếng như Google, Quora, BitTorrent, v.v&hellip;. Đó chính là lý do nếu bạn là một Python Developer, thì cần phải chuẩn bị thật tốt trước khi phỏng vấn, bởi lẽ chính điều này sẽ giúp ích rất nhiều cho sự tự tin và tâm lý của bạn trước khi bước vào cuộc chiến sống còn sau này đấy.</p>\r\n\r\n<p>Cùng mình điểm qua 15 câu hỏi thường gặp khi phỏng vấn với Python để có thể bỏ túi những bí kíp cần thiết nhé.</p>\r\n\r\n<p><img alt=\"\" src=\"https://codelearn.io/Media/Default/Users/tamashinipham9k9/baiviet06/cover.png\" width=\"607\" /></p>\r\n\r\n<p>Đầu tiên, nếu muốn đi phỏng vấn Python thì việc hiểu những kiến thức nền tảng về nó là một&nbsp;<strong>điều cực kỳ cần thiết.&nbsp;</strong>Bạn không thể đi đánh trận nếu không có vũ khí bên mình và sự am hiểu về đối thủ, đúng không? Việc biết được ưu và nhược điểm của Python chắc chắn sẽ giúp ích cho bạn rất nhiều, một số câu hỏi dưới đây (bao gồm cả lý thuyết và code) sẽ kiểm tra kiến thức Python cơ bản của bạn.</p>\r\n\r\n<p><strong>1. Nêu những tính năng chính của Python? Điều gì làm cho Python trở nên thân thiện với người dùng?</strong></p>\r\n\r\n<ul>\r\n	<li>Cũng giống như PHP và Ruby, Python được biết đến là một ngôn ngữ được dựa trên trình thông dịch, điều đó có nghĩa là, việc biên dịch không cần thiết phải có trước khi chạy như một số ngôn ngữ khác như C/C++.</li>\r\n	<li>Python là một ngôn ngữ kiểu động, tức là bạn không cần phải chỉ ra kiểu dữ liệu của các biến khi khai báo chúng hay bất cứ điều gì đó tương tự thế. Mình thách bạn khai báo x = 2020 và sau đó lại gán x = &ldquo;Hello World&rdquo; với Python mà lại có lỗi đấy.</li>\r\n	<li>Viết code với Python thì cực kỳ nhanh nhưng đến lúc run thì nó lại chậm hơn so với các ngôn ngữ biên dịch khác. May mắn thay, Python lại cho phép các extension mở rộng dựa trên C để việc bottleneck (nút thắt cổ chai) có thể được tối ưu hóa. Package numpy chính là một ví dụ.</li>\r\n	<li>Python là ngôn ngữ lập trình dựa trên trình thông dịch, ngôn ngữ kịch bản hướng đối tượng và tương tác, và tất nhiên đây cũng là một ngôn ngữ được thiết kế để rất dễ đọc, dễ nhớ, dễ viết.</li>\r\n	<li>Tính đa năng của Python thì khỏi bàn. Nó có thể ứng dụng cho nhiều lĩnh vực và các ứng dụng đa nền tảng khác nhau như ứng dụng web, big data, machine learning, mô hình khoa học v.v&hellip;</li>\r\n</ul>\r\n\r\n<p>Ngoài&nbsp;<em><strong>những ưu điểm như cú pháp gọn, đẹp và tính dễ đọc</strong></em>&nbsp;thì Python còn đem đến cho lập trình viên những lợi ích sau:</p>\r\n\r\n<ul>\r\n	<li><strong>Năng suất cao:&nbsp;Cảm ơn trời vì nhờ các tính năng như tích hợp quy trình, framework unit testing và khả năng kiểm soát nâng cao mà các ứng dụng Python có thể cải thiện hiệu suất và chất lượng của chúng.</strong></li>\r\n	<li><strong>Là ngôn ngữ mã nguồn mở, hoàn toàn free và đa nền tảng:&nbsp;Có thể nói đây cũng chính là những thứ giúp cho Python trở nên thân thiện với người dùng và sở hữu một cộng đồng support lớn mạnh hơn bao giờ hết.</strong></li>\r\n	<li><strong>Có kho thư viện module khổng lồ:</strong>&nbsp;Với hơn 300 thư viện module với nhiều tính năng khác nhau như khả năng tạo ra các file tạm thời an toàn, map file vào trong bộ nhớ, lưu trữ tập tin, v.v&hellip;. Python giúp các lập trình viên có thể tiết kiệm được thời gian làm việc của mình nhanh và hiệu quả hơn.</li>\r\n</ul>\r\n\r\n<p><strong>2. Nêu sự khác biệt giữa list (danh sách) và&nbsp;<code>tuple</code>&nbsp;(bộ dữ liệu) trong Python?</strong></p>\r\n\r\n<ul>\r\n	<li><strong>Bộ Dữ Liệu (Tuple):&nbsp;Một tuple là một chuỗi các đối tượng bất biến<em>&nbsp;(hay nói các khác tuple là list không thể chỉnh sửa được)</em>, với cú pháp cho Tuple được hiển thị bằng dấu ngoặc đơn (). Không giống với List, Tuple có chiều dài cố định và thường làm việc nhanh hơn.&nbsp;Cú pháp như sau:&nbsp;tup_1 = (10,&rsquo;Chelsa&rsquo;,20)</strong></li>\r\n	<li><strong>Danh sách (List):&nbsp;Một List là kiểu dữ liệu đa năng có thể thay đổi được với cú pháp được hiển thi bằng dấu ngoặc vuông []. Không giống với Tuple, List có thể có độ dài thay đổi được và nó làm việc chậm hơn so với Tuple.&nbsp;Cú pháp như sau:&nbsp;list_1 = [10,&rsquo;Ronaldo&rsquo;,20].</strong></li>\r\n</ul>\r\n\r\n<p><strong>3. Kiểu dữ liệu chuẩn mà Python cung cấp là gì? Đâu là kiểu dữ liệu có thể thay đổi được (mutable), còn đâu là kiểu dữ liệu không thể thay đổi được (immutable)?</strong></p>\r\n\r\n<p>Kiểu dữ liệu&nbsp;<code>mutable</code>&nbsp;chuẩn là những giá trị có dữ liệu có thể thay đổi được gồm có:&nbsp;List, Set, Dictionary</p>\r\n\r\n<p>Kiểu dữ liệu&nbsp;<code>immutable</code>&nbsp;chuẩn những giá trị có dữ liệu không thể thay đổi được&nbsp; gồm có:&nbsp;Chuỗi, Tuple, Số</p>\r\n\r\n<p><strong>4. Tham số được truyền vào như thế nào: là truyền tham trị (pass by value) hay truyền tham chiếu (pass by reference)?</strong></p>\r\n\r\n<p><strong>Với Python, mọi thứ đều là một object và tất cả các biến đều tham chiếu tới các đối tượng. Các giá trị tham chiếu sẽ được link tới các hàm, và kết quả là ta không thể thay đổi giá trị của kiểu dữ liệu này. Tuy nhiên, chúng ta lại có thể thay đổi một đối tượng vì chúng là kiểu dữ liệu mutable.</strong></p>\r\n\r\n<p>Bên cạnh đó, bạn cũng có thể sắp xếp các đối số bằng cách sử dụng các chỉ định * và ** trong danh sách các tham số của hàm khi muốn truyền tham số tùy chọn hay từ khóa từ hàm này sang hàm khác trong Python.</p>\r\n\r\n<p><strong>5. Namespace trong Python là gì?&nbsp;</strong></p>\r\n\r\n<p>Namespace trong Python còn gọi là không gian tên, là một hệ thống có một tên duy nhất cho mỗi mọi đối tượng trong Python. Một đối tượng có thể là một biến hoặc một phương thức. Bản thân Python duy trì một namespace dưới dạng từ điển Python. Python có nhiều loại namespace khác nhau, và khi người dùng tạo một module thì một namespace toàn cục sẽ được khởi tạo, việc tạo các hàm cục bộ sau đó sẽ tạo ra namespace cục bộ. Namespace tích hợp sẵn bao gồm namespace toàn cục và namespace toàn cục bao gồm namespace cục bộ.</p>\r\n\r\n<p><img alt=\"\" src=\"https://codelearn.io/Media/Default/Users/tamashinipham9k9/baiviet06/cafedevn_types_namespace-1-768x682.png\" width=\"652\" /></p>\r\n\r\n<p><strong>6. Module Python là gì? Hãy nêu một vài module chuẩn thường dùng trong Python?</strong></p>\r\n\r\n<p>Module Python là những file chứa code Python, và những code này có thể là các biến hay các class function. Một module Python thường là một file .py chứa những dòng lệnh có thể thực thi được.</p>\r\n\r\n<p><strong>Một vài module chuẩn Python thường dùng là</strong>: os, sys, math, random, data time, JSON, v.v...</p>\r\n\r\n<p><strong>7. Thế nào là biến toàn cục và biến cục bộ trong Python?</strong></p>\r\n\r\n<p>Những biến nào được khai báo ở bên ngoài hàm hay trong phạm vi toàn cục (global) thì được gọi là&nbsp;<strong>biến toàn cục (global variable)</strong>, chính vì vậy mà bạn có thể truy cập tới những biến này ở bất cứ đâu tùy thích trong chương trình.</p>\r\n\r\n<p>Ngược lại,&nbsp;<strong>biến cục bộ (local variable)</strong>&nbsp;lại là những biến được khai báo bên trong một hàm nào đó. Những biến này chỉ có sẵn trong một phạm vi nhất định thay vì ở phạm vi toàn cục như các biến global.</p>\r\n\r\n<p>Ví dụ:&nbsp;</p>\r\n\r\n<pre>\r\n<code>//doi voi bien toan cuc\r\nmyVar = &quot;global var&quot; #khai báo biến myVar\r\ndef example():\r\n    print(&quot;myVar of example() is: &quot;, myVar)\r\n\r\nexample()\r\n#Gọi myVar ngoài hàm example()\r\nprint(&quot;myVar ngoài hàm example():&quot;, myVar)\r\n\r\n//doi voi bien cuc bo\r\ndef example1():\r\n myVar1 = &quot;local var&quot;\r\n print(myVar1)\r\nexample1()\r\n\r\n//Neu ban lam nhu duoi day se bi thong bao loi\r\n//UnboundLocalError: local variable &#39;myVar&#39; referenced before assignment\r\nmyVar = 10 \r\ndef example():\r\n   myVar=myVar*5 + 10    \r\n   print(myVar)\r\n\r\nexample()</code></pre>\r\n\r\n<p><strong>8. Làm cách nào để có thể random những item có trong một list khi làm việc với Python?</strong></p>\r\n\r\n<p>Gỉa sử ta có một ví dụ minh họa sau đây:</p>\r\n\r\n<pre>\r\n<code>from random import shuffle\r\nx = [&#39;Keep&#39;, &#39;The&#39;, &#39;Blue&#39;, &#39;Flag&#39;, &#39;Flying&#39;, &#39;High&#39;]\r\nshuffle(x)\r\nprint(x)</code></pre>\r\n\r\n<p>Khi đó output của dòng code trên sẽ là:</p>\r\n\r\n<pre>\r\n<code>[&#39;Flying&#39;, &#39;Keep&#39;, &#39;Blue&#39;, &#39;High&#39;, &#39;The&#39;, &#39;Flag&#39;]</code></pre>\r\n\r\n<p><strong>9. Tạo ra danh sách các số nguyên tố từ (1,100) với Python</strong></p>\r\n\r\n<pre>\r\n<code>primeList = []\r\nfor possiblePrime in range(2, 100):\r\n \r\n    isPrime = True\r\n    for num in range(2, possiblePrime):\r\n        if possiblePrime % num == 0:\r\n            isPrime = False\r\n \r\n        if isPrime:\r\n           primeList.append(possiblePrime)\r\n \r\nprint(primeList)</code></pre>\r\n\r\n<p><strong>10. Output của dòng code dưới đây là gì? Đồng thời hãy cho biết cách để viết comment (thậm chí là comment nhiều dòng) trong Python?</strong></p>\r\n\r\n<pre>\r\n<code>x = [[]]*3\r\nx[2].append(1)\r\nprint(x)</code></pre>\r\n\r\n<p>Output:&nbsp;</p>\r\n\r\n<pre>\r\n<code>[[1], [1], [1]]</code></pre>\r\n\r\n<p>Thường thì việc comment trong Python sẽ được bắt đầu bằng ký tự #. Tuy nhiên trong một số trường hợp ta cũng có thể dùng docstrings (hay còn gọi là document strings) với bộ ba dấu &quot;&quot;&quot; bắt đầu và kết thúc.&nbsp;</p>\r\n\r\n<p>Bên cạnh đó, bạn cũng có thể comment nhiều hơn một dòng trong Python bằng cách sử dụng tổ hợp phím ctrl key và click trái chuột ở bất cứ chỗ nào mà bạn muốn để kí tự # và chỉ # một lần. Điều này sẽ giúp bạn comment tất cả các dòng ở những nơi mà bạn đặt con trỏ tới.</p>\r\n\r\n<p>Ví dụ như:&nbsp;</p>\r\n\r\n<pre>\r\n<code>#Comment in one line\r\nprint(&quot;Comments in Python start with a #&quot;)\r\n\r\n#Comment in multiple lines like this:\r\n#hello world\r\n#hello abcdxyz\r\n\r\n&quot;&quot;&quot; Comment with docstrings like this:\r\nWelcome to my blog ^^\r\n&quot;&quot;&quot;\r\n\r\nprint(&quot;Hello World!&quot;)</code></pre>\r\n\r\n<p><strong>11. [::-1} có thể làm được gì?</strong></p>\r\n\r\n<p>[::-1} trong Python được dùng để đảo thứ tự của một mảng hay một trình tự nào đó. Cụ thể như sau:</p>\r\n\r\n<pre>\r\n<code>import array as arr\r\nmyArray=arr.array(&#39;i&#39;,[1,2,3,4,5])\r\nmyArray[::-1]</code></pre>\r\n\r\n<p><br />\r\nOutput:</p>\r\n\r\n<pre>\r\n<code> array(&lsquo;i&rsquo;, [5, 4, 3, 2, 1])</code></pre>\r\n\r\n<p>Như vậy có thể thấy [::-1} sẽ in lại bản copy bị đảo ngược của cấu trúc dữ liệu có thứ tự như một mảng hay một danh sách, và tất nhiên là mảng hay danh sách cũ vẫn được giữ nguyên, nó sẽ return cho bạn một mảng/danh sách mới.</p>\r\n\r\n<p><strong>12. Break, Continue và Pass trong Python làm việc như thế nào?</strong></p>\r\n\r\n<ul>\r\n	<li><strong>Break:&nbsp;Cho phép dừng vòng lặp khi gặp một số điều kiện nào đó và quyền điều khiển sẽ được đưa cho statement kế tiếp</strong></li>\r\n	<li><strong>Continue:&nbsp;Cho phép skip một số phần của vòng lặp khi gặp một số điều kiện cụ thể và quyền điều khiển sẽ lại được đưa về lúc bắt đầu vòng lặp.</strong></li>\r\n</ul>\r\n\r\n<ul>\r\n	<li><strong>Pass</strong>:&nbsp;Trong Python, pass là một lệnh trống, nói nôm na thì lệnh pass không làm gì cả, nó chỉ giữ chỗ cho các hàm, vòng lặp mà bạn đã thêm vào, nhưng chưa dùng đến trong hiện tại mà để &quot;dành cho con cháu&quot; mở rộng trong tương lai.</li>\r\n</ul>\r\n\r\n<p><strong>13. Làm cách nào để in hoa chữ cái đầu của một kí tự của chuỗi trong Python?</strong></p>\r\n\r\n<p>Trong Python, chuyện này trở nên đơn giản nhờ phương thức capitalize() có thể in hoa chữ cái đầu tiên của một chuỗi. Và nếu chuỗi đó đã được viết hoa sẵn chữ cái đầu thì qua phương thức trên, thì phương thức này sẽ return về chuỗi gốc ban đầu.</p>\r\n\r\n<p>Ví dụ minh họa:&nbsp;</p>\r\n\r\n<pre>\r\n<code>string = &quot;chao ban&quot;\r\nstring1 = &quot;Hello friends!&quot;\r\nprint(string1.capitalize() + string.capitalize())\r\n# output: Hello friends! Chao ban </code></pre>\r\n\r\n<p><strong>14. Function help() và dir() trong Python có chức năng gì?&nbsp;</strong></p>\r\n\r\n<p>Cả hai hàm help() và dir() đều có thể truy cập được từ trình thông dịch của Python và đợc sử dụng để xem một hàm tổng hợp của các hàm dựng sẵn.</p>\r\n\r\n<ul>\r\n	<li><strong>Hàm Help ():</strong>&nbsp;Hàm help () được sử dụng để hiển thị chuỗi tài liệu và cũng tạo điều kiện cho bạn thấy trợ giúp liên quan đến các mô-đun, từ khóa, thuộc tính, v.v.</li>\r\n	<li><strong>Hàm Dir ():</strong>&nbsp;Hàm dir () được sử dụng để hiển thị các ký hiệu đã xác định (defined symbols).</li>\r\n</ul>\r\n\r\n<p><strong>15. Giải thích phương thức slipt(), subn(), sub() của module &ldquo;re&rdquo; trong Python</strong></p>\r\n\r\n<p>Để làm việc với string thì module &ldquo;re&rdquo; của Python đã cung cấp cho người dùng 3 phương thức sau:</p>\r\n\r\n<ul>\r\n	<li>split(): tách chuỗi thành các mảng bởi các kí tự, nếu ta cung cấp đối số num thì sẽ chia chuỗi thành num + 1 chuỗi con.</li>\r\n</ul>\r\n\r\n<p>Ví dụ:&nbsp;</p>\r\n\r\n<pre>\r\n<code>#Syntax of split() method: split(pattern, string, maxsplit)\r\n\r\nimport re\r\n\r\nstr = &#39;Support me more on codelearn.io&#39;\r\nmatch = re.split(r&#39;e&#39;, str)\r\nif match:                     \r\n    print (match)\r\nelse:\r\n    print (&#39;Khong tim thay!&#39;)\r\n# Kết quả:\r\n# [&#39;Support m&#39;,&#39;mor&#39;,&#39;on cod&#39;,&#39;l&#39;,&#39;arn.io&#39;]</code></pre>\r\n\r\n<ul>\r\n	<li>sub(): có tác dụng so khớp và thay thế chuỗi so khớp được.&nbsp;</li>\r\n</ul>\r\n\r\n<p>&nbsp;Ví dụ:</p>\r\n\r\n<pre>\r\n<code>#Syntax of sub(): sub(pattern, replace, string, flags)\r\n\r\nimport re\r\n\r\nstr = &#39;Hello, please find me in codelearn.io&#39;\r\nmatch = re.sub(r&#39;codelearn.io&#39;,&#39;https://codelearn.io&#39;, str)\r\nif match:                   \r\n    print (match)\r\nelse:\r\n    print (&#39;Khong tim thay!&#39;)\r\n# output: Hello, please find me in https://codelearn.io</code></pre>\r\n\r\n<ul>\r\n	<li>subn(): tương tự như sub() và đồng thời cũng return về một chuỗi mới đi kèm với sự thay thế của no. .Như bạn thấy ở ví dụ minh họa dưới đây thì phương thức subn()&nbsp;return một một bộ dữ liệu với tổng số các lần thay thế cũng như đi kèm với nó là một chuỗi mới.</li>\r\n</ul>\r\n\r\n<p>Ví dụ:&nbsp;</p>\r\n\r\n<pre>\r\n<code>#Syntax of subn() method: re.subn (pattern, repl, string, count=0, flags=0)\r\n\r\nimport re\r\nprint(re.subn(&#39;ov&#39;, &#39;~*&#39; , &#39;movie tickets booking in online&#39;))\r\nt = re.subn(&#39;ov&#39;, &#39;~*&#39; , &#39;movie tickets booking in online&#39;, flags = re.IGNORECASE)\r\nprint(t)\r\nprint(len(t))\r\nprint(t[0])\r\n</code></pre>\r\n\r\n<p>Output:&nbsp;</p>\r\n\r\n<pre>\r\n<code>(&#39;m~*ie tickets booking in online&#39;, 1)\r\n(&#39;m~*ie tickets booking in online&#39;, 1)\r\n2\r\nm~*ie tickets booking in online</code></pre>\r\n\r\n<h3><strong>Tạm kết</strong></h3>\r\n\r\n<p>Hi vọng qua bài viết trên, bạn đọc có thể bỏ túi được thêm những câu hỏi phỏng vấn thường gặp với Python cho công việc để chuẩn bị thật tốt cho buổi interview sắp tới của mình. Nếu bài viết này được ủng hộ, mình sẽ viết thêm về một bài khác nữa cũng với chủ đề này một cách chi tiết và cụ thể hơn nữa nhé!</p>', '/images/859631593689015.jpg', 5, 5, 3, '9', '2020-07-02 04:23:35', '2020-10-08 08:28:23', 'python;phongvan;kinhnghiem', 0),
(25, 'Garbage Collectors Trong Java Hoạt Động Thế Nào?', '<p><strong>Trong Java, rác (garbage) có nghĩa là một đối đối tượng không được tham chiếu đến nữa và bộ thu gom rác (Garbage collector) có nhiệm vụ hủy các đối tượng đó để giải phóng bộ nhớ.&nbsp; &nbsp; &nbsp;</strong></p>\r\n\r\n<h3><strong>Garbage collectors là gì ?</strong></h3>\r\n\r\n<p>Chắc hẳn các developer đã không ít lần từng bị &quot;memory leak&quot; hay là &quot;out of memory&quot;, nguyên nhân là do việc quản lý bộ nhớ không tốt. Rất may trong Java đã cung cấp một bộ Garbage Collector sẽ tự động dọn dẹp bộ nhớ. Nhờ nó, các developer sẽ không cần quan tâm đến việc quản lý và phân phối lại bộ nhớ của chương trình như C/C++.</p>\r\n\r\n<p>Garbage Collectors (dưới đây sẽ gọi tắt là GC) được định nghĩa như là một quá trình tự động thực thi nhiệm vụ quản lý bộ nhớ.&nbsp;Code Java được dịch sang bytecode rồi chạy trên máy ảo Java hay viết tắt là JVM. Trong quá trình chạy chương trình, các đối tượng được tạo ở vùng nhớ heap, một phần bộ nhớ dành cho chương trình. Sau cùng, sẽ có một vài đối tượng mà chương trình không cần dùng đến. Các đối tượng này sẽ được garbage collector truy tìm và xóa bỏ để thu hồi lại dung lượng bộ nhớ. Khác biệt rất nhiều khi chúng ta làm việc với C/C++, việc quản lý bộ nhớ phải thực hiện &quot;by hand&quot;.</p>\r\n\r\n<p>Và nếu hiểu được cách thức mà GC hoạt động như thế nào, các lập trình viên sẽ dễ dàng hơn trong việc phát triển phần mềm.</p>\r\n\r\n<h3><strong>Vậy Garbage collectors hoạt động như thế nào?</strong></h3>\r\n\r\n<p>Đầu tiên chúng ta hãy nhớ lại kiến trúc JVM, trong module &quot;Run time area&quot; chúng ta có 2 vùng nhớ là vùng nhớ&nbsp;<em><code>Stack</code>&nbsp;(dùng để lưu trữ tham số và các biến local)&nbsp;</em>và vùng nhớ&nbsp;<em><code>Heap</code>&nbsp;(dùng để lưu trữ các đối tượng sau khi khởi tạo bằng từ khóa new và các biến static).&nbsp;</em>Bộ nhớ Heap là bộ nhớ cần dọn dẹp nhất vì các Object không cần dùng nữa phải được xóa bỏ để giải phóng bộ nhớ.</p>\r\n\r\n<p>Có nhiều tiến trình thu gom rác khác nhau nhưng phổ biến nhất&nbsp;<code>Oracle HotSpot</code>. Mặc dù HotSpot có nhiều tiến trình thu gom rác được tối ưu cho từng trường hợp khác nhau nhưng tất cả đều theo một phương thức cơ bản nhất. Đầu tiên, các Object không được tham chiếu sẽ được đánh dấu sẵn sàng để được dọn rác. Ở bước thứ hai, trình thu gom rác sẽ tiến hành xóa các Object đó. Ở bước thứ ba, vùng nhớ của các Object còn lại sẽ được nén lại và nằm liền kề nhau trong bộ nhớ Heap. Quá trình này sẽ giúp việc cấp phát bộ nhớ cho Object mới dễ dàng hơn.</p>\r\n\r\n<p>Ở vùng nhớ Heap được chia làm 3 vùng nhớ nhỏ hơn, tạm gọi là Young generation, Old generation và Permanent generation.</p>\r\n\r\n<p><strong>Young generation</strong>: được chia thành nhiều vùng nhớ nhỏ hơn là Eden(khởi tạo) và Survivor(sống sót). Các Object vừa được khởi tạo sẽ nằm ở vùng Eden, sau chu kì quét đầu tiên nếu Object đó còn tồn tại thì sẽ được chuyển sang vùng Survivor. Tại đây cái Object được GC theo dõi liên tục, nếu&nbsp; như qua nhiều chu kì quét mà Object vẫn còn được sử dụng thì lúc này Object sẽ được chuyển sang vùng nhớ thứ thứ hai.</p>\r\n\r\n<p><strong>Old generation:&nbsp;</strong>là nơi chứa những Object tòn tại đủ &quot;lâu&quot;, còn &quot;lâu&quot; như thế nào thì lại tùy thuộc vào thuật toán của từng bộ GC.</p>\r\n\r\n<p><strong>Permanent generation:&nbsp;</strong>không chứa Object mà đây là nơi để chứa các metadata của JVM như các class và method của ứng dụng. Do đó nếu các class và</p>\r\n\r\n<p>method không còn được sử dụng nữa thì GC sẽ coi chúng là &quot;rác&quot; và dọn dẹp nó.</p>\r\n\r\n<p><img alt=\"\" src=\"https://codelearn.io/Media/Default/Users/baduyflex/GarbageCollection/gabageCollector.png\" width=\"456\" /></p>\r\n\r\n<h3><strong>Ưu và nhược điểm</strong></h3>\r\n\r\n<p>Trong C++, sau khi khởi tạo một Object, các lập trình viên phải chủ động xóa vùng nhớ của Object bằng câu lệnh&nbsp;<em><code>delete</code>,&nbsp;</em>nếu như không thực hiện việc này thì sẽ dẫn đến rò rỉ vùng nhớ. Với Garbage Collectors, lập trình viên Java sẽ không cần quan tâm đến việc xóa các Object mỗi lần ra khỏi hàm hay không còn dùng nữa. Tuy nhiên, đánh đổi lại việc đó là hiệu suất của chương trình sẽ bị giảm đáng kể. Có bao giờ bạn hỏi một chương trình cùng thực hiện một chức năng, cùng một output nhưng tốc độ thực thi của C++ lúc nào cũng nhanh hơn Java, đúng vậy không nào?&nbsp;Trong khi việc tranh luận về quản lý bộ nhớ tiếp tục nổ ra, Garbage Collectors giờ đây là thành phần tiêu chuẩn của nhiều ngôn ngữ lập trình phổ biến. Đối với các kịch bản nơi các Garbage Collectors ảnh hưởng tiêu cực đến hiệu suất, Java đề xuất nhiều lựa chọn để điều chỉnh cho các tiến trình Garbage Collectors để cải thiện hiệu quả của nó.</p>\r\n\r\n<h3>Tạm kết</h3>\r\n\r\n<p>Việc hiểu rõ ưu và nhược điểm của từng ngôn ngữ sẽ giúp bạn lựa chọn ngôn ngữ thích hợp để phát triển ứng dụng, vì suy cho cùng ngôn ngữ cũng chỉ là công cụ, sử dụng hiệu quả hay không phụ thuộc rất nhiều vào người phát triển ứng dụng!</p>', '/images/283551593689054.jpg', 6, 5, 10, '9', '2020-07-02 04:24:14', '2020-09-18 04:53:27', 'java;hoctap;laptrinh', 0),
(26, 'Tại Sao Nên Chọn Linux Thay Windows?', '<p><strong>Linux là tên gọi của một hệ điều hành máy tính và cũng là tên hạt nhân của hệ điều hành. Đây là một phần mềm tự do và của việc phát triển mã nguồn mở.</strong></p>\r\n\r\n<p>Cha đẻ của Linux là một người Phần Lan &ndash; nhà khoa học máy tính Linus Torvalds. Phiên bản Linux đầu tiên được ông viết vào năm 1991, khi chỉ là một sinh viên của Đại học Helsinki. Trong 3 năm làm việc miệt mài, ông đã cho ra đời phiên bản Linux 1.0 vào năm 1994, đặt nền móng cho sự phát triển mạnh mẽ của hệ điều hành Linux hiện nay.</p>\r\n\r\n<p>Windows và Linux từ lâu đã được coi là hai trong số các hệ điều hành tốt nhất thế giới. Có những điều mà Linux làm được còn Windows thì lại không bởi Linux được xây dựng bởi nền tảng mã nguồn mở.</p>\r\n\r\n<p><img alt=\"\" src=\"https://codelearn.io/Media/Default/Users/Poman/DL/2058111.jpg\" width=\"691\" /></p>\r\n\r\n<h3><strong>1. Linux là mã nguồn mở</strong></h3>\r\n\r\n<p>&nbsp;Bạn có thể tải mã toàn bộ mã nguồn (source) của Linux.</p>\r\n\r\n<ul>\r\n	<li>&nbsp;Mã nguồn của tất cả các phần mềm cũng có sẵn.</li>\r\n	<li>&nbsp;Ở chiều ngược lại: windows là mã nguồn đóng (closed source), bạn không thể xem hay tải nó.</li>\r\n</ul>\r\n\r\n<p>Vậy mã nguồn mở Linux là gì?</p>\r\n\r\n<p><img alt=\"\" src=\"https://codelearn.io/Media/Default/Users/Poman/DL/specification-os-1530670129296686259455.png\" width=\"468\" /></p>\r\n\r\n<p>Đó chính là bạn có thể:</p>\r\n\r\n<ul>\r\n	<li>Tự do chạy chương trình cho bất cứ mục đích nào</li>\r\n	<li>Tự do nghiên cứu cách chương trình vận hành và thay đổi nó theo mục đích của bạn.</li>\r\n</ul>\r\n\r\n<p>Đây là một điểm cộng cực lớn.</p>\r\n\r\n<h3><strong>2. Độ an toàn với khả năng bảo mật</strong></h3>\r\n\r\n<p><strong><img alt=\"\" src=\"https://codelearn.io/Media/Default/Users/Poman/DL/mac-windows-hay-linux-dau-moi-la-he-dieu-hanh-dang-su-dung-hon-macbaomatfafasf.jpg\" width=\"730\" /></strong></p>\r\n\r\n<p>Hệ điều hành windows dễ bị tốn công bở các cuộc tấn công hay mã độc, Linux không hẳn là an toàn tuyệt đối nhưng nó hơn windows về bảo mật rất nhiều.</p>\r\n\r\n<p>Nghĩa là bạn không cần phần mềm diệt virus. Phần mềm từ kho chính thức sẽ không bao giờ chứa mã độc hại. Không cần một máy tính cấu hình quá cao mới chạy được nó:</p>\r\n\r\n<p>Với windows muốn cài win 10 ít nhất phải là máy tính với cấu hình RAM 2GB trở lên, nhưng với linux nó hỗ trợ đầy đủ cho các máy tính có cấu hình từ đời &ldquo;Tống&rdquo;.</p>\r\n\r\n<p>Vì vậy nên Linux là một hệ điều hành hiệu quả cho mọi cấu hình máy từ cao cấp đến thấp cấp. Không như Window nó yêu cầu một cấu hình máy phải khá cao. Ngay cả khi so sánh các bản phân phối cao cấp của Linux với cao cấp của Windows thì số lượng máy chủ Linux trên thế giới vẫn chiếm thế thượng phong.</p>\r\n\r\n<h3><strong>3. Linux là hệ điều hành hoàn hảo cho lập trình viên:</strong></h3>\r\n\r\n<p>Linux hỗ trợ nhiều ngôn ngữ khác nhau như : C, C++, Java, Python,&hellip;</p>\r\n\r\n<p>Terminal trên Linux ưu việt hơn rất nhiều cho các mục đích phát triển so với CMD hay PowerShell trên Windows.</p>\r\n\r\n<p>Bạn có thể cài đặt bản cập nhật (install updates) mà không cần phải khởi động lại (reboot) máy tính.</p>\r\n\r\n<ul>\r\n	<li>Điều này là đúng với hầu hết các phần mềm chạy trên Linux</li>\r\n	<li>Thậm chí đối với cả các kernel &gt; 4.0</li>\r\n	<li>Đối với Windows thì cần phải khởi khởi động lại.</li>\r\n</ul>\r\n\r\n<p>Bạn có thể cắm (plug) thiết bị vào mà không cần lo lắng về việc tìm / tải xuống trình điều khiển (driver).</p>\r\n\r\n<ul>\r\n	<li>Trừ một số thiết bị chuyên dụng cao.</li>\r\n	<li>Ở windows (win 7 chẳng hạn) thì sẽ cần phải download.</li>\r\n</ul>\r\n\r\n<p>Bạn có thể chạy Linux từ USB, CD, DVD, ...&nbsp;Đối với windows không có lựa chọn như vậy tồn tại.</p>\r\n\r\n<p>Bạn có thể chạy Linux cả năm mà không cần phải khởi động lại.</p>\r\n\r\n<ul>\r\n	<li>Nó cực kỳ ổn định</li>\r\n	<li>Ít phân mảnh bộ nhớ</li>\r\n	<li>Windows: hệ thống sẽ bị chậm sau một khoảng thời gian.</li>\r\n</ul>\r\n\r\n<p><strong>Ví dụ:</strong>&nbsp;Hình sau sẽ mình hoạt 1 máy chạy Linux 1002 ngày mà chưa cần khởi động lại:</p>\r\n\r\n<p>&nbsp;<img alt=\"\" src=\"https://codelearn.io/Media/Default/Users/Poman/DL/158799676347674147.png\" width=\"1023\" />&nbsp;</p>\r\n\r\n<h3><strong>4. Bạn có thể chạy (run) Linux trên hầu như bất kỳ phần cứng nào:</strong></h3>\r\n\r\n<p>Bao gồm cả những chiếc máy tính, laptop cũ cấu hình thấp, những máy tính cũ từ những năm 1990, thậm chí 1980 đều có thể chạy được Linux.</p>\r\n\r\n<p>Windows: Yêu cầu phần cứng tối thiểu phải đạt 1 con số nhất định, càng bản windows mới thì càng yêu cầu phần cứng cấu hình cao hơn</p>\r\n\r\n<h3><strong>5. Bạn có thể cập nhật tất cả các phần mềm thường xuyên chỉ với một dòng lệnh đơn giản:</strong></h3>\r\n\r\n<ul>\r\n	<li>Ví dụ đối với Ubuntu bạn chỉ cần chạy lệnh &quot;apt-get upgrade&quot;.</li>\r\n	<li>&nbsp;Windows: cập nhật phần mềm chỉ có trong windows update.</li>\r\n</ul>\r\n\r\n<h3><strong>6. Bạn có thể di chuyển ổ cứng từ máy linux này sang máy khác:</strong></h3>\r\n\r\n<ul>\r\n	<li>Phần lớn được thực hiện bằng cách không cần diver (trình điều khiển) cụ thể.</li>\r\n	<li>Windows: thường sẽ không hoạt động đúng, vì vậy bạn phải cài lại drive.</li>\r\n</ul>\r\n\r\n<h3><strong>7.Bạn có thể tùy chỉnh mọi thứ:</strong></h3>\r\n\r\n<p><strong><img alt=\"\" src=\"https://codelearn.io/Media/Default/Users/Poman/DL/2058108.jpg\" width=\"620\" /></strong></p>\r\n\r\n<ul>\r\n	<li>Font, icon, themes,...</li>\r\n	<li>Thậm chí có cả themes Windows, Mac cho Linux</li>\r\n	<li>Windows: một số tùy chỉnh có sẵn nhưng nó không có nhiều và không chỉnh sửa được nhiều như trên Linux.</li>\r\n</ul>\r\n\r\n<h3><strong>8. Miễn phí:</strong></h3>\r\n\r\n<p><strong><img alt=\"\" src=\"https://codelearn.io/Media/Default/Users/Poman/DL/66d852cf-e568-4d99-966e-2decc431f48b.jpg\" width=\"670\" /></strong></p>\r\n\r\n<p>Linux thì miễn phí hoàn toàn còn Windows thì không hề. Bạn có thể phải trả từ 100-250$ để có WIn bản quyền.</p>\r\n\r\n<p>Bạn sẽ không phải trả 100-250 USD để có được bản sao chính hãng của bản phân phối Linux (như Ubuntu, Fedora). Vì vậy, nó hoàn toàn miễn phí.</p>\r\n\r\n<p>Nếu một cái gì đó miễn phí nhưng hữu ích, nó luôn là điều tốt nhất người ta có thể mong đợi. Với số tiền bạn vừa tiết kiệm, bạn có thể xem xét việc tăng cường hệ thống của mình bằng các phần mềm hỗ trợ khác.</p>\r\n\r\n<p><img alt=\"\" src=\"https://codelearn.io/Media/Default/Users/Poman/DL/0bfc8566-bb1f-4e8e-8fe0-bd537a86d500.jpg\" width=\"825\" /></p>\r\n\r\n<h3><strong>Tổng kết</strong></h3>\r\n\r\n<p>Bây giờ bạn đã biết những lợi thế của việc sử dụng Linux thay vì Windows. Let&rsquo;s upgrade to Linux! Mong mọi người nhận xét , thảo luận để bài viết được tốt hơn. Nếu thấy hay thì hãy chia sẻ và vote 5 sao giúp mình nhé :))</p>\r\n\r\n<p>Cảm ơn mọi người đã đọc bài viết.</p>', '/images/845491593938089.jpg', 5, 5, 3, '14', '2020-07-05 08:34:49', '2020-07-31 07:03:55', NULL, 0),
(28, 'Kỹ Thuật Lazy Loading Không Phải Dev Nào Cũng Biết', '<p><strong>Bạn có thể dễ dàng nhận ra khi xem trên Facebook. Lần đầu mở trang web Facebook lên bạn sẽ đọc được 1 số lượng ít tin. Khi bạn cuộn đến cuối trang thì Facebook sẽ bắt đầu tải 1 số lượng tin tiếp theo để hiển thị. Đó chính là Lazy loading.</strong></p>\r\n\r\n<p>Hôm nay, mình xin chia sẻ về việc áp dụng kỹ thuật lazy loading đối với 1 thành phần nhỏ là&nbsp;<strong>Ảnh</strong>.</p>\r\n\r\n<h3>Lazy Loading là gì?</h3>\r\n\r\n<p><strong>Lazy loading</strong>&nbsp;là 1 kĩ thuật tối ưu khi làm web, thay vì tải toàn bộ trang web và render ngay từ đầu, kỹ thuật này cho phép tải ngay các thành phần cần thiết để hiển thị tới người dùng và trì hoãn các tài nguyên còn lại cho đến khi cần.</p>\r\n\r\n<h3>Image is critical</h3>\r\n\r\n<p>Chúng ta hãy cùng xem ví dụ sau, chỉ là 1 trang HTML cơ bản với 1 bức ảnh.</p>\r\n\r\n<p><img alt=\"\" src=\"https://codelearn.io/Media/Default/Users/Linherest/images/551979aa-579d-4fb2-a099-d20f8f7b29f9.png\" width=\"1436\" /></p>\r\n\r\n<p>Bây giờ, thì mở phần Network Timeline trong Chrome DevTools.</p>\r\n\r\n<p><img alt=\"\" src=\"https://codelearn.io/Media/Default/Users/Linherest/images/d8813bac-8769-4b23-a20a-3e6e46caec98.png\" width=\"893\" /></p>\r\n\r\n<p>DevTools report sự kiện&nbsp;<code>load</code>&nbsp;(hay&nbsp;<code>onload</code>) được khởi tạo ở 335ms. Như vậy, sự kiện&nbsp;<code>load</code>&nbsp;đã bị block bởi &quot;awesome-photo.jpg&quot;.</p>\r\n\r\n<p>Bạn có thể tưởng tượng là với ví dụ đơn giản trên thì không ảnh hưởng gì đến trải nghiệm của người dùng cả vì trang web sẽ rất nhanh được hiển thị. Tuy nhiên, nếu trang web có 10, 20, ... 100 ảnh thì sao. Không khó để đoán là thời gian chờ sẽ càng ngày càng lâu. Theo báo cáo của HTTP Archive (<em>tại thời điểm 27/Jul/2020</em>), trung bình 1 trang web trên desktop có dung lượng 1999.9 KB. Trong khi, trung bình 1 trang web trên desktop có dung lượng ảnh là 947.1 KB chiếm khoảng 47,35 %. Chúng ta không thể làm ngơ các vấn đề liên quan đến Ảnh, nó quá quan trọng đối với trải nghiệm của người dùng.</p>\r\n\r\n<h3>Kỹ thuật lazy loading đối với Ảnh</h3>\r\n\r\n<p>Cơ bản, khi khai báo 1 thành phần ảnh chúng ta làm như sau:</p>\r\n\r\n<pre>\r\n<code>&lt;img src=&quot;awesome-photo.jpg&quot;&gt;</code></pre>\r\n\r\n<p>Vậy muốn ứng dụng lazy loading cho thành phần này thì chúng ta thêm thuộc tính&nbsp;<code>loading</code>&nbsp;với giá trị&nbsp;<code>lazy</code>:</p>\r\n\r\n<pre>\r\n<code>&lt;img src=&quot;awesome-photo.jpg&quot; loading=&quot;lazy&quot;&gt;</code></pre>\r\n\r\n<p>Dưới đây là các giá trị được hỗ trợ cho thuộc&nbsp;<code>loading</code>:</p>\r\n\r\n<ul>\r\n	<li><code>auto</code>: Giá trị mặc định phụ thuộc vào hành vi của từng trình duyệt, tương tự với việc không thêm thuộc tính&nbsp;<code>loading</code>&nbsp;vào.</li>\r\n	<li><code>lazy</code>: Trì hoãn tải tài nguyên về cho đến khi đạt 1 khoảng cách nào đó từ khung nhìn.</li>\r\n	<li><code>eager</code>: Tải tài nguyên ngay lập tức, bất kể vị trí của nó trên trang.</li>\r\n</ul>\r\n\r\n<p>&nbsp;Theo trang Can I Use thì thuộc tính loading đã được đa số các trình duyệt implement rồi. Bạn có thể yên tâm sử dụng.</p>\r\n\r\n<p><img alt=\"\" src=\"https://codelearn.io/Media/Default/Users/Linherest/images/38d348d1-4286-4c2b-b18a-ef2d0ea977ad.png\" width=\"1900\" /></p>\r\n\r\n<p>Vậy còn đối với các trình duyệt chưa hỗ trợ thì làm sao. Bạn có thể tạo 1 polyfill hoặc dùng thư viện của bên thứ 3 như&nbsp;<a href=\"https://github.com/aFarkas/lazysizes\">LazySizes</a>. Thuộc tính loading có thể dùng để phát hiện xem trình duyệt có hỗ trợ tính năng này hay không:</p>\r\n\r\n<pre>\r\n<code>if (&#39;loading&#39; in HTMLImageElement.prototype) {\r\n  // trình duyệt có hỗ trợ\r\n} else {\r\n  // sử dụng polyfill hoặc thư viện của bên thứ 3\r\n}</code></pre>\r\n\r\n<h3>LazySizes</h3>\r\n\r\n<p><strong>LazySizes</strong>&nbsp;là thư viện có tốc độ cao, tối ưu SEO và tự khởi tạo (self-initializing) cho mục đích lazy load ảnh (bao gồm cả ảnh đáp ứng picture / srcset), iframe, script / widget và nhiều thành phần khác nữa. Nó cũng ưu tiên các tài nguyên dựa trên sự khác biệt về tầm mức quan trọng, trong đó. LazySizes ưu tiên các phần tử nằm trong khung nhìn và gần khung nhìn trình duyệt (near view elements) để tối ưu tốc độ tải nhận thức (perceived performance) nhanh hơn.</p>\r\n\r\n<ul>\r\n	<li><strong>Bước 1</strong>: thêm link đến CDN chứa LazySizes:</li>\r\n</ul>\r\n\r\n<pre>\r\n<code>&lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/lazysizes/5.2.0/lazysizes.min.js&quot; async=&quot;&quot;&gt;&lt;/script&gt;</code></pre>\r\n\r\n<p>hoặc bạn có thể tải về web server &amp; để link trực tiếp trên server:</p>\r\n\r\n<pre>\r\n<code>&lt;script src=&quot;lazysizes.min.js&quot; async=&quot;&quot;&gt;&lt;/script&gt;</code></pre>\r\n\r\n<ul>\r\n	<li><strong>Bước 2</strong>: thêm&nbsp;<code>class</code>&nbsp;<code>lazyload</code>&nbsp;vào ảnh với thuộc tính&nbsp;<code>data-src</code>&nbsp;hoặc&nbsp;<code>data-srcset</code>:</li>\r\n</ul>\r\n\r\n<pre>\r\n<code>&lt;!-- non-responsive: --&gt;\r\n&lt;img data-src=&quot;image.jpg&quot; class=&quot;lazyload&quot; /&gt;</code></pre>\r\n\r\n<pre>\r\n<code>&lt;!-- responsive example with automatic sizes calculation: --&gt;\r\n&lt;img\r\n    data-sizes=&quot;auto&quot;\r\n    data-src=&quot;image2.jpg&quot;\r\n    data-srcset=&quot;image1.jpg 300w,\r\n    image2.jpg 600w,\r\n    image3.jpg 900w&quot; class=&quot;lazyload&quot; /&gt;</code></pre>\r\n\r\n<p><em>Lưu ý</em>: LazySizes không cần bất kỳ cấu hình bằng JavaScript nào.</p>\r\n\r\n<p>Tránh sử dụng lazy loading cho ảnh trong khung nhìn đầu tiên</p>\r\n\r\n<p>Bạn chỉ nên thêm lazy loading cho các ảnh ở bên dưới khung hiển thị đầu tiên. Các hình ảnh với thuộc tính&nbsp;<code>eager</code>&nbsp;được tải ngay lập tức bất kể vị trí trên trang. Trong khi các hình ảnh với thuộc tính&nbsp;<code>loading</code>&nbsp;thì trình duyệt cần phải đợi cho đến khi biết được vị trí của hình ảnh trên trang dựa trên&nbsp;<code>IntersectionObserver</code>. Nói chung, bất kỳ hình ảnh nào trong khung nhìn cần được trình duyệt tải ngay 1 cách mặc định. Bạn không cần chỉ định thuộc tính&nbsp;<code>loading=eager</code>&nbsp;cho những trường hợp ảnh trong khung nhìn.</p>\r\n\r\n<pre>\r\n<code>&lt;!-- visible in the viewport --&gt;\r\n&lt;img src=&quot;product-1.jpg&quot; alt=&quot;...&quot; width=&quot;200&quot; height=&quot;200&quot;&gt;\r\n&lt;img src=&quot;product-2.jpg&quot; alt=&quot;...&quot; width=&quot;200&quot; height=&quot;200&quot;&gt;\r\n&lt;img src=&quot;product-3.jpg&quot; alt=&quot;...&quot; width=&quot;200&quot; height=&quot;200&quot;&gt;\r\n \r\n&lt;!-- offscreen images --&gt;\r\n&lt;img src=&quot;product-4.jpg&quot; loading=&quot;lazy&quot; alt=&quot;...&quot; width=&quot;200&quot; height=&quot;200&quot;&gt;\r\n&lt;img src=&quot;product-5.jpg&quot; loading=&quot;lazy&quot; alt=&quot;...&quot; width=&quot;200&quot; height=&quot;200&quot;&gt;\r\n&lt;img src=&quot;product-6.jpg&quot; loading=&quot;lazy&quot; alt=&quot;...&quot; width=&quot;200&quot; height=&quot;200&quot;&gt;</code></pre>\r\n\r\n<h3>Testing lazy loading</h3>\r\n\r\n<p>Chúng ta sẽ cùng check xem ảnh có được&nbsp;<em><strong>tải chậm</strong></em>&nbsp;thật không nhé. Mở Chrome DevTools bằng cách nhấn F12 hoặc click chuột phải chọn Inspect Elements sau đó chọn tab Network &rarr; Img. Ở lần refresh page đầu tiên bạn sẽ chỉ nhìn thấy 1 số ảnh phía trên được load.</p>\r\n\r\n<p><img alt=\"\" src=\"https://codelearn.io/Media/Default/Users/Linherest/images/4be760cb-1d7e-46ad-b900-8239486e04af.jpg\" width=\"1000\" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Sau đó khi bạn scroll xuống dưới thì sẽ thấy những ảnh khác ngay lập tức được load theo.</p>\r\n\r\n<h3>Kết luận</h3>\r\n\r\n<p>Việc các trình duyệt đã hỗ trợ chính thức (<em>native</em>) lazy loading có thể giúp bạn dễ dàng cải thiện trang web của mình hơn. Nếu bạn nhận thấy bất kỳ behavior nào không bình thường của tính năng lazy loading trên Google Chrome thì bạn có thể thông báo&nbsp;<a href=\"https://bugs.chromium.org/p/chromium/issues/entry?summary=%5BLazyLoad%5D:&amp;comment=Application%20Version%20(from%20%22Chrome%20Settings%20%3E%20About%20Chrome%22):%20%0DAndroid%20Build%20Number%20(from%20%22Android%20Settings%20%3E%20About%20Phone/Tablet%22):%20%0DDevice:%20%0D%0DSteps%20to%20reproduce:%20%0D%0DObserved%20behavior:%20%0D%0DExpected%20behavior:%20%0D%0DFrequency:%20%0D%3Cnumber%20of%20times%20you%20were%20able%20to%20reproduce%3E%20%0D%0DAdditional%20comments:%20%0D&amp;labels=Pri-2&amp;components=Blink%3ELoader%3ELazyLoad%2C\">tại đây</a>. Hy vọng bạn sẽ có tư duy sử dụng lazy loading ngay từ khi develop trang web.</p>', '/images/689931596127675.jpg', 7, 5, 11, '14', '2020-07-30 16:47:55', '2020-10-08 09:12:02', NULL, 0),
(29, 'Hai Anh Em Typedef Và Define Trong C++', '<p><strong>Trong C++ cung cấp cho người lập trình 2 từ khóa typedef &amp; define rất quan trọng và phổ biến mà bất kì ai học cũng nên biết và sử dụng nó như một thói quen. Chúng có ưu điểm như thế nào mời các bạn xem bài viết của mình nhé.</strong></p>\r\n\r\n<h3><strong>Từ khóa typedef</strong></h3>\r\n\r\n<p><code>typedef</code>&nbsp;là từ khóa cho phép người dùng thêm tên mới cho kiểu có sẵn với cú pháp như sau:&nbsp;</p>\r\n\r\n<p><code>typedef key_word new_name_use;</code></p>\r\n\r\n<p>Ví dụ:</p>\r\n\r\n<pre>\r\n<code>#include &lt;bits/stdc++.h&gt;\r\nusing namespace std;\r\ntypedef long long ll;\r\ntypedef double db;\r\ntypedef unsigned long int uln;\r\nint main()\r\n{\r\n	ll val = 100000000;\r\n	db val1 = 1.1;\r\n	uli val2 = 1000000000;\r\n	cout&lt;&lt;val&lt;&lt;endl;\r\n	cout&lt;&lt;val1&lt;&lt;endl;\r\n	cout&lt;&lt;val2&lt;&lt;endl;\r\n return 0;\r\n }\r\n</code></pre>\r\n\r\n<p>Khi này kiểu dữ liệu&nbsp;<code>long long</code>&nbsp;bạn hoàn toàn có thể thay thế bằng ll khi code.</p>\r\n\r\n<p>NOTE: bạn hoàn toàn có thể thêm nhiều tên mới cho một kiểu.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Từ khóa&nbsp;<code>typedef</code>&nbsp;có thể thêm tên mới cho class hay struct được không? Các bạn cùng mình xét ví dụ sau đây nhé:</p>\r\n\r\n<pre>\r\n<code>#include &lt;bits/stdc++.h&gt;\r\nusing namespace std;\r\nclass CodeLearn {\r\npublic:\r\nCodeLearn()\r\n{\r\n	cout&lt;&lt;&quot;Code Learn&quot;&lt;&lt;endl;\r\n}\r\n};\r\ntypedef CodeLearn CL;\r\nstruct codelearn {\r\nvoid printf()\r\n{\r\n	cout&lt;&lt;&quot;code learn&quot;&lt;&lt;endl;\r\n}\r\n};\r\ntypedef codelearn cl;\r\nint main()\r\n{\r\n	CL CL1;\r\n	cl cl1;\r\n	cl1.printf();\r\n return 0;\r\n }\r\n</code></pre>\r\n\r\n<p>Kết quả của chương trình:&nbsp;&nbsp;</p>\r\n\r\n<p><code>Code Learn</code></p>\r\n\r\n<p><code>code learn</code>&nbsp;</p>\r\n\r\n<p>Như vậy ta có thể thấy typedef có thể thêm được tên mới cho các kiểu mà người dùng định nghĩa (class &amp; struct) và nó giúp chúng ta dễ ghi nhớ tên của các kiểu dữ liệu, lớp hay cấu trúc một cách dễ dàng, dễ hiểu và dễ sử dụng hơn. Đồng thời nó cũng giúp giảm đi thời gian code đáng kể đấy.</p>\r\n\r\n<p>Một lưu ý nhỏ là cú pháp khi dùng typedef không thể thay thế như sau:</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><code>typedef new_name_use key_word;</code>&nbsp;lỗi này tuy nhỏ nhưng cá nhân mình thấy có thấy nhiều bạn khi mới sử dụng rất hay bị sai.&nbsp;</p>\r\n\r\n<h3>Từ khóa define</h3>\r\n\r\n<p><code>define</code>&nbsp;cũng là một từ khóa cho phép bạn đặt một tên mới cho một kiểu dữ liệu, một số hay một hàm với cú pháp như sau:</p>\r\n\r\n<p><code>define new_name_use name_want_swap</code>&nbsp;</p>\r\n\r\n<p>Xét ví dụ:</p>\r\n\r\n<pre>\r\n<code>#include &lt;bits/stdc++.h&gt;\r\nusing namespace std;\r\n#define number int\r\n#define loop(i,a,n) for(int i=0 ; i&lt;n ; i++)\r\n#define pub push_back\r\n#define pob pop_back\r\n\r\nint main()\r\n{\r\n          \r\n	number n; //khai báo biến n kiểu int\r\n	cout&lt;&lt;&quot;N = &quot;;\r\n	cin&gt;&gt;n;\r\n	vector &lt;int&gt; arr; //tạo 1 vector arr kiểu int\r\n        //tạo giá trị cho các phần tử của vector\r\n	loop(i,0,n)\r\n	{\r\n		arr.pub(i);\r\n	}\r\n	arr.pob(); // xóa phần tử cuối cùng của vector arr\r\n        //in ra các giá trị của vector arr\r\n	loop(i,0,arr.size())\r\n	{\r\n		cout&lt;&lt;arr[i]&lt;&lt;&quot; &quot;;\r\n	}\r\n	return 0;\r\n}\r\n</code></pre>\r\n\r\n<p>Kết quả của chương trình:&nbsp;&nbsp; &nbsp;&nbsp;<img alt=\"\" src=\"https://codelearn.io/Media/Default/Users/Windstar981/wind/in.png\" width=\"91\" /></p>\r\n\r\n<p>Xét câu lệnh&nbsp;<code>#define loop(i,a,n) for(int i=0 ; i&lt;n ; i++)</code>&nbsp;ở đây&nbsp;<code>loop(1,a,n)</code>&nbsp;sẽ được thay thế bởi&nbsp;<code>for(int i=0 ; i&lt;n ; i++)</code>&nbsp;khi chương trình chạy.</p>\r\n\r\n<p>Còn&nbsp;<code>push_back</code>&nbsp;là câu lệnh thêm phần tử vào cuối vector sẽ được thay thế bởi&nbsp;<code>pub</code>&nbsp;,&nbsp;<code>pop_back</code>&nbsp;là câu lệnh bỏ đi phần tử cuối cùng của vector sẽ được thay thế bởi&nbsp;<code>pob</code>.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Như vậy chúng ta có thể thấy #define rất mạnh khi lập trình, nó giúp chúng ta thay thế được mọi thứ bằng một tên gọi mới gợi nhớ hơn, chúng ta có thể khai báo hằng, có thể thay thế vòng lặp, có thể thay thế tên kiểu,... Đặc biệt hơn nó giúp chúng ta giảm tải 1 khoảng thời gian code đi code lại những đoạn code trùng nhau, giúp cho chương trình trở nên ngắn gọi và dễ hiểu hơn.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Một lưu ý nhỏ là cú pháp khi dùng define không thể thay thế như sau:</p>\r\n\r\n<p><code>define new_name_use name_want_swap;</code>&nbsp;hay&nbsp;<code>define name_want_swap new_name_use</code>&nbsp; lỗi này tuy nhỏ nhưng cá nhân mình thấy có thấy nhiều bạn khi mới sử dụng rất hay bị sai.&nbsp;</p>\r\n\r\n<p>Khi code chúng ta không được phép đặt tên biến giống với tên được thay thế ở #define. Vì, define hoạt động theo cơ chế&nbsp;precompile(tiền biên dịch) tức là dịch trước chạy sau.</p>\r\n\r\n<p>Xét ví dụ cụ thể cho dễ hiểu nhé:</p>\r\n\r\n<pre>\r\n<code>#include &lt;bits/stdc++.h&gt;\r\nusing namespace std;\r\n#define PI = 3.14159\r\nint main()\r\n{\r\n	double PI = 3.14;\r\n	return 0;\r\n }\r\n</code></pre>\r\n\r\n<p>Các bạn thử chạy xem lỗi như thế nào nhé!</p>\r\n\r\n<h3>Điểm khác nhau giữa hai anh em TYPEDEF &amp; DEFINE</h3>\r\n\r\n<p>Xét tổng thể các ví dụ trên thì chúng ta có thể thấy điểm khác nhau lớn nhất giữa typedef &amp; define là:<code>&nbsp;typedef</code>&nbsp;chỉ có thể thêm tên mới cho các kiểu có sẵn hoặc do người dùng định nghĩa còn&nbsp;<code>define</code>&nbsp;nó rộng hơn typedef ở chỗ là nó có thể thay thế hoặc định nghĩa cho biến, cho kiểu, cho vòng lặp...</p>\r\n\r\n<p>Sự phiên dịch&nbsp;<code>typedef</code>&nbsp;được thực hiện bởi bộ biên dịch, trong khi lệnh&nbsp;<code>#define</code>&nbsp;được xử lý bởi bộ tiền xử lý.</p>\r\n\r\n<p>Kết</p>\r\n\r\n<p>Khi học tập và làm việc với C++ chắc chắn sẽ không thể bỏ qua kiến thức về&nbsp;typedef &amp; define. Qua bài viết này mình đã giới thiệu cũng như minh họa cụ thể cho các bạn về hai anh em typedef &amp; define, mong các bạn có thể hiểu và áp dụng chúng thường xuyên. Hẹn gặp các bạn trong các bài viết tiếp theo.</p>', '/images/876311596127822.jpg', 8, 5, 10, '14', '2020-07-30 16:50:22', '2020-10-08 09:11:51', NULL, 0);
INSERT INTO `blog` (`id_blog`, `title_blog`, `content_blog`, `img_blog`, `cate_parent`, `rate_blog`, `view_blog`, `auth`, `created_at`, `updated_at`, `tag_blog`, `stt_blog`) VALUES
(30, 'Chuyển Đổi Kiểu Dữ Liệu Thường Gặp Trong Javascript', '<p>Mặc dù JavaScript là ngôn ngữ không chặt chẽ về kiểu dữ liệu, tuy nhiên nhiều khi chúng ta vẫn cần chuyển đổi từ kiểu dữ liệu này sang kiểu khác. Sau đây là một số cách chuyển đổi dữ liệu trong javascript.</p>\r\n\r\n<h3>Kiểu dữ liệu trong Javascript</h3>\r\n\r\n<p>Trong Javascript có 5 kiểu dữ liệu khác nhau có thể chứa các giá trị:</p>\r\n\r\n<ul>\r\n	<li><code>string</code></li>\r\n	<li><code>number</code></li>\r\n	<li><code>boolean</code></li>\r\n	<li><code>object</code></li>\r\n	<li><code>function</code></li>\r\n</ul>\r\n\r\n<p>Có 6 loại đối tượng:</p>\r\n\r\n<ul>\r\n	<li><code>Object</code></li>\r\n	<li><code>Date</code></li>\r\n	<li><code>Array</code></li>\r\n	<li><code>String</code></li>\r\n	<li><code>Number</code></li>\r\n	<li><code>Boolean</code></li>\r\n</ul>\r\n\r\n<p>Và 2 kiểu dữ liệu không thể chứa các giá trị:</p>\r\n\r\n<ul>\r\n	<li><code>null</code></li>\r\n	<li><code>undefined</code></li>\r\n</ul>\r\n\r\n<h3>Toán tử typeof</h3>\r\n\r\n<p>&nbsp;Bạn có thể dùng toán tử&nbsp;<code>typeof</code>&nbsp;để tìm kiểu dữ kiệu của một biến javascript.</p>\r\n\r\n<p>Ví dụ:</p>\r\n\r\n<pre>\r\n<code>typeof &quot;John&quot;                 // Returns &quot;string&quot;\r\ntypeof 3.14                   // Returns &quot;number&quot;\r\ntypeof NaN                    // Returns &quot;number&quot;\r\ntypeof false                  // Returns &quot;boolean&quot;\r\ntypeof [1,2,3,4]              // Returns &quot;object&quot;\r\ntypeof {name:&#39;John&#39;, age:34}  // Returns &quot;object&quot;\r\ntypeof new Date()             // Returns &quot;object&quot;\r\ntypeof function () {}         // Returns &quot;function&quot;\r\ntypeof myCar                  // Returns &quot;undefined&quot; *\r\ntypeof null                   // Returns &quot;object&quot;</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Hãy để ý sẽ thấy:</p>\r\n\r\n<ul>\r\n	<li>Kiểu dữ liệu của NaN là number</li>\r\n	<li>Kiểu dữ liệu của array là object</li>\r\n	<li>Kiểu dữ liệu của date là object</li>\r\n	<li>Kiểu dữ liệu của null là object</li>\r\n	<li>Kiểu dữ liệu của&nbsp;một biến mà chưa được gán giá trị là&nbsp;<strong>undefined</strong>&nbsp;</li>\r\n</ul>\r\n\r\n<h3>Chuyển đổi kiểu dữ liệu trong Javascript</h3>\r\n\r\n<p>Các biến javaScript&nbsp; có thể được chuyển đổi thành một biến mới và một kiểu dữ liệu khác:</p>\r\n\r\n<ul>\r\n	<li>Bằng cách sử dụng một hàm JavaScript</li>\r\n	<li><strong>Tự động</strong>&nbsp;bởi chính JavaScript</li>\r\n</ul>\r\n\r\n<h3>1. Chuyển đổi bằng Javascript function</h3>\r\n\r\n<p>Chuyển đổi Numbers sang Strings</p>\r\n\r\n<p>Phương thức toàn cục&nbsp;<code>String()</code>&nbsp;có thể chuyển numbers sang strings.</p>\r\n\r\n<pre>\r\n<code>var x=123;\r\nString(x);         // return &#39;123&#39;\r\nString(123);       // return &#39;123&#39;\r\nString(100 + 23);  // return &#39;123&#39;</code></pre>\r\n\r\n<p>Phương thức&nbsp;&nbsp;<code>toString()</code>&nbsp;cũng thực hiện tương tự.</p>\r\n\r\n<pre>\r\n<code>var x=123;\r\nx.toString();           //return &#39;123&#39;\r\n(123).toString();       //return &#39;123&#39;\r\n(100 + 23).toString();  //return &#39;123&#39;\r\n</code></pre>\r\n\r\n<p>Chuyển đổi Booleans sang Strings</p>\r\n\r\n<p>Phương thức toàn cục&nbsp;<code>String()</code>&nbsp;có thể chuyển booleans sang strings</p>\r\n\r\n<pre>\r\n<code>String(false);      // return &quot;false&quot;\r\nString(true);       // return &quot;true&quot;</code></pre>\r\n\r\n<p>Phương thức&nbsp;<code>toString()</code>&nbsp;cũng thực hiện tương tự.</p>\r\n\r\n<pre>\r\n<code>false.toString();   // return &quot;false&quot;\r\ntrue.toString();    // return &quot;true&quot;</code></pre>\r\n\r\n<p>Chuyển đổi Dates sang Strings</p>\r\n\r\n<p>Phương thức toàn cục&nbsp;<code>String()</code>&nbsp;có thể chuyển dates sang strings.</p>\r\n\r\n<pre>\r\n<code>String(Date());  // return &quot;Sat Jul 25 2020 09:05:53 GMT+0700 (Giờ Đông Dương)&quot;</code></pre>\r\n\r\n<p>Phương thức&nbsp;<code>toString()</code>&nbsp;cũng thực hiện tương tự.</p>\r\n\r\n<pre>\r\n<code>Date().toString();  // returns &quot;Sat Jul 25 2020 09:07:02 GMT+0700 (Giờ Đông Dương)&quot;</code></pre>\r\n\r\n<p>Chuyển đổi Strings sang Numbers</p>\r\n\r\n<p>Phương thức toàn cục&nbsp;<code>String()</code>&nbsp;có thể chuyển strings sang numbers.</p>\r\n\r\n<p>Chuỗi chứa số (ví dụ : &quot;3.14&quot;) chuyển sang numbers (3.14).</p>\r\n\r\n<p>Chuỗi rỗng chuyển thành 0.</p>\r\n\r\n<p>Mọi trường hợp còn lại chuyển sang&nbsp;<code>NaN</code>&nbsp;(Not a Number).</p>\r\n\r\n<pre>\r\n<code>Number(&quot;3.14&quot;);    // returns 3.14\r\nNumber(&quot; 10 &quot;);    // returns 10\r\nNumber(&quot; &quot;);       // returns 0\r\nNumber(&quot;&quot;);        // returns 0\r\nNumber(&quot;3,14&quot;);    // returns NaN\r\nNumber(&quot;99 88&quot;);   // returns NaN</code></pre>\r\n\r\n<h3>Toán tử +&nbsp;</h3>\r\n\r\n<p><strong>Toán tử +&nbsp;</strong>có thể được sử dụng để chuyển một chuỗi sang số:</p>\r\n\r\n<pre>\r\n<code>var y = &quot;5&quot;;      // y is a string\r\nvar x = + y;      // x is a number (5)\r\n</code></pre>\r\n\r\n<p>Nếu biến không thể được chuyển đổi, nó vẫn sẽ trở thành một số, nhưng với giá trị NaN (Not a Number):</p>\r\n\r\n<pre>\r\n<code>var y = &quot;John&quot;;   // y is a string\r\nvar x = + y;      // x is a number (NaN)</code></pre>\r\n\r\n<p>Chuyển đổi Booleans sang Numbers</p>\r\n\r\n<p>Phương thức toàn cục&nbsp;&nbsp;<code>Number()</code>&nbsp;cũng&nbsp;có thể chuyển booleans sang numbers.</p>\r\n\r\n<pre>\r\n<code>Number(false)     // returns 0\r\nNumber(true)      // returns 1</code></pre>\r\n\r\n<p>Chuyển đổi Dates sang Numbers</p>\r\n\r\n<p>Phương thức toàn cục&nbsp;&nbsp;<code>Number()</code>&nbsp;có thể được dùng để chuyển dates sang numbers.</p>\r\n\r\n<pre>\r\n<code>d = new Date();\r\nNumber(d)          // returns 1404568027739</code></pre>\r\n\r\n<p>Phương thức&nbsp;<code>getTime()</code>&nbsp;cũng thực hiện tương tự..</p>\r\n\r\n<pre>\r\n<code>d = new Date();\r\nd.getTime()        // returns 1404568027739</code></pre>\r\n\r\n<h3>2. Tự động chuyển đổi kiểu dữ liệu</h3>\r\n\r\n<p>Khi JavaScript cố gắng hoạt động trên loại dữ liệu &quot;wrong&quot;, nó sẽ cố gắng chuyển đổi giá trị thành loại &quot;right&quot;.</p>\r\n\r\n<pre>\r\n<code>5 + null    // returns 5         because null is converted to 0\r\n&quot;5&quot; + null  // returns &quot;5null&quot;   because null is converted to &quot;null&quot;\r\n&quot;5&quot; + 2     // returns &quot;52&quot;      because 2 is converted to &quot;2&quot;\r\n&quot;5&quot; - 2     // returns 3         because &quot;5&quot; is converted to 5\r\n&quot;5&quot; * &quot;2&quot;   // returns 10        because &quot;5&quot; and &quot;2&quot; are converted to 5 and 2</code></pre>\r\n\r\n<p>Tự động chuyển sang string</p>\r\n\r\n<p>JavaScript tự động gọi hàm toString () của biến khi hiển thị một đối tượng hoặc một biến:</p>\r\n\r\n<pre>\r\n<code>document.getElementById(&quot;demo&quot;).innerHTML = myVar;\r\n\r\n// if myVar = {name:&quot;Fjohn&quot;}  // toString converts to &quot;[object Object]&quot;\r\n// if myVar = [1,2,3,4]       // toString converts to &quot;1,2,3,4&quot;\r\n// if myVar = new Date()      // toString converts to &quot;Fri Jul 18 2014 09:08:55 GMT+0200&quot;</code></pre>\r\n\r\n<p>Numbers và booleans cũng được chuyển, nhưng điều này là không được nhìn thấy:</p>\r\n\r\n<pre>\r\n<code>// if myVar = 123             // toString converts to &quot;123&quot;\r\n// if myVar = true            // toString converts to &quot;true&quot;\r\n// if myVar = false           // toString converts to &quot;false&quot;</code></pre>\r\n\r\n<p>Bảng chuyển đổi kiểu dữ liệu trong JavaScript</p>\r\n\r\n<p>Bảng này thể hiện kết quả chuyển đổi các giá trị khác nhau trong Javascript sang Number, String, and Boolean:</p>\r\n\r\n<table cellpadding=\"20\" cellspacing=\"0\">\r\n	<tbody>\r\n		<tr>\r\n			<th>Original<br />\r\n			Value</th>\r\n			<th>Converted<br />\r\n			to Number</th>\r\n			<th>Converted<br />\r\n			to String</th>\r\n			<th>Converted<br />\r\n			to Boolean</th>\r\n		</tr>\r\n		<tr>\r\n			<td>false</td>\r\n			<td>0</td>\r\n			<td>&quot;false&quot;</td>\r\n			<td>false</td>\r\n		</tr>\r\n		<tr>\r\n			<td>true</td>\r\n			<td>1</td>\r\n			<td>&quot;true&quot;</td>\r\n			<td>true</td>\r\n		</tr>\r\n		<tr>\r\n			<td>0</td>\r\n			<td>0</td>\r\n			<td>&quot;0&quot;</td>\r\n			<td>false</td>\r\n		</tr>\r\n		<tr>\r\n			<td>1</td>\r\n			<td>1</td>\r\n			<td>&quot;1&quot;</td>\r\n			<td>true</td>\r\n		</tr>\r\n		<tr>\r\n			<td>&quot;0&quot;</td>\r\n			<td>0</td>\r\n			<td>&quot;0&quot;</td>\r\n			<td>true</td>\r\n		</tr>\r\n		<tr>\r\n			<td>&quot;000&quot;</td>\r\n			<td>0</td>\r\n			<td>&quot;000&quot;</td>\r\n			<td>true</td>\r\n		</tr>\r\n		<tr>\r\n			<td>&quot;1&quot;</td>\r\n			<td>1</td>\r\n			<td>&quot;1&quot;</td>\r\n			<td>true</td>\r\n		</tr>\r\n		<tr>\r\n			<td>NaN</td>\r\n			<td>NaN</td>\r\n			<td>&quot;NaN&quot;</td>\r\n			<td>false</td>\r\n		</tr>\r\n		<tr>\r\n			<td>Infinity</td>\r\n			<td>Infinity</td>\r\n			<td>&quot;Infinity&quot;</td>\r\n			<td>true</td>\r\n		</tr>\r\n		<tr>\r\n			<td>-Infinity</td>\r\n			<td>-Infinity</td>\r\n			<td>&quot;-Infinity&quot;</td>\r\n			<td>true</td>\r\n		</tr>\r\n		<tr>\r\n			<td>&quot;&quot;</td>\r\n			<td>0</td>\r\n			<td>&quot;&quot;</td>\r\n			<td>false</td>\r\n		</tr>\r\n		<tr>\r\n			<td>&quot;20&quot;</td>\r\n			<td>20</td>\r\n			<td>&quot;20&quot;</td>\r\n			<td>true</td>\r\n		</tr>\r\n		<tr>\r\n			<td>&quot;twenty&quot;</td>\r\n			<td>NaN</td>\r\n			<td>&quot;twenty&quot;</td>\r\n			<td>true</td>\r\n		</tr>\r\n		<tr>\r\n			<td>[ ]</td>\r\n			<td>0</td>\r\n			<td>&quot;&quot;</td>\r\n			<td>true</td>\r\n		</tr>\r\n		<tr>\r\n			<td>true</td>\r\n			<td>1</td>\r\n			<td>&quot;true&quot;</td>\r\n			<td>true</td>\r\n		</tr>\r\n		<tr>\r\n			<td>[20]</td>\r\n			<td>20</td>\r\n			<td>&quot;20&quot;</td>\r\n			<td>true</td>\r\n		</tr>\r\n		<tr>\r\n			<td>[10,20]</td>\r\n			<td>NaN</td>\r\n			<td>&quot;10,20&quot;</td>\r\n			<td>true</td>\r\n		</tr>\r\n		<tr>\r\n			<td>[&quot;twenty&quot;]</td>\r\n			<td>NaN</td>\r\n			<td>&quot;twenty&quot;</td>\r\n			<td>true</td>\r\n		</tr>\r\n		<tr>\r\n			<td>[&quot;ten&quot;,&quot;twenty&quot;]</td>\r\n			<td>NaN</td>\r\n			<td>&quot;ten&quot;,&quot;twenty&quot;</td>\r\n			<td>true</td>\r\n		</tr>\r\n		<tr>\r\n			<td>function(){}</td>\r\n			<td>NaN</td>\r\n			<td>&quot;function(){}&quot;</td>\r\n			<td>true</td>\r\n		</tr>\r\n		<tr>\r\n			<td>{ }</td>\r\n			<td>NaN</td>\r\n			<td>&quot;[object Object]&quot;</td>\r\n			<td>true</td>\r\n		</tr>\r\n		<tr>\r\n			<td>null</td>\r\n			<td>0</td>\r\n			<td>&quot;null&quot;</td>\r\n			<td>false</td>\r\n		</tr>\r\n		<tr>\r\n			<td>undefined</td>\r\n			<td>NaN</td>\r\n			<td>&quot;undefined&quot;</td>\r\n			<td>false</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>Giá trị trong nháy kép biểu thị là giá trị chuỗi.</p>\r\n\r\n<p>Giá trị đỏ biểu thị giá trị lập trình viên có thể không mong đợi.</p>\r\n\r\n<h3>Lời kết</h3>\r\n\r\n<p>Trên đây là những cách chyển đổi cơ bản giữa các loại dữ liệu thường dùng nhất. Ngoài ra với mỗi loại dữ liệu khác nhau sẽ có thêm những phương thức khác để chuyển đổi nữa,mình sẽ trình bày trong những bài viết sau.</p>\r\n\r\n<p>Cảm ơn các bạn đã đọc bài viết, nếu các bạn thấy hay thì ủng hộ giúp mình, có bất kì ý kiến đóng góp gì thì mong các bạn để lại comment ở dưới để chúng ta cùng thảo luận.</p>', '/images/687291596127933.jpg', 6, 5, 11, '14', '2020-07-30 16:52:13', '2020-09-18 07:45:43', NULL, 0);

-- --------------------------------------------------------

--
-- Table structure for table `blog_cate`
--

CREATE TABLE `blog_cate` (
  `id` int(10) UNSIGNED NOT NULL,
  `name` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `sort` int(11) NOT NULL,
  `type` int(11) NOT NULL,
  `parent_id` int(11) NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL,
  `color_cate` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `blog_cate`
--

INSERT INTO `blog_cate` (`id`, `name`, `sort`, `type`, `parent_id`, `created_at`, `updated_at`, `color_cate`) VALUES
(4, 'Hướng nghiệp', 0, 0, 0, '2020-07-01 01:03:32', '2020-07-01 01:03:32', '#7300e6'),
(5, 'Mẹo Vặt', 0, 0, 0, '2020-07-01 21:22:35', '2020-07-01 21:22:35', '#ff0000'),
(6, 'Học tập', 0, 0, 0, '2020-07-02 04:12:25', '2020-07-02 04:12:25', '#000099'),
(7, 'Tin tức', 0, 0, 0, '2020-07-30 16:45:11', '2020-07-30 16:45:11', '#00a920'),
(8, 'Giải trí', 0, 0, 0, '2020-07-30 16:49:06', '2020-07-30 16:49:06', 'rgba(0,144,255,.7)');

-- --------------------------------------------------------

--
-- Table structure for table `cmt`
--

CREATE TABLE `cmt` (
  `id_cmt` int(10) UNSIGNED NOT NULL,
  `content_cmt` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `id_blog` int(11) NOT NULL,
  `id_forum` int(11) NOT NULL,
  `id_auth` int(11) NOT NULL,
  `id_parent` int(11) NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `cmt`
--

INSERT INTO `cmt` (`id_cmt`, `content_cmt`, `id_blog`, `id_forum`, `id_auth`, `id_parent`, `created_at`, `updated_at`) VALUES
(367, 'khối thi theo truyền thống thì sẽ là A01 và A00. Nhưng năm nay 2k3 sẽ có phương thức xét mới và các khối truyền thống đó ko còn nữa, nên là theo anh cứ học đầy đủ từ đầu toán, lý, hóa, sinh, anh (học VDC luôn thì càng tốt)', 0, 84, 13, 0, '2020-09-18 06:31:12', '2020-09-18 06:31:12'),
(368, 'Em cám ơn anh đã tư vấn ạ', 0, 84, 17, 367, '2020-09-18 06:31:45', '2020-09-18 06:31:45'),
(369, 'Em nên thi toán lý anh, tập trung vào toán và tiếng anh.', 0, 84, 8, 0, '2020-09-18 06:32:06', '2020-09-18 06:32:06'),
(370, 'Dạ em cám ơn chị ạ', 0, 84, 17, 369, '2020-09-18 06:32:43', '2020-09-18 06:32:43'),
(371, 'Còn đà nẵng thì sao ạ! Ai học đà nẵng cho em thông tin với ạ hehe. Thông tin tràn lan toàn quảng cáo toàn tích cực chứ ko có tiêu cực về trường', 0, 84, 17, 0, '2020-09-18 06:32:57', '2020-09-18 06:32:57'),
(372, 'Có hai khối A00(Toán-Lý-Hóa) và A01(Toán-Lý-Anh) mà ngành CNTT hay lấy. Với cả anh khuyên em nên thi lấy chứng chỉ IELTS càng sớm càng tốt bởi đó sẽ là một lợi thế không nhỏ đó', 0, 84, 12, 0, '2020-09-18 06:33:58', '2020-09-18 06:33:58'),
(373, 'Em cảm ơn anh', 0, 84, 17, 372, '2020-09-18 06:34:27', '2020-09-18 06:34:27'),
(374, 'Học đại học Việt - Hàn em nha... Xịn cực', 0, 84, 15, 0, '2020-10-09 08:15:46', '2020-10-09 08:15:46'),
(375, 'Anh review giúp em trường Việt - Hàn với ạ.', 0, 84, 13, 374, '2020-10-09 08:16:31', '2020-10-09 08:16:31');

-- --------------------------------------------------------

--
-- Table structure for table `course`
--

CREATE TABLE `course` (
  `id_course` int(10) UNSIGNED NOT NULL,
  `title_course` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `desc_course` text COLLATE utf8mb4_unicode_ci NOT NULL,
  `img_course` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `cate_parent` int(11) NOT NULL,
  `rate_course` double NOT NULL,
  `total_study` int(11) NOT NULL,
  `total_lesson` int(11) NOT NULL,
  `coin` int(11) NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `course`
--

INSERT INTO `course` (`id_course`, `title_course`, `desc_course`, `img_course`, `cate_parent`, `rate_course`, `total_study`, `total_lesson`, `coin`, `created_at`, `updated_at`) VALUES
(13, 'Phần mềm máy tính', 'Phần mềm luôn là công cụ cần thiết trong mọi lĩnh vực, khóa học này sẽ giúp bạn hiểu được các khái niệm về phần mềm và các phần mềm phổ biến hiện nay.', '/images/621071593598615.png', 6, 5, 0, 0, 3000, '2020-07-01 03:16:55', '2020-07-01 03:16:55'),
(14, 'C cho người mới bắt đầu', 'Khóa học lập trình C cho người mới bắt đầu. Khóa học này sẽ cung cấp những kiến thức cơ bản và là nền tảng để bạn đi xa hơn trên con đường lập trình', '/images/770401593617757.jpg', 7, 5, 0, 0, 3000, '2020-07-01 08:35:57', '2020-07-01 08:35:57'),
(15, 'C++ cho người mới bắt đầu', 'Khóa học lập trình C++ cơ bản cho người mới bắt đầu. Khóa học này sẽ cung cấp những kiến thức cơ bản, dễ hiểu nhất về ngôn ngữ lập trình C++.', '/images/851281593617820.jpg', 7, 5, 0, 0, 3000, '2020-07-01 08:37:00', '2020-07-01 08:37:00'),
(16, 'Truyền thông và Mạng máy tính', 'Khóa học cung cấp cho lập trình viên những kiến thức cơ bản và dễ hiểu về mạng máy tính và truyền thông dữ liệu.', '/images/323881593617900.png', 6, 5, 0, 0, 3000, '2020-07-01 08:38:20', '2020-07-01 08:38:20'),
(17, 'Làm quen với SQL', 'Khóa học này sẽ giúp các lập trình viên nắm được nguyên tắc, cú pháp và cách thức hoạt động của SQL (Structured Query Language).', '/images/686971593617927.png', 7, 5, 0, 0, 3000, '2020-07-01 08:38:47', '2020-07-01 08:38:47'),
(18, 'JavaScript cơ bản', 'Giúp học viên nắm vững các nguyên tắc và cú pháp cơ bản trong Javascript - ngôn ngữ lập trình phổ biến nhất trên thế giới.', '/images/293611593617950.jpg', 7, 5, 0, 0, 3000, '2020-07-01 08:39:10', '2020-07-01 08:39:10'),
(19, 'Python cơ bản', 'Khóa học lập trình Python cơ bản với các bài tập và lý thuyết dễ hiểu, học xong bạn có thể tự tin để tới với các chủ đề nâng cao hơn của Python.', '/images/190991593617976.jpg', 7, 5, 0, 0, 3000, '2020-07-01 08:39:36', '2020-07-01 08:39:36'),
(20, 'Java cơ bản', 'Khóa học lập trình Java cơ bản cho người mới bắt đầu, khóa học này sẽ là nền tảng cho khóa Java nâng cao để tiến tới Java Web hay lập trình Android, ...', '/images/887551593618022.jpg', 7, 5, 0, 0, 3000, '2020-07-01 08:40:22', '2020-07-01 08:40:22'),
(21, 'C++ nâng cao', 'Khóa học lập trình C++ nâng cao sẽ giúp bạn hiểu sâu hơn về C++ với một số khái niệm như con trỏ, mảng, cấp phát bộ nhớ động, struct, ...', '/images/889611593618056.jpg', 8, 5, 0, 0, 5000, '2020-07-01 08:40:56', '2020-07-01 08:40:56'),
(22, 'Thực hành với SQL', 'Khóa học này sẽ giúp bạn biết về một số chức năng chính cần thiết để sắp xếp, lọc và phân loại thông tin trong cơ sở dữ liệu quan hệ, mở rộng bộ công cụ SQL của bạn và giúp bạn có khả năng giải quyết các vấn đề phức tạp hơn thông qua bộ công cụ này. Yêu cầu: Bạn cần hoàn thành khóa Làm quen với SQL để có kiến thức cơ bản trước khi tham gia khóa học này.', '/images/252321593618090.png', 8, 5, 0, 0, 5000, '2020-07-01 08:41:30', '2020-07-01 08:41:30'),
(23, 'Thuật toán căn bản', 'Với khóa học thuật toán cơ bản, bạn sẽ học được cách tư duy và giải quyết các bài toán lập trình cơ bản mà một lập trình viên cần có.', '/images/537101593618162.jpg', 9, 5, 0, 0, 4000, '2020-07-01 08:42:42', '2020-07-01 08:42:42'),
(24, 'Cấu trúc dữ liệu và giải thuật', 'Khóa học này sẽ giúp các bạn hiểu thuật toán cũng như hiểu rõ bản chất của các cấu trúc dữ liệu - điều kiện để trở thành lập trình viên giỏi.', '/images/412371593618197.jpg', 9, 5, 0, 0, 4000, '2020-07-01 08:43:17', '2020-07-01 08:43:17'),
(25, 'Thuật toán nâng cao', 'Giúp lập trình viên cải thiện khả năng lập trình với những thuật toán mạnh mẽ để giải quyết các bài toán lập trình phức tạp.', '/images/708531593618222.jpg', 9, 5, 0, 0, 4000, '2020-07-01 08:43:42', '2020-07-01 08:43:42');

-- --------------------------------------------------------

--
-- Table structure for table `course_cate`
--

CREATE TABLE `course_cate` (
  `id_cate` int(10) UNSIGNED NOT NULL,
  `name` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `course_cate`
--

INSERT INTO `course_cate` (`id_cate`, `name`, `created_at`, `updated_at`) VALUES
(6, 'Kiến thức cơ sở', '2020-06-30 01:28:16', '2020-06-30 01:28:16'),
(7, 'Lập trình cơ sở', '2020-07-01 08:33:56', '2020-07-01 08:33:56'),
(8, 'Lập trình nâng cao', '2020-07-01 08:34:05', '2020-07-01 08:34:05'),
(9, 'Tư duy lập trình', '2020-07-01 08:34:13', '2020-07-01 08:34:13'),
(10, 'Kỹ năng nâng cao', '2020-07-01 08:34:22', '2020-07-01 08:34:22');

-- --------------------------------------------------------

--
-- Table structure for table `document`
--

CREATE TABLE `document` (
  `id_doc` int(11) NOT NULL,
  `name_doc` varchar(255) NOT NULL,
  `id_cate` int(11) NOT NULL,
  `desc_doc` text NOT NULL,
  `file_doc` varchar(255) NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

--
-- Dumping data for table `document`
--

INSERT INTO `document` (`id_doc`, `name_doc`, `id_cate`, `desc_doc`, `file_doc`, `created_at`, `updated_at`) VALUES
(666, 'Đề ôn tập cấu trúc dữ liệu', 1, 'Đề thi thử để các bạn ôn tập nội dung cấu trúc dữ liệu đã học, các bạn hãy tải về làm.', '/upload/1600412189-De2.pdf', '2020-09-18 06:56:29', '2020-09-18 06:56:29'),
(667, 'Giáo trình cấu trúc dữ liệu', 1, 'Đây là giáo trình chính của khóa học cấu trúc dữ liệu và giải thuật. Các bạn tải về để tiện theo dõi bài học', '/upload/1600412255-Giao trinh CTDL - 8.2018.pdf', '2020-09-18 06:57:35', '2020-09-18 06:57:35'),
(668, 'Bài tập PHP Nâng cao', 4, 'Đây là File bài tập về nhà khóa học PHP nâng cao. Trong tài liệu đã có code mẫu, các bạn tải về và thực hành', '/upload/1600412383-Code.docx', '2020-09-18 06:59:43', '2020-09-18 06:59:43'),
(669, 'Giáo trình PHP', 4, 'Đây là giáo trình chính cho khóa học lập trình web nâng cao. Các bạn có thể soạn bài trước và làm bài tập thực hành trong sách', '/upload/1600412475-PHPNotesForProfessionals.pdf', '2020-09-18 07:01:15', '2020-09-18 07:01:15'),
(670, 'Tài liệu tham khảo về Css', 4, 'Đây là tài liệu tham khảo thêm về Css. Các bạn có thể đọc và thực hành các bài tập để ôn luyện lại kiến thức đã học', '/upload/1600412555-CSS.pdf', '2020-09-18 07:02:35', '2020-09-18 07:02:35'),
(671, 'Tài liệu JQuery', 4, 'Đây là tài liệu ôn tập kiến thức về JQuery', '/upload/1600412586-Jquery.pdf', '2020-09-18 07:03:06', '2020-09-18 07:03:06'),
(672, 'Giáo trình JavaScript', 4, 'Các bạn tải giáo trình chính sử dụng trong khóa học JavaScript ', '/upload/1600412691-Gioi thieu Javascript.pdf', '2020-09-18 07:04:51', '2020-09-18 07:04:51');

-- --------------------------------------------------------

--
-- Table structure for table `document_cate`
--

CREATE TABLE `document_cate` (
  `id_cate` int(11) NOT NULL,
  `name_cate` varchar(255) NOT NULL,
  `id_parent` int(11) NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

--
-- Dumping data for table `document_cate`
--

INSERT INTO `document_cate` (`id_cate`, `name_cate`, `id_parent`, `created_at`, `updated_at`) VALUES
(1, 'Cấu trúc dữ liệu', 0, '2020-07-14 05:26:35', '2020-07-14 05:26:35'),
(2, 'Python nâng cao', 0, '2020-07-14 05:34:48', '2020-07-14 05:34:48'),
(3, 'Quản lý mạng', 0, '2020-07-14 06:40:14', '2020-07-14 06:40:14'),
(4, 'Lập trình web', 0, '2020-07-14 06:40:27', '2020-07-14 06:40:27'),
(5, 'Lập trình ứng dụng', 0, '2020-07-14 06:40:38', '2020-07-14 06:40:38'),
(6, 'Khác', 0, '2020-07-14 06:40:50', '2020-07-14 06:40:50'),
(7, 'File linh tinh', 0, '2020-07-14 10:15:38', '2020-07-14 10:15:38');

-- --------------------------------------------------------

--
-- Table structure for table `failed_jobs`
--

CREATE TABLE `failed_jobs` (
  `id` bigint(20) UNSIGNED NOT NULL,
  `connection` text COLLATE utf8mb4_unicode_ci NOT NULL,
  `queue` text COLLATE utf8mb4_unicode_ci NOT NULL,
  `payload` longtext COLLATE utf8mb4_unicode_ci NOT NULL,
  `exception` longtext COLLATE utf8mb4_unicode_ci NOT NULL,
  `failed_at` timestamp NOT NULL DEFAULT current_timestamp()
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- --------------------------------------------------------

--
-- Table structure for table `forum`
--

CREATE TABLE `forum` (
  `id_post` int(10) UNSIGNED NOT NULL,
  `title_post` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `content_post` longtext COLLATE utf8mb4_unicode_ci NOT NULL,
  `auth_post` int(11) NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL,
  `slug_forum` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `like_post` int(11) DEFAULT NULL,
  `bgcolor` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `views` int(11) DEFAULT NULL,
  `comments` int(11) DEFAULT NULL,
  `id_cate_forum` int(11) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `forum`
--

INSERT INTO `forum` (`id_post`, `title_post`, `content_post`, `auth_post`, `created_at`, `updated_at`, `slug_forum`, `like_post`, `bgcolor`, `views`, `comments`, `id_cate_forum`) VALUES
(78, 'Xin mọi người hướng giải quyết bài này bằng c++ ạ :(', '<p>như ti&ecirc;u đề mọi người gi&uacute;p em định hướng b&agrave;i n&agrave;y v&oacute;i ạ :(</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Cho d&atilde;y số nguy&ecirc;n . T&igrave;m độ d&agrave;i đoạn con d&agrave;i nhất gồm c&aacute;c phần tử li&ecirc;n tiếp của d&atilde;y chỉ bao gồm hai gi&aacute; trị kh&aacute;c nhau. V&iacute; dụ d&atilde;y 1, 3, 2, 3, 3, 1, 2 th&igrave; đoạn con d&agrave;i nhất cần t&igrave;m l&agrave; 3, 2, 3, 3 độ d&agrave;i 4 gồm hai gi&aacute; trị l&agrave; 2 v&agrave; 3.</p>\r\n\r\n<p><strong>Dữ liệu</strong>: V&agrave;o từ file văn bản TWOVALS.INP:</p>\r\n\r\n<ul>\r\n	<li>D&ograve;ng đầu ti&ecirc;n ghi số nguy&ecirc;n ;</li>\r\n	<li>D&ograve;ng thứ hai ghi &nbsp;số nguy&ecirc;n .</li>\r\n</ul>\r\n\r\n<p><strong>Kết quả</strong>: Ghi ra file văn bản TWOVALS.OUT một số nguy&ecirc;n duy nhất l&agrave; độ d&agrave;i đoạn con d&agrave;i nhất chỉ bao gồm hai gi&aacute; trị kh&aacute;c nhau theo phương &aacute;n t&igrave;m được.</p>', 11, '2020-09-18 06:19:39', '2020-09-18 06:19:39', 'xin-moi-nguoi-huong-giai-quyet-bai-nay-bang-c-a', 0, NULL, 1, 0, 13),
(79, 'Sự khác nhau khi gọi hàm và print hàm ra màn hình', '<pre>\r\n#Initial list\r\nres = []\r\n\r\n# Input lengths\r\nlengths = int(input())\r\n\r\n# Add element\r\nfor i in range(lengths):\r\n    # Input elements\r\n    n = int(input())\r\n    res.append(n)\r\n\r\ndef convert_lst_to_int(res):\r\n    for i in res:\r\n        print(i, end = &quot;&quot;)\r\n<em><strong>convert_lst_to_int(res)  ================ &gt; nếu m&agrave; l&agrave; d&ograve;ng n&agrave;y, khi em nhập thử số 3, 4, 5 v&agrave;o sẽ ra kết quả l&agrave; 345\r\n\r\n</strong></em>nhưng nếu như thay bằng d&ograve;ng code n&agrave;y <em><strong>print(convert_lst_to_int(res)) </strong></em><strong>====== &gt; n&oacute; sẽ ra kết qua quả l&agrave; 345None\r\n\r\n\r\n</strong>Mong mọi người gi&uacute;p đỡ em ạ\r\n\r\nThanks in advance !!!!</pre>', 8, '2020-09-18 06:18:44', '2020-09-18 06:18:44', 'su-khac-nhau-khi-goi-ham-va-print-ham-ra-man-hinh', 0, NULL, 0, 0, 13),
(80, 'Bắt đầu học lập trình nên học ngôn ngữ gì đầu tiên', '<p>Em muốn lập tr&igrave;nh web cho newbie n&ecirc;n học ng&ocirc;n ngữ g&igrave; đầu ti&ecirc;n ạ</p>', 13, '2020-09-18 06:20:31', '2020-09-18 06:20:31', 'bat-dau-hoc-lap-trinh-nen-hoc-ngon-ngu-gi-dau-tien', 0, NULL, 0, 0, 12),
(81, 'Nên chọn PTIT, HUST hay FPT?', '<p>Em so kết quả th&igrave; được khoảng 28.5đ trong k&igrave; thi vừa qua (Em 2k2). Vậy em n&ecirc;n chọn trường n&agrave;o trong 3 trường FPT, HUST v&agrave; PTIT ạ?<br />\r\nEm kh&aacute; tự tin với điểm của m&igrave;nh, b&ecirc;n FPT em c&ograve;n c&oacute; học bổng nữa ạ. Nhưng vẫn ph&acirc;n v&acirc;n về chất lượng giảng dạy của từng trường cũng như cơ hội sau n&agrave;y.</p>\r\n\r\n<p>mong anh chị tư vấn gi&uacute;p em ạ! Em cảm ơn!</p>', 10, '2020-09-18 06:21:50', '2020-09-26 09:49:29', 'nen-chon-ptit-hust-hay-fpt', 0, NULL, 1, 0, 11),
(82, 'Làm web thì cần những gì', '<p>Em đang muốn tập l&agrave;m web cả back-end v&agrave; front-end th&igrave; cần học những g&igrave; ạ . Tiếp theo mong ad ra những kho&aacute; học Python mới . Em c&aacute;m ơn.</p>', 12, '2020-09-18 06:22:51', '2020-09-26 09:49:24', 'lam-web-thi-can-nhung-gi', 0, NULL, 1, 0, 12),
(83, 'Kiểu dữ liệu long trong vòng lặp for', '<p>Mọi người cho e hỏi ch&uacute;t l&agrave; tại sao e kh&ocirc;ng thể sử dụng kiểu dữ liệu long trong v&ograve;ng lặp for đc vậy ạ?</p>', 14, '2020-09-18 06:26:16', '2020-10-08 10:05:51', 'kieu-du-lieu-long-trong-vong-lap-for', 0, NULL, 3, 0, 13),
(84, 'Thi đại học 2021', '<p><strong>Em sinh năm 2003 năm sau em thi&nbsp;đại học, kh&ocirc;ng biết c&ocirc;ng nghệ th&ocirc;ng tin thi khối n&agrave;o&nbsp;ạ.</strong><br />\r\n<strong>C&oacute; nhiều trường thấy khối kh&aacute;c nhau kh&ocirc;ng biết chọn khối n&agrave;o&nbsp;để thi v&agrave;o c&ocirc;ng nghệ th&ocirc;ng tin.</strong><br />\r\n<strong>Với lại em muốn học&nbsp;ở&nbsp;Đ&agrave; Nẵng kh&ocirc;ng biết l&agrave; trường n&agrave;o dạy CNTT tốt&nbsp;ạ. Em cảm&nbsp;ơn!</strong></p>', 17, '2020-09-18 06:27:25', '2020-10-09 09:32:35', 'thi-dai-hoc-2021', 0, NULL, 22, 0, 11);

-- --------------------------------------------------------

--
-- Table structure for table `forum_cate`
--

CREATE TABLE `forum_cate` (
  `id_cate` int(10) UNSIGNED NOT NULL,
  `name_cate` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL,
  `color_cate` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `img_cate` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `forum_cate`
--

INSERT INTO `forum_cate` (`id_cate`, `name_cate`, `created_at`, `updated_at`, `color_cate`, `img_cate`) VALUES
(11, 'Chém Gió', '2020-07-01 02:48:23', '2020-07-01 02:48:23', '#007bff', '/public/images/cate1.jpg'),
(12, 'Thảo Luận', '2020-07-01 02:48:33', '2020-07-01 02:48:33', '#ff8c00', '/public/images/cate2.jpg'),
(13, 'Học Tập', '2020-07-01 02:48:47', '2020-07-01 02:48:47', '#dc3545', '/public/images/cate3.jpg');

-- --------------------------------------------------------

--
-- Table structure for table `lesson`
--

CREATE TABLE `lesson` (
  `id_lesson` int(10) UNSIGNED NOT NULL,
  `title_lesson` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `url_lesson` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `course_parent` int(11) NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL,
  `num_lesson` int(11) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `lesson`
--

INSERT INTO `lesson` (`id_lesson`, `title_lesson`, `url_lesson`, `course_parent`, `created_at`, `updated_at`, `num_lesson`) VALUES
(20, 'Cài đặt Dev-C++ IDE', 'https://www.youtube.com/embed/LKom13wmYtk', 14, '2020-07-02 06:34:43', '2020-07-02 06:34:43', 1),
(21, 'C - Bài 1: Giới thiệu nội dung chính', 'https://www.youtube.com/embed/SbxGbVFxvuk', 14, '2020-07-02 06:35:14', '2020-07-02 06:35:14', 2),
(22, 'C - Bài 2: Chương trình C đầu tiên', 'https://www.youtube.com/embed/D-HX5G3H3d4', 14, '2020-07-02 06:35:34', '2020-07-02 06:35:34', 3),
(23, 'C - Bài 3: Phép cộng hai số nguyên', 'https://www.youtube.com/embed/-EzTL8JUZWo', 14, '2020-07-02 06:44:33', '2020-07-02 06:44:33', 4),
(24, 'C - Bài 4: Các kiểu dữ liệu cơ bản', 'https://www.youtube.com/embed/jtS7g65zrWU', 14, '2020-07-02 06:45:28', '2020-07-02 06:45:28', 5),
(25, 'C - Bài 5: Biến trong ngôn ngữ C', 'https://www.youtube.com/embed/nQ93_TpS14M', 14, '2020-07-02 06:51:38', '2020-07-02 06:51:38', 6),
(26, 'C - Bài 6: Các chuẩn vào ra dữ liệu', 'https://www.youtube.com/embed/0sOCDL9DrCw', 14, '2020-07-02 06:52:09', '2020-07-02 06:52:09', 7),
(27, 'C - Bài 7: Hằng số', 'https://www.youtube.com/embed/mhVsAfF9UfM', 14, '2020-07-02 06:52:32', '2020-07-02 06:52:32', 8),
(28, 'C - Bài 8: Toán tử - Phép toán', 'https://www.youtube.com/embed/AlxkkNlVQd8', 14, '2020-07-02 06:52:58', '2020-07-02 06:52:58', 9);

-- --------------------------------------------------------

--
-- Table structure for table `migrations`
--

CREATE TABLE `migrations` (
  `id` int(10) UNSIGNED NOT NULL,
  `migration` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `batch` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- --------------------------------------------------------

--
-- Table structure for table `notify`
--

CREATE TABLE `notify` (
  `id_notify` int(10) UNSIGNED NOT NULL,
  `content_notify` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `id_send` int(11) NOT NULL,
  `id_blog` int(11) NOT NULL,
  `id_forum` int(11) NOT NULL,
  `id_cmt` int(11) NOT NULL,
  `id_rec` int(11) NOT NULL,
  `type_notify` int(11) NOT NULL,
  `status_notify` int(11) NOT NULL,
  `link_notify` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `notify`
--

INSERT INTO `notify` (`id_notify`, `content_notify`, `id_send`, `id_blog`, `id_forum`, `id_cmt`, `id_rec`, `type_notify`, `status_notify`, `link_notify`, `created_at`, `updated_at`) VALUES
(255, 'đã bình luận về bài viết của bạn', 8, 0, 75, 0, 8, 1, 0, 'http://localhost/codehero/#/forum/75/co-loi-trong-viec-nhap-ki-tu-getchar-trong-c.xml#comment_358', '2020-09-15 15:24:40', '2020-09-15 15:24:40'),
(256, 'đã bình luận về bài viết của bạn', 8, 0, 75, 0, 8, 1, 0, 'http://localhost/codehero/#/forum/75/co-loi-trong-viec-nhap-ki-tu-getchar-trong-c.xml#comment_359', '2020-09-15 15:24:44', '2020-09-15 15:24:44'),
(257, 'đã trả lời bình luận của bạn trong <span class=\"name_user_notify\"></span>', 8, 0, 75, 358, 8, 0, 0, 'http://localhost/codehero/#/forum/75/co-loi-trong-viec-nhap-ki-tu-getchar-trong-c.xml#comment_360', '2020-09-15 15:24:48', '2020-09-15 15:24:48'),
(258, 'đã trả lời bình luận của bạn trong <span class=\"name_user_notify\"></span>', 8, 0, 75, 359, 8, 0, 0, 'http://localhost/codehero/#/forum/75/co-loi-trong-viec-nhap-ki-tu-getchar-trong-c.xml#comment_361', '2020-09-16 06:09:52', '2020-09-16 06:09:52'),
(259, 'đã trả lời bình luận của bạn trong <span class=\"name_user_notify\"></span>', 8, 0, 75, 359, 8, 0, 0, 'http://localhost/codehero/#/forum/75/co-loi-trong-viec-nhap-ki-tu-getchar-trong-c.xml#comment_362', '2020-09-16 06:09:52', '2020-09-16 06:09:52'),
(260, 'đã trả lời bình luận của bạn trong <span class=\"name_user_notify\"></span>', 8, 0, 75, 359, 8, 0, 0, 'http://localhost/codehero/#/forum/75/co-loi-trong-viec-nhap-ki-tu-getchar-trong-c.xml#comment_363', '2020-09-16 06:09:53', '2020-09-16 06:09:53'),
(261, 'đã trả lời bình luận của bạn trong <span class=\"name_user_notify\"></span>', 8, 0, 75, 359, 8, 0, 0, 'http://localhost/codehero/#/forum/75/co-loi-trong-viec-nhap-ki-tu-getchar-trong-c.xml#comment_364', '2020-09-16 06:09:53', '2020-09-16 06:09:53'),
(262, 'đã bình luận về bài viết của bạn', 8, 0, 75, 0, 8, 1, 0, 'http://localhost/codehero/#/forum/75/co-loi-trong-viec-nhap-ki-tu-getchar-trong-c.xml#comment_365', '2020-09-16 10:08:02', '2020-09-16 10:08:02'),
(263, 'đã bình luận về bài viết của bạn', 13, 0, 84, 0, 17, 1, 0, 'http://localhost/codehero/#/forum/84/thi-dai-hoc-2021.xml#comment_366', '2020-09-18 06:30:38', '2020-09-18 06:30:38'),
(264, 'đã bình luận về bài viết của bạn', 13, 0, 84, 0, 17, 1, 1, 'http://localhost/codehero/#/forum/84/thi-dai-hoc-2021.xml#comment_367', '2020-09-18 06:31:13', '2020-09-18 06:31:29'),
(265, 'đã trả lời bình luận của bạn trong <span class=\"name_user_notify\"></span>', 17, 0, 84, 367, 13, 0, 0, 'http://localhost/codehero/#/forum/84/thi-dai-hoc-2021.xml#comment_367#comment_368', '2020-09-18 06:31:45', '2020-09-18 06:31:45'),
(266, 'đã bình luận về bài viết của bạn', 8, 0, 84, 0, 17, 1, 0, 'http://localhost/codehero/#/forum/84/thi-dai-hoc-2021.xml#comment_369', '2020-09-18 06:32:06', '2020-09-18 06:32:06'),
(267, 'đã trả lời bình luận của bạn trong <span class=\"name_user_notify\"></span>', 17, 0, 84, 369, 8, 0, 0, 'http://localhost/codehero/#/forum/84/thi-dai-hoc-2021.xml#comment_370', '2020-09-18 06:32:43', '2020-09-18 06:32:43'),
(268, 'đã bình luận về bài viết của bạn', 17, 0, 84, 0, 17, 1, 0, 'http://localhost/codehero/#/forum/84/thi-dai-hoc-2021.xml#comment_371', '2020-09-18 06:32:57', '2020-09-18 06:32:57'),
(269, 'đã bình luận về bài viết của bạn', 12, 0, 84, 0, 17, 1, 0, 'http://localhost/codehero/#/forum/84/thi-dai-hoc-2021.xml#comment_372', '2020-09-18 06:33:58', '2020-09-18 06:33:58'),
(270, 'đã trả lời bình luận của bạn trong <span class=\"name_user_notify\"></span>', 17, 0, 84, 372, 12, 0, 0, 'http://localhost/codehero/#/forum/84/thi-dai-hoc-2021.xml#comment_373', '2020-09-18 06:34:27', '2020-09-18 06:34:27'),
(271, 'đã bình luận về bài viết của bạn', 15, 0, 84, 0, 17, 1, 0, 'http://localhost/codehero/#/forum/84/thi-dai-hoc-2021.xml#comment_374', '2020-10-09 08:15:46', '2020-10-09 08:15:46'),
(272, 'đã trả lời bình luận của bạn trong <span class=\"name_user_notify\"></span>', 13, 0, 84, 374, 15, 0, 0, 'http://localhost/codehero/#/forum/84/thi-dai-hoc-2021.xml#comment_375', '2020-10-09 08:16:31', '2020-10-09 08:16:31');

-- --------------------------------------------------------

--
-- Table structure for table `rate`
--

CREATE TABLE `rate` (
  `id` int(10) UNSIGNED NOT NULL,
  `id_course` int(11) NOT NULL,
  `id_auth` int(11) NOT NULL,
  `star_rate` int(11) NOT NULL,
  `comment` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `rate`
--

INSERT INTO `rate` (`id`, `id_course`, `id_auth`, `star_rate`, `comment`, `created_at`, `updated_at`) VALUES
(21, 14, 11, 5, 'Good good', '2020-07-02 18:20:03', '2020-07-02 18:20:03'),
(22, 14, 8, 3, 'Dở tệ .-.', '2020-07-02 18:25:20', '2020-07-02 18:25:20'),
(23, 14, 12, 4, 'khá tốt. Khóa học rất hay', '2020-07-02 18:26:33', '2020-07-02 18:26:33'),
(24, 14, 13, 5, 'Rất hay', '2020-07-02 19:37:20', '2020-07-02 19:37:20'),
(27, 14, 14, 5, 'Khóa học cực kì tuyệt vời', '2020-09-18 07:07:54', '2020-09-18 07:07:54');

-- --------------------------------------------------------

--
-- Table structure for table `react`
--

CREATE TABLE `react` (
  `id` int(10) UNSIGNED NOT NULL,
  `id_post` int(11) NOT NULL,
  `id_cmt` int(11) NOT NULL,
  `id_auth` int(11) NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `react`
--

INSERT INTO `react` (`id`, `id_post`, `id_cmt`, `id_auth`, `created_at`, `updated_at`) VALUES
(317, 84, 0, 14, '2020-10-08 09:12:34', '2020-10-08 09:12:34');

-- --------------------------------------------------------

--
-- Table structure for table `users`
--

CREATE TABLE `users` (
  `id` bigint(20) UNSIGNED NOT NULL,
  `name` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `email` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `email_verified_at` timestamp NULL DEFAULT NULL,
  `password` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `remember_token` varchar(100) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Indexes for dumped tables
--

--
-- Indexes for table `accounts`
--
ALTER TABLE `accounts`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `account_course`
--
ALTER TABLE `account_course`
  ADD PRIMARY KEY (`ID`);

--
-- Indexes for table `blog`
--
ALTER TABLE `blog`
  ADD PRIMARY KEY (`id_blog`);

--
-- Indexes for table `blog_cate`
--
ALTER TABLE `blog_cate`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `cmt`
--
ALTER TABLE `cmt`
  ADD PRIMARY KEY (`id_cmt`);

--
-- Indexes for table `course`
--
ALTER TABLE `course`
  ADD PRIMARY KEY (`id_course`);

--
-- Indexes for table `course_cate`
--
ALTER TABLE `course_cate`
  ADD PRIMARY KEY (`id_cate`);

--
-- Indexes for table `document`
--
ALTER TABLE `document`
  ADD PRIMARY KEY (`id_doc`);

--
-- Indexes for table `document_cate`
--
ALTER TABLE `document_cate`
  ADD PRIMARY KEY (`id_cate`);

--
-- Indexes for table `failed_jobs`
--
ALTER TABLE `failed_jobs`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `forum`
--
ALTER TABLE `forum`
  ADD PRIMARY KEY (`id_post`);

--
-- Indexes for table `forum_cate`
--
ALTER TABLE `forum_cate`
  ADD PRIMARY KEY (`id_cate`);

--
-- Indexes for table `lesson`
--
ALTER TABLE `lesson`
  ADD PRIMARY KEY (`id_lesson`);

--
-- Indexes for table `migrations`
--
ALTER TABLE `migrations`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `notify`
--
ALTER TABLE `notify`
  ADD PRIMARY KEY (`id_notify`);

--
-- Indexes for table `rate`
--
ALTER TABLE `rate`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `react`
--
ALTER TABLE `react`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `users`
--
ALTER TABLE `users`
  ADD PRIMARY KEY (`id`),
  ADD UNIQUE KEY `users_email_unique` (`email`);

--
-- AUTO_INCREMENT for dumped tables
--

--
-- AUTO_INCREMENT for table `accounts`
--
ALTER TABLE `accounts`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=27;

--
-- AUTO_INCREMENT for table `account_course`
--
ALTER TABLE `account_course`
  MODIFY `ID` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=117;

--
-- AUTO_INCREMENT for table `blog`
--
ALTER TABLE `blog`
  MODIFY `id_blog` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=32;

--
-- AUTO_INCREMENT for table `blog_cate`
--
ALTER TABLE `blog_cate`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=9;

--
-- AUTO_INCREMENT for table `cmt`
--
ALTER TABLE `cmt`
  MODIFY `id_cmt` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=376;

--
-- AUTO_INCREMENT for table `course`
--
ALTER TABLE `course`
  MODIFY `id_course` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=28;

--
-- AUTO_INCREMENT for table `course_cate`
--
ALTER TABLE `course_cate`
  MODIFY `id_cate` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=11;

--
-- AUTO_INCREMENT for table `document`
--
ALTER TABLE `document`
  MODIFY `id_doc` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=673;

--
-- AUTO_INCREMENT for table `document_cate`
--
ALTER TABLE `document_cate`
  MODIFY `id_cate` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=8;

--
-- AUTO_INCREMENT for table `failed_jobs`
--
ALTER TABLE `failed_jobs`
  MODIFY `id` bigint(20) UNSIGNED NOT NULL AUTO_INCREMENT;

--
-- AUTO_INCREMENT for table `forum`
--
ALTER TABLE `forum`
  MODIFY `id_post` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=85;

--
-- AUTO_INCREMENT for table `forum_cate`
--
ALTER TABLE `forum_cate`
  MODIFY `id_cate` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=14;

--
-- AUTO_INCREMENT for table `lesson`
--
ALTER TABLE `lesson`
  MODIFY `id_lesson` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=33;

--
-- AUTO_INCREMENT for table `migrations`
--
ALTER TABLE `migrations`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=16;

--
-- AUTO_INCREMENT for table `notify`
--
ALTER TABLE `notify`
  MODIFY `id_notify` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=273;

--
-- AUTO_INCREMENT for table `rate`
--
ALTER TABLE `rate`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=28;

--
-- AUTO_INCREMENT for table `react`
--
ALTER TABLE `react`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=318;

--
-- AUTO_INCREMENT for table `users`
--
ALTER TABLE `users`
  MODIFY `id` bigint(20) UNSIGNED NOT NULL AUTO_INCREMENT;
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
